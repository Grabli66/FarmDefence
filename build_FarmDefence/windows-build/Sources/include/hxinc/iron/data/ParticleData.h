// Generated by Haxe 4.0.0-preview.4+6e012c1
#ifndef INCLUDED_iron_data_ParticleData
#define INCLUDED_iron_data_ParticleData

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_iron_data_Data
#include <hxinc/iron/data/Data.h>
#endif
HX_DECLARE_CLASS2(iron,data,Data)
HX_DECLARE_CLASS2(iron,data,ParticleData)
HX_DECLARE_CLASS2(iron,data,TParticleData)

namespace iron{
namespace data{


class HXCPP_CLASS_ATTRIBUTES ParticleData_obj : public  ::iron::data::Data_obj
{
	public:
		typedef  ::iron::data::Data_obj super;
		typedef ParticleData_obj OBJ_;
		ParticleData_obj();

	public:
		enum { _hx_ClassId = 0x18cc8622 };

		void __construct( ::iron::data::TParticleData raw, ::Dynamic done);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="iron.data.ParticleData")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"iron.data.ParticleData"); }
		static hx::ObjectPtr< ParticleData_obj > __new( ::iron::data::TParticleData raw, ::Dynamic done);
		static hx::ObjectPtr< ParticleData_obj > __alloc(hx::Ctx *_hx_ctx, ::iron::data::TParticleData raw, ::Dynamic done);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~ParticleData_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("ParticleData",b0,a7,63,a4); }

		static void parse(::String name,::String id, ::Dynamic done);
		static ::Dynamic parse_dyn();

		::String name;
		 ::iron::data::TParticleData raw;
};

} // end namespace iron
} // end namespace data

#endif /* INCLUDED_iron_data_ParticleData */ 
