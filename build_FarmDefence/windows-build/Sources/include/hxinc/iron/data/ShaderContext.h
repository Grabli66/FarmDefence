// Generated by Haxe 4.0.0-preview.4+6e012c1
#ifndef INCLUDED_iron_data_ShaderContext
#define INCLUDED_iron_data_ShaderContext

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(iron,data,ShaderContext)
HX_DECLARE_CLASS2(iron,data,TBindTexture)
HX_DECLARE_CLASS2(iron,data,TShaderConstant)
HX_DECLARE_CLASS2(iron,data,TShaderContext)
HX_DECLARE_CLASS2(iron,data,TShaderOverride)
HX_DECLARE_CLASS2(iron,data,TTextureUnit)
HX_DECLARE_CLASS2(kha,graphics4,BlendingFactor)
HX_DECLARE_CLASS2(kha,graphics4,BlendingOperation)
HX_DECLARE_CLASS2(kha,graphics4,CompareMode)
HX_DECLARE_CLASS2(kha,graphics4,ConstantLocation)
HX_DECLARE_CLASS2(kha,graphics4,CullMode)
HX_DECLARE_CLASS2(kha,graphics4,Graphics)
HX_DECLARE_CLASS2(kha,graphics4,MipMapFilter)
HX_DECLARE_CLASS2(kha,graphics4,PipelineState)
HX_DECLARE_CLASS2(kha,graphics4,PipelineStateBase)
HX_DECLARE_CLASS2(kha,graphics4,TextureAddressing)
HX_DECLARE_CLASS2(kha,graphics4,TextureFilter)
HX_DECLARE_CLASS2(kha,graphics4,TextureUnit)
HX_DECLARE_CLASS2(kha,graphics4,VertexStructure)

namespace iron{
namespace data{


class HXCPP_CLASS_ATTRIBUTES ShaderContext_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef ShaderContext_obj OBJ_;
		ShaderContext_obj();

	public:
		enum { _hx_ClassId = 0x44627278 };

		void __construct( ::iron::data::TShaderContext raw, ::Dynamic done, ::iron::data::TShaderOverride overrideContext);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="iron.data.ShaderContext")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"iron.data.ShaderContext"); }
		static hx::ObjectPtr< ShaderContext_obj > __new( ::iron::data::TShaderContext raw, ::Dynamic done, ::iron::data::TShaderOverride overrideContext);
		static hx::ObjectPtr< ShaderContext_obj > __alloc(hx::Ctx *_hx_ctx, ::iron::data::TShaderContext raw, ::Dynamic done, ::iron::data::TShaderOverride overrideContext);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~ShaderContext_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("ShaderContext",2a,ad,08,dd); }

		static void __boot();
		static  ::kha::graphics4::VertexStructure structureRect;
		static  ::kha::graphics4::VertexStructure getStructureRect();
		static ::Dynamic getStructureRect_dyn();

		 ::iron::data::TShaderContext raw;
		 ::kha::graphics4::PipelineState pipeState;
		::Array< ::Dynamic> constants;
		::Array< ::Dynamic> textureUnits;
		::Array< bool > paramsSet;
		 ::kha::graphics4::VertexStructure structure;
		int instancingType;
		 ::iron::data::TShaderOverride overrideContext;
		void compile( ::Dynamic done);
		::Dynamic compile_dyn();

		void finishCompile( ::Dynamic done);
		::Dynamic finishCompile_dyn();

		int sizeToVD(int size);
		::Dynamic sizeToVD_dyn();

		void parseVertexStructure();
		::Dynamic parseVertexStructure_dyn();

		void deleteShader( ::Dynamic shader);
		::Dynamic deleteShader_dyn();

		void _hx_delete();
		::Dynamic _hx_delete_dyn();

		 ::kha::graphics4::CompareMode getCompareMode(::String s);
		::Dynamic getCompareMode_dyn();

		 ::kha::graphics4::CullMode getCullMode(::String s);
		::Dynamic getCullMode_dyn();

		 ::kha::graphics4::BlendingOperation getBlendingOperation(::String s);
		::Dynamic getBlendingOperation_dyn();

		 ::kha::graphics4::BlendingFactor getBlendingFactor(::String s);
		::Dynamic getBlendingFactor_dyn();

		 ::kha::graphics4::TextureAddressing getTextureAddresing(::String s);
		::Dynamic getTextureAddresing_dyn();

		 ::kha::graphics4::TextureFilter getTextureFilter(::String s);
		::Dynamic getTextureFilter_dyn();

		 ::kha::graphics4::MipMapFilter getMipmapFilter(::String s);
		::Dynamic getMipmapFilter_dyn();

		void addConstant( ::iron::data::TShaderConstant c);
		::Dynamic addConstant_dyn();

		void addTexture( ::iron::data::TTextureUnit tu);
		::Dynamic addTexture_dyn();

		void setTextureParameters(::Dynamic g,int unitIndex, ::iron::data::TBindTexture tex);
		::Dynamic setTextureParameters_dyn();

};

} // end namespace iron
} // end namespace data

#endif /* INCLUDED_iron_data_ShaderContext */ 
