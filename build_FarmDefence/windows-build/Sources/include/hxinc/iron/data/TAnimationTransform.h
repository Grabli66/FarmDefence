// Generated by Haxe 4.0.0-preview.4+6e012c1
#ifndef INCLUDED_iron_data_TAnimationTransform
#define INCLUDED_iron_data_TAnimationTransform

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(iron,data,TAnimationTransform)
HX_DECLARE_CLASS2(kha,arrays,Float32ArrayPrivate)

namespace iron{
namespace data{


class HXCPP_CLASS_ATTRIBUTES TAnimationTransform_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef TAnimationTransform_obj OBJ_;
		TAnimationTransform_obj();

	public:
		enum { _hx_ClassId = 0x18979b0a };

		void __construct(::String type,::String name, ::kha::arrays::Float32ArrayPrivate values, ::Dynamic value);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="iron.data.TAnimationTransform")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"iron.data.TAnimationTransform"); }
		static hx::ObjectPtr< TAnimationTransform_obj > __new(::String type,::String name, ::kha::arrays::Float32ArrayPrivate values, ::Dynamic value);
		static hx::ObjectPtr< TAnimationTransform_obj > __alloc(hx::Ctx *_hx_ctx,::String type,::String name, ::kha::arrays::Float32ArrayPrivate values, ::Dynamic value);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~TAnimationTransform_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("TAnimationTransform",3c,e7,91,78); }

		::String type;
		::String name;
		 ::kha::arrays::Float32ArrayPrivate values;
		 ::Dynamic value;
};

} // end namespace iron
} // end namespace data

#endif /* INCLUDED_iron_data_TAnimationTransform */ 
