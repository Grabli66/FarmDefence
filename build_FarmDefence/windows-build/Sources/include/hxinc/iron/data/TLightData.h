// Generated by Haxe 4.0.0-preview.4+6e012c1
#ifndef INCLUDED_iron_data_TLightData
#define INCLUDED_iron_data_TLightData

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(iron,data,TLightData)
HX_DECLARE_CLASS2(kha,arrays,Float32ArrayPrivate)

namespace iron{
namespace data{


class HXCPP_CLASS_ATTRIBUTES TLightData_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef TLightData_obj OBJ_;
		TLightData_obj();

	public:
		enum { _hx_ClassId = 0x1191d482 };

		void __construct(::String name,::String type, ::kha::arrays::Float32ArrayPrivate color,float strength, ::Dynamic cast_shadow, ::Dynamic near_plane, ::Dynamic far_plane, ::Dynamic fov, ::Dynamic shadows_bias, ::Dynamic shadowmap_size, ::Dynamic shadowmap_cube, ::Dynamic spot_size, ::Dynamic spot_blend, ::Dynamic light_size,::String color_texture, ::Dynamic size, ::Dynamic size_y);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="iron.data.TLightData")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"iron.data.TLightData"); }
		static hx::ObjectPtr< TLightData_obj > __new(::String name,::String type, ::kha::arrays::Float32ArrayPrivate color,float strength, ::Dynamic cast_shadow, ::Dynamic near_plane, ::Dynamic far_plane, ::Dynamic fov, ::Dynamic shadows_bias, ::Dynamic shadowmap_size, ::Dynamic shadowmap_cube, ::Dynamic spot_size, ::Dynamic spot_blend, ::Dynamic light_size,::String color_texture, ::Dynamic size, ::Dynamic size_y);
		static hx::ObjectPtr< TLightData_obj > __alloc(hx::Ctx *_hx_ctx,::String name,::String type, ::kha::arrays::Float32ArrayPrivate color,float strength, ::Dynamic cast_shadow, ::Dynamic near_plane, ::Dynamic far_plane, ::Dynamic fov, ::Dynamic shadows_bias, ::Dynamic shadowmap_size, ::Dynamic shadowmap_cube, ::Dynamic spot_size, ::Dynamic spot_blend, ::Dynamic light_size,::String color_texture, ::Dynamic size, ::Dynamic size_y);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~TLightData_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("TLightData",2c,6b,c3,75); }

		::String name;
		::String type;
		 ::kha::arrays::Float32ArrayPrivate color;
		float strength;
		 ::Dynamic cast_shadow;
		 ::Dynamic near_plane;
		 ::Dynamic far_plane;
		 ::Dynamic fov;
		 ::Dynamic shadows_bias;
		 ::Dynamic shadowmap_size;
		 ::Dynamic shadowmap_cube;
		 ::Dynamic spot_size;
		 ::Dynamic spot_blend;
		 ::Dynamic light_size;
		::String color_texture;
		 ::Dynamic size;
		 ::Dynamic size_y;
};

} // end namespace iron
} // end namespace data

#endif /* INCLUDED_iron_data_TLightData */ 
