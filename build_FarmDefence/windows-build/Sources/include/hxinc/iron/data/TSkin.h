// Generated by Haxe 4.0.0-preview.4+6e012c1
#ifndef INCLUDED_iron_data_TSkin
#define INCLUDED_iron_data_TSkin

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(iron,data,TConstraint)
HX_DECLARE_CLASS2(iron,data,TSkin)
HX_DECLARE_CLASS2(iron,data,TTransform)
HX_DECLARE_CLASS2(kha,arrays,Float32ArrayPrivate)
HX_DECLARE_CLASS2(kha,arrays,Uint32ArrayPrivate)

namespace iron{
namespace data{


class HXCPP_CLASS_ATTRIBUTES TSkin_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef TSkin_obj OBJ_;
		TSkin_obj();

	public:
		enum { _hx_ClassId = 0x0203c43f };

		void __construct( ::iron::data::TTransform transform,::Array< ::String > bone_ref_array, ::kha::arrays::Float32ArrayPrivate bone_len_array,::Array< ::Dynamic> transformsI, ::kha::arrays::Uint32ArrayPrivate bone_count_array, ::kha::arrays::Uint32ArrayPrivate bone_index_array, ::kha::arrays::Float32ArrayPrivate bone_weight_array,::Array< ::Dynamic> constraints);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="iron.data.TSkin")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"iron.data.TSkin"); }
		static hx::ObjectPtr< TSkin_obj > __new( ::iron::data::TTransform transform,::Array< ::String > bone_ref_array, ::kha::arrays::Float32ArrayPrivate bone_len_array,::Array< ::Dynamic> transformsI, ::kha::arrays::Uint32ArrayPrivate bone_count_array, ::kha::arrays::Uint32ArrayPrivate bone_index_array, ::kha::arrays::Float32ArrayPrivate bone_weight_array,::Array< ::Dynamic> constraints);
		static hx::ObjectPtr< TSkin_obj > __alloc(hx::Ctx *_hx_ctx, ::iron::data::TTransform transform,::Array< ::String > bone_ref_array, ::kha::arrays::Float32ArrayPrivate bone_len_array,::Array< ::Dynamic> transformsI, ::kha::arrays::Uint32ArrayPrivate bone_count_array, ::kha::arrays::Uint32ArrayPrivate bone_index_array, ::kha::arrays::Float32ArrayPrivate bone_weight_array,::Array< ::Dynamic> constraints);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~TSkin_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("TSkin",f1,fc,d6,94); }

		 ::iron::data::TTransform transform;
		::Array< ::String > bone_ref_array;
		 ::kha::arrays::Float32ArrayPrivate bone_len_array;
		::Array< ::Dynamic> transformsI;
		 ::kha::arrays::Uint32ArrayPrivate bone_count_array;
		 ::kha::arrays::Uint32ArrayPrivate bone_index_array;
		 ::kha::arrays::Float32ArrayPrivate bone_weight_array;
		::Array< ::Dynamic> constraints;
};

} // end namespace iron
} // end namespace data

#endif /* INCLUDED_iron_data_TSkin */ 
