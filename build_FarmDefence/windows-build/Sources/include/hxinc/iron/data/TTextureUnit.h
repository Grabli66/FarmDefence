// Generated by Haxe 4.0.0-preview.4+6e012c1
#ifndef INCLUDED_iron_data_TTextureUnit
#define INCLUDED_iron_data_TTextureUnit

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_STACK_FRAME(_hx_pos_d14b9e22bb439a85_262_new)
HX_DECLARE_CLASS2(iron,data,TTextureUnit)

namespace iron{
namespace data{


class HXCPP_CLASS_ATTRIBUTES TTextureUnit_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef TTextureUnit_obj OBJ_;
		TTextureUnit_obj();

	public:
		enum { _hx_ClassId = 0x766743e1 };

		void __construct(::String name, ::Dynamic is_image,::String link);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="iron.data.TTextureUnit")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"iron.data.TTextureUnit"); }

		hx::ObjectPtr< TTextureUnit_obj > __new(::String name, ::Dynamic is_image,::String link) {
			hx::ObjectPtr< TTextureUnit_obj > __this = new TTextureUnit_obj();
			__this->__construct(name,is_image,link);
			return __this;
		}

		static hx::ObjectPtr< TTextureUnit_obj > __alloc(hx::Ctx *_hx_ctx,::String name, ::Dynamic is_image,::String link) {
			TTextureUnit_obj *__this = (TTextureUnit_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(TTextureUnit_obj), true, "iron.data.TTextureUnit"));
			*(void **)__this = TTextureUnit_obj::_hx_vtable;
{
            	HX_STACKFRAME(&_hx_pos_d14b9e22bb439a85_262_new)
HXDLIN( 262)		( ( ::iron::data::TTextureUnit)(__this) )->name = name;
HXDLIN( 262)		( ( ::iron::data::TTextureUnit)(__this) )->is_image = is_image;
HXDLIN( 262)		( ( ::iron::data::TTextureUnit)(__this) )->link = link;
            	}
		
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~TTextureUnit_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("TTextureUnit",0b,59,2b,7b); }

		::String name;
		 ::Dynamic is_image;
		::String link;
};

} // end namespace iron
} // end namespace data

#endif /* INCLUDED_iron_data_TTextureUnit */ 
