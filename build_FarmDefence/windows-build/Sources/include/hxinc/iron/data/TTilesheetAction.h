// Generated by Haxe 4.0.0-preview.4+6e012c1
#ifndef INCLUDED_iron_data_TTilesheetAction
#define INCLUDED_iron_data_TTilesheetAction

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_STACK_FRAME(_hx_pos_f9d71c98c0dc8cd7_383_new)
HX_DECLARE_CLASS2(iron,data,TTilesheetAction)

namespace iron{
namespace data{


class HXCPP_CLASS_ATTRIBUTES TTilesheetAction_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef TTilesheetAction_obj OBJ_;
		TTilesheetAction_obj();

	public:
		enum { _hx_ClassId = 0x144e2f29 };

		void __construct(::String name,int start,int end,bool loop);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="iron.data.TTilesheetAction")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"iron.data.TTilesheetAction"); }

		hx::ObjectPtr< TTilesheetAction_obj > __new(::String name,int start,int end,bool loop) {
			hx::ObjectPtr< TTilesheetAction_obj > __this = new TTilesheetAction_obj();
			__this->__construct(name,start,end,loop);
			return __this;
		}

		static hx::ObjectPtr< TTilesheetAction_obj > __alloc(hx::Ctx *_hx_ctx,::String name,int start,int end,bool loop) {
			TTilesheetAction_obj *__this = (TTilesheetAction_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(TTilesheetAction_obj), true, "iron.data.TTilesheetAction"));
			*(void **)__this = TTilesheetAction_obj::_hx_vtable;
{
            	HX_STACKFRAME(&_hx_pos_f9d71c98c0dc8cd7_383_new)
HXDLIN( 383)		( ( ::iron::data::TTilesheetAction)(__this) )->name = name;
HXDLIN( 383)		( ( ::iron::data::TTilesheetAction)(__this) )->start = start;
HXDLIN( 383)		( ( ::iron::data::TTilesheetAction)(__this) )->end = end;
HXDLIN( 383)		( ( ::iron::data::TTilesheetAction)(__this) )->loop = loop;
            	}
		
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~TTilesheetAction_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("TTilesheetAction",53,21,15,64); }

		::String name;
		int start;
		int end;
		bool loop;
};

} // end namespace iron
} // end namespace data

#endif /* INCLUDED_iron_data_TTilesheetAction */ 
