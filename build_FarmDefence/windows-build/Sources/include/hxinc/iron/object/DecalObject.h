// Generated by Haxe 4.0.0-preview.4+6e012c1
#ifndef INCLUDED_iron_object_DecalObject
#define INCLUDED_iron_object_DecalObject

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_iron_object_Object
#include <hxinc/iron/object/Object.h>
#endif
HX_DECLARE_CLASS2(iron,object,DecalObject)
HX_DECLARE_CLASS2(iron,object,Object)

namespace iron{
namespace object{


class HXCPP_CLASS_ATTRIBUTES DecalObject_obj : public  ::iron::object::Object_obj
{
	public:
		typedef  ::iron::object::Object_obj super;
		typedef DecalObject_obj OBJ_;
		DecalObject_obj();

	public:
		enum { _hx_ClassId = 0x6b9505fd };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="iron.object.DecalObject")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"iron.object.DecalObject"); }
		static hx::ObjectPtr< DecalObject_obj > __new();
		static hx::ObjectPtr< DecalObject_obj > __alloc(hx::Ctx *_hx_ctx);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~DecalObject_obj();

		HX_DO_RTTI_ALL;
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("DecalObject",ac,ad,d0,2c); }

};

} // end namespace iron
} // end namespace object

#endif /* INCLUDED_iron_object_DecalObject */ 
