// Generated by Haxe 4.0.0-preview.4+6e012c1
#include <hxcpp.h>

#ifndef INCLUDED_armory_renderpath_Inc
#include <hxinc/armory/renderpath/Inc.h>
#endif
#ifndef INCLUDED_armory_renderpath_RenderPathCreator
#include <hxinc/armory/renderpath/RenderPathCreator.h>
#endif
#ifndef INCLUDED_armory_renderpath_RenderPathForward
#include <hxinc/armory/renderpath/RenderPathForward.h>
#endif
#ifndef INCLUDED_iron_RenderPath
#include <hxinc/iron/RenderPath.h>
#endif
#ifndef INCLUDED_iron_Scene
#include <hxinc/iron/Scene.h>
#endif
#ifndef INCLUDED_iron_object_LightObject
#include <hxinc/iron/object/LightObject.h>
#endif
#ifndef INCLUDED_iron_object_Object
#include <hxinc/iron/object/Object.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_2245dcd90b2deeda_16_drawMeshes,"armory.renderpath.RenderPathForward","drawMeshes",0xc16170e2,"armory.renderpath.RenderPathForward.drawMeshes","armory/renderpath/RenderPathForward.hx",16,0xe9d43bd3)
HX_LOCAL_STACK_FRAME(_hx_pos_2245dcd90b2deeda_40_applyConfig,"armory.renderpath.RenderPathForward","applyConfig",0x9b97374d,"armory.renderpath.RenderPathForward.applyConfig","armory/renderpath/RenderPathForward.hx",40,0xe9d43bd3)
HX_LOCAL_STACK_FRAME(_hx_pos_2245dcd90b2deeda_43_init,"armory.renderpath.RenderPathForward","init",0xaca46cf3,"armory.renderpath.RenderPathForward.init","armory/renderpath/RenderPathForward.hx",43,0xe9d43bd3)
HX_LOCAL_STACK_FRAME(_hx_pos_2245dcd90b2deeda_240_commands,"armory.renderpath.RenderPathForward","commands",0xa421102b,"armory.renderpath.RenderPathForward.commands","armory/renderpath/RenderPathForward.hx",240,0xe9d43bd3)
namespace armory{
namespace renderpath{

void RenderPathForward_obj::__construct() { }

Dynamic RenderPathForward_obj::__CreateEmpty() { return new RenderPathForward_obj; }

void *RenderPathForward_obj::_hx_vtable = 0;

Dynamic RenderPathForward_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< RenderPathForward_obj > _hx_result = new RenderPathForward_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool RenderPathForward_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x1fc8548d;
}

 ::iron::RenderPath RenderPathForward_obj::path;

void RenderPathForward_obj::drawMeshes(){
            	HX_STACKFRAME(&_hx_pos_2245dcd90b2deeda_16_drawMeshes)
HXLINE(  17)		::armory::renderpath::RenderPathForward_obj::path->drawMeshes(HX_("mesh",ed,49,59,48));
HXLINE(  21)		::armory::renderpath::RenderPathForward_obj::path->drawSkydome(HX_("shader_datas/world_pass/world_pass",8f,6b,a7,5a));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(RenderPathForward_obj,drawMeshes,(void))

void RenderPathForward_obj::applyConfig(){
            	HX_STACKFRAME(&_hx_pos_2245dcd90b2deeda_40_applyConfig)
HXDLIN(  40)		::armory::renderpath::Inc_obj::applyConfig();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(RenderPathForward_obj,applyConfig,(void))

void RenderPathForward_obj::init( ::iron::RenderPath _path){
            	HX_STACKFRAME(&_hx_pos_2245dcd90b2deeda_43_init)
HXLINE(  45)		::armory::renderpath::RenderPathForward_obj::path = _path;
HXLINE(  53)		::armory::renderpath::RenderPathForward_obj::path->loadShader(HX_("shader_datas/world_pass/world_pass",8f,6b,a7,5a));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(RenderPathForward_obj,init,(void))

void RenderPathForward_obj::commands(){
            	HX_STACKFRAME(&_hx_pos_2245dcd90b2deeda_240_commands)
HXLINE( 242)		bool hasLight = (::iron::Scene_obj::active->lights->length > 0);
HXLINE( 246)		if (hasLight) {
HXLINE( 247)			::armory::renderpath::Inc_obj::drawShadowMap(::iron::Scene_obj::active->lights->__get(0).StaticCast<  ::iron::object::LightObject >());
            		}
HXLINE( 312)		::armory::renderpath::RenderPathForward_obj::path->setTarget(HX_("",00,00,00,00),null(),null());
HXLINE( 322)		::armory::renderpath::RenderPathForward_obj::path->clearTarget(null(),((Float)1.0));
HXLINE( 334)		if (hasLight) {
HXLINE( 334)			::armory::renderpath::Inc_obj::bindShadowMap();
            		}
HXLINE( 355)		::armory::renderpath::RenderPathCreator_obj::drawMeshes();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(RenderPathForward_obj,commands,(void))


RenderPathForward_obj::RenderPathForward_obj()
{
}

bool RenderPathForward_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"path") ) { outValue = ( path ); return true; }
		if (HX_FIELD_EQ(inName,"init") ) { outValue = init_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"commands") ) { outValue = commands_dyn(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"drawMeshes") ) { outValue = drawMeshes_dyn(); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"applyConfig") ) { outValue = applyConfig_dyn(); return true; }
	}
	return false;
}

bool RenderPathForward_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"path") ) { path=ioValue.Cast<  ::iron::RenderPath >(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo *RenderPathForward_obj_sMemberStorageInfo = 0;
static hx::StaticInfo RenderPathForward_obj_sStaticStorageInfo[] = {
	{hx::fsObject /*::iron::RenderPath*/ ,(void *) &RenderPathForward_obj::path,HX_("path",a5,e5,51,4a)},
	{ hx::fsUnknown, 0, null()}
};
#endif

static void RenderPathForward_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(RenderPathForward_obj::path,"path");
};

#ifdef HXCPP_VISIT_ALLOCS
static void RenderPathForward_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(RenderPathForward_obj::path,"path");
};

#endif

hx::Class RenderPathForward_obj::__mClass;

static ::String RenderPathForward_obj_sStaticFields[] = {
	HX_("path",a5,e5,51,4a),
	HX_("drawMeshes",bf,32,75,4a),
	HX_("applyConfig",d0,16,cd,03),
	HX_("init",10,3b,bb,45),
	HX_("commands",c8,b0,55,be),
	::String(null())
};

void RenderPathForward_obj::__register()
{
	RenderPathForward_obj _hx_dummy;
	RenderPathForward_obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("armory.renderpath.RenderPathForward",6b,79,9e,af);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &RenderPathForward_obj::__GetStatic;
	__mClass->mSetStaticField = &RenderPathForward_obj::__SetStatic;
	__mClass->mMarkFunc = RenderPathForward_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(RenderPathForward_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< RenderPathForward_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = RenderPathForward_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = RenderPathForward_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = RenderPathForward_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace armory
} // end namespace renderpath
