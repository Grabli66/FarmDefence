// Generated by Haxe 4.0.0-preview.4+6e012c1
#include <hxcpp.h>

#ifndef INCLUDED_iron_data_TTilesheetAction
#include <hxinc/iron/data/TTilesheetAction.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_f9d71c98c0dc8cd7_383_new,"iron.data.TTilesheetAction","new",0xd49a01e3,"iron.data.TTilesheetAction.new","iron/data/SceneFormat.hx",383,0x98b03519)
namespace iron{
namespace data{

void TTilesheetAction_obj::__construct(::String name,int start,int end,bool loop){
            	HX_STACKFRAME(&_hx_pos_f9d71c98c0dc8cd7_383_new)
HXDLIN( 383)		this->name = name;
HXDLIN( 383)		this->start = start;
HXDLIN( 383)		this->end = end;
HXDLIN( 383)		this->loop = loop;
            	}

Dynamic TTilesheetAction_obj::__CreateEmpty() { return new TTilesheetAction_obj; }

void *TTilesheetAction_obj::_hx_vtable = 0;

Dynamic TTilesheetAction_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< TTilesheetAction_obj > _hx_result = new TTilesheetAction_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2],inArgs[3]);
	return _hx_result;
}

bool TTilesheetAction_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x144e2f29;
}


TTilesheetAction_obj::TTilesheetAction_obj()
{
}

void TTilesheetAction_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(TTilesheetAction);
	HX_MARK_MEMBER_NAME(name,"name");
	HX_MARK_MEMBER_NAME(start,"start");
	HX_MARK_MEMBER_NAME(end,"end");
	HX_MARK_MEMBER_NAME(loop,"loop");
	HX_MARK_END_CLASS();
}

void TTilesheetAction_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(name,"name");
	HX_VISIT_MEMBER_NAME(start,"start");
	HX_VISIT_MEMBER_NAME(end,"end");
	HX_VISIT_MEMBER_NAME(loop,"loop");
}

hx::Val TTilesheetAction_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"end") ) { return hx::Val( end ); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"name") ) { return hx::Val( name ); }
		if (HX_FIELD_EQ(inName,"loop") ) { return hx::Val( loop ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"start") ) { return hx::Val( start ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val TTilesheetAction_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"end") ) { end=inValue.Cast< int >(); return inValue; }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"name") ) { name=inValue.Cast< ::String >(); return inValue; }
		if (HX_FIELD_EQ(inName,"loop") ) { loop=inValue.Cast< bool >(); return inValue; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"start") ) { start=inValue.Cast< int >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void TTilesheetAction_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("name",4b,72,ff,48));
	outFields->push(HX_("start",62,74,0b,84));
	outFields->push(HX_("end",db,03,4d,00));
	outFields->push(HX_("loop",64,a6,b7,47));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo TTilesheetAction_obj_sMemberStorageInfo[] = {
	{hx::fsString,(int)offsetof(TTilesheetAction_obj,name),HX_("name",4b,72,ff,48)},
	{hx::fsInt,(int)offsetof(TTilesheetAction_obj,start),HX_("start",62,74,0b,84)},
	{hx::fsInt,(int)offsetof(TTilesheetAction_obj,end),HX_("end",db,03,4d,00)},
	{hx::fsBool,(int)offsetof(TTilesheetAction_obj,loop),HX_("loop",64,a6,b7,47)},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *TTilesheetAction_obj_sStaticStorageInfo = 0;
#endif

static ::String TTilesheetAction_obj_sMemberFields[] = {
	HX_("name",4b,72,ff,48),
	HX_("start",62,74,0b,84),
	HX_("end",db,03,4d,00),
	HX_("loop",64,a6,b7,47),
	::String(null()) };

hx::Class TTilesheetAction_obj::__mClass;

void TTilesheetAction_obj::__register()
{
	TTilesheetAction_obj _hx_dummy;
	TTilesheetAction_obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("iron.data.TTilesheetAction",71,d4,9c,34);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(TTilesheetAction_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< TTilesheetAction_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = TTilesheetAction_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = TTilesheetAction_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace iron
} // end namespace data
