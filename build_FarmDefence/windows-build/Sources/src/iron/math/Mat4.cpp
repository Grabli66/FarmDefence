// Generated by Haxe 4.0.0-preview.4+6e012c1
#include <hxcpp.h>

#ifndef INCLUDED_c5728fd05c542abe
#define INCLUDED_c5728fd05c542abe
#include "cpp_float32array.h"
#endif
#ifndef INCLUDED_95f339a1d026d52c
#define INCLUDED_95f339a1d026d52c
#include "hxMath.h"
#endif
#ifndef INCLUDED_Std
#include <hxinc/Std.h>
#endif
#ifndef INCLUDED_iron_math_Mat4
#include <hxinc/iron/math/Mat4.h>
#endif
#ifndef INCLUDED_iron_math_Quat
#include <hxinc/iron/math/Quat.h>
#endif
#ifndef INCLUDED_iron_math_Vec4
#include <hxinc/iron/math/Vec4.h>
#endif
#ifndef INCLUDED_kha_arrays_Float32ArrayPrivate
#include <hxinc/kha/arrays/Float32ArrayPrivate.h>
#endif
#ifndef INCLUDED_kha_math_FastMatrix4
#include <hxinc/kha/math/FastMatrix4.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_04012593dfa58962_15_new,"iron.math.Mat4","new",0xa6640e66,"iron.math.Mat4.new","iron/math/Mat4.hx",15,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_18_compose,"iron.math.Mat4","compose",0xbde27218,"iron.math.Mat4.compose","iron/math/Mat4.hx",18,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_25_decompose,"iron.math.Mat4","decompose",0x38fb4a37,"iron.math.Mat4.decompose","iron/math/Mat4.hx",25,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_47_setLoc,"iron.math.Mat4","setLoc",0xf28babb8,"iron.math.Mat4.setLoc","iron/math/Mat4.hx",47,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_54_fromQuat,"iron.math.Mat4","fromQuat",0x8f49339b,"iron.math.Mat4.fromQuat","iron/math/Mat4.hx",54,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_102_setIdentity,"iron.math.Mat4","setIdentity",0x88b6c306,"iron.math.Mat4.setIdentity","iron/math/Mat4.hx",102,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_110_initTranslate,"iron.math.Mat4","initTranslate",0x81bfdba4,"iron.math.Mat4.initTranslate","iron/math/Mat4.hx",110,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_118_translate,"iron.math.Mat4","translate",0x07d35dd4,"iron.math.Mat4.translate","iron/math/Mat4.hx",118,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_126_scale,"iron.math.Mat4","scale",0xf1ef1a10,"iron.math.Mat4.scale","iron/math/Mat4.hx",126,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_143_multmats3x4,"iron.math.Mat4","multmats3x4",0xdc7ea9d2,"iron.math.Mat4.multmats3x4","iron/math/Mat4.hx",143,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_174_multmats,"iron.math.Mat4","multmats",0x83998dfd,"iron.math.Mat4.multmats","iron/math/Mat4.hx",174,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_207_multmat2,"iron.math.Mat4","multmat2",0x83998dbc,"iron.math.Mat4.multmat2","iron/math/Mat4.hx",207,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_209_multmat,"iron.math.Mat4","multmat",0x3319f1b6,"iron.math.Mat4.multmat","iron/math/Mat4.hx",209,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_242_getInverse,"iron.math.Mat4","getInverse",0x58150074,"iron.math.Mat4.getInverse","iron/math/Mat4.hx",242,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_284_transpose,"iron.math.Mat4","transpose",0x0a82d6ff,"iron.math.Mat4.transpose","iron/math/Mat4.hx",284,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_294_transpose3x3,"iron.math.Mat4","transpose3x3",0x0f1b6e0f,"iron.math.Mat4.transpose3x3","iron/math/Mat4.hx",294,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_302_clone,"iron.math.Mat4","clone",0xc1835ee3,"iron.math.Mat4.clone","iron/math/Mat4.hx",302,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_310_setF32,"iron.math.Mat4","setF32",0xf286e9bd,"iron.math.Mat4.setF32","iron/math/Mat4.hx",310,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_318_setFrom,"iron.math.Mat4","setFrom",0x43b59f32,"iron.math.Mat4.setFrom","iron/math/Mat4.hx",318,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_327_getLoc,"iron.math.Mat4","getLoc",0x26435744,"iron.math.Mat4.getLoc","iron/math/Mat4.hx",327,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_331_getScale,"iron.math.Mat4","getScale",0xbf190a4e,"iron.math.Mat4.getScale","iron/math/Mat4.hx",331,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_338_mult,"iron.math.Mat4","mult",0xf08b6f2a,"iron.math.Mat4.mult","iron/math/Mat4.hx",338,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_346_toRotation,"iron.math.Mat4","toRotation",0x45650093,"iron.math.Mat4.toRotation","iron/math/Mat4.hx",346,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_395_setLookAt,"iron.math.Mat4","setLookAt",0x7fb070fa,"iron.math.Mat4.setLookAt","iron/math/Mat4.hx",395,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_438_applyQuat,"iron.math.Mat4","applyQuat",0xf32cbfeb,"iron.math.Mat4.applyQuat","iron/math/Mat4.hx",438,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_443_right,"iron.math.Mat4","right",0x62845762,"iron.math.Mat4.right","iron/math/Mat4.hx",443,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_444_up,"iron.math.Mat4","up",0x56d84b15,"iron.math.Mat4.up","iron/math/Mat4.hx",444,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_445_look,"iron.math.Mat4","look",0xefddad99,"iron.math.Mat4.look","iron/math/Mat4.hx",445,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_447_get__00,"iron.math.Mat4","get__00",0x612bc1bc,"iron.math.Mat4.get__00","iron/math/Mat4.hx",447,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_447_set__00,"iron.math.Mat4","set__00",0x542d52c8,"iron.math.Mat4.set__00","iron/math/Mat4.hx",447,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_448_get__01,"iron.math.Mat4","get__01",0x612bc1bd,"iron.math.Mat4.get__01","iron/math/Mat4.hx",448,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_448_set__01,"iron.math.Mat4","set__01",0x542d52c9,"iron.math.Mat4.set__01","iron/math/Mat4.hx",448,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_449_get__02,"iron.math.Mat4","get__02",0x612bc1be,"iron.math.Mat4.get__02","iron/math/Mat4.hx",449,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_449_set__02,"iron.math.Mat4","set__02",0x542d52ca,"iron.math.Mat4.set__02","iron/math/Mat4.hx",449,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_450_get__03,"iron.math.Mat4","get__03",0x612bc1bf,"iron.math.Mat4.get__03","iron/math/Mat4.hx",450,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_450_set__03,"iron.math.Mat4","set__03",0x542d52cb,"iron.math.Mat4.set__03","iron/math/Mat4.hx",450,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_451_get__10,"iron.math.Mat4","get__10",0x612bc29b,"iron.math.Mat4.get__10","iron/math/Mat4.hx",451,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_451_set__10,"iron.math.Mat4","set__10",0x542d53a7,"iron.math.Mat4.set__10","iron/math/Mat4.hx",451,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_452_get__11,"iron.math.Mat4","get__11",0x612bc29c,"iron.math.Mat4.get__11","iron/math/Mat4.hx",452,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_452_set__11,"iron.math.Mat4","set__11",0x542d53a8,"iron.math.Mat4.set__11","iron/math/Mat4.hx",452,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_453_get__12,"iron.math.Mat4","get__12",0x612bc29d,"iron.math.Mat4.get__12","iron/math/Mat4.hx",453,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_453_set__12,"iron.math.Mat4","set__12",0x542d53a9,"iron.math.Mat4.set__12","iron/math/Mat4.hx",453,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_454_get__13,"iron.math.Mat4","get__13",0x612bc29e,"iron.math.Mat4.get__13","iron/math/Mat4.hx",454,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_454_set__13,"iron.math.Mat4","set__13",0x542d53aa,"iron.math.Mat4.set__13","iron/math/Mat4.hx",454,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_455_get__20,"iron.math.Mat4","get__20",0x612bc37a,"iron.math.Mat4.get__20","iron/math/Mat4.hx",455,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_455_set__20,"iron.math.Mat4","set__20",0x542d5486,"iron.math.Mat4.set__20","iron/math/Mat4.hx",455,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_456_get__21,"iron.math.Mat4","get__21",0x612bc37b,"iron.math.Mat4.get__21","iron/math/Mat4.hx",456,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_456_set__21,"iron.math.Mat4","set__21",0x542d5487,"iron.math.Mat4.set__21","iron/math/Mat4.hx",456,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_457_get__22,"iron.math.Mat4","get__22",0x612bc37c,"iron.math.Mat4.get__22","iron/math/Mat4.hx",457,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_457_set__22,"iron.math.Mat4","set__22",0x542d5488,"iron.math.Mat4.set__22","iron/math/Mat4.hx",457,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_458_get__23,"iron.math.Mat4","get__23",0x612bc37d,"iron.math.Mat4.get__23","iron/math/Mat4.hx",458,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_458_set__23,"iron.math.Mat4","set__23",0x542d5489,"iron.math.Mat4.set__23","iron/math/Mat4.hx",458,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_459_get__30,"iron.math.Mat4","get__30",0x612bc459,"iron.math.Mat4.get__30","iron/math/Mat4.hx",459,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_459_set__30,"iron.math.Mat4","set__30",0x542d5565,"iron.math.Mat4.set__30","iron/math/Mat4.hx",459,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_460_get__31,"iron.math.Mat4","get__31",0x612bc45a,"iron.math.Mat4.get__31","iron/math/Mat4.hx",460,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_460_set__31,"iron.math.Mat4","set__31",0x542d5566,"iron.math.Mat4.set__31","iron/math/Mat4.hx",460,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_461_get__32,"iron.math.Mat4","get__32",0x612bc45b,"iron.math.Mat4.get__32","iron/math/Mat4.hx",461,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_461_set__32,"iron.math.Mat4","set__32",0x542d5567,"iron.math.Mat4.set__32","iron/math/Mat4.hx",461,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_462_get__33,"iron.math.Mat4","get__33",0x612bc45c,"iron.math.Mat4.get__33","iron/math/Mat4.hx",462,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_462_set__33,"iron.math.Mat4","set__33",0x542d5568,"iron.math.Mat4.set__33","iron/math/Mat4.hx",462,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_465_toString,"iron.math.Mat4","toString",0x1ee1fce6,"iron.math.Mat4.toString","iron/math/Mat4.hx",465,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_85_fromFloat32Array,"iron.math.Mat4","fromFloat32Array",0xbbb25522,"iron.math.Mat4.fromFloat32Array","iron/math/Mat4.hx",85,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_94_identity,"iron.math.Mat4","identity",0x9fa27178,"iron.math.Mat4.identity","iron/math/Mat4.hx",94,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_369_persp,"iron.math.Mat4","persp",0x391ab640,"iron.math.Mat4.persp","iron/math/Mat4.hx",369,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_380_ortho,"iron.math.Mat4","ortho",0xae4d62be,"iron.math.Mat4.ortho","iron/math/Mat4.hx",380,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_8_boot,"iron.math.Mat4","boot",0xe9418b6c,"iron.math.Mat4.boot","iron/math/Mat4.hx",8,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_9_boot,"iron.math.Mat4","boot",0xe9418b6c,"iron.math.Mat4.boot","iron/math/Mat4.hx",9,0xd5cb2f6a)
namespace iron{
namespace math{

void Mat4_obj::__construct(float _00,float _10,float _20,float _30,float _01,float _11,float _21,float _31,float _02,float _12,float _22,float _32,float _03,float _13,float _23,float _33){
            	HX_GC_STACKFRAME(&_hx_pos_04012593dfa58962_15_new)
HXDLIN(  15)		this->self =  ::kha::math::FastMatrix4_obj::__alloc( HX_CTX ,_00,_10,_20,_30,_01,_11,_21,_31,_02,_12,_22,_32,_03,_13,_23,_33);
            	}

Dynamic Mat4_obj::__CreateEmpty() { return new Mat4_obj; }

void *Mat4_obj::_hx_vtable = 0;

Dynamic Mat4_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Mat4_obj > _hx_result = new Mat4_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2],inArgs[3],inArgs[4],inArgs[5],inArgs[6],inArgs[7],inArgs[8],inArgs[9],inArgs[10],inArgs[11],inArgs[12],inArgs[13],inArgs[14],inArgs[15]);
	return _hx_result;
}

bool Mat4_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x118e08a8;
}

 ::iron::math::Mat4 Mat4_obj::compose( ::iron::math::Vec4 loc, ::iron::math::Quat quat, ::iron::math::Vec4 sc){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_18_compose)
HXLINE(  19)		{
HXLINE(  19)			float x = quat->x;
HXDLIN(  19)			float y = quat->y;
HXDLIN(  19)			float z = quat->z;
HXDLIN(  19)			float w = quat->w;
HXDLIN(  19)			float x2 = (x + x);
HXDLIN(  19)			float y2 = (y + y);
HXDLIN(  19)			float z2 = (z + z);
HXDLIN(  19)			float xx = (x * x2);
HXDLIN(  19)			float xy = (x * y2);
HXDLIN(  19)			float xz = (x * z2);
HXDLIN(  19)			float yy = (y * y2);
HXDLIN(  19)			float yz = (y * z2);
HXDLIN(  19)			float zz = (z * z2);
HXDLIN(  19)			float wx = (w * x2);
HXDLIN(  19)			float wy = (w * y2);
HXDLIN(  19)			float wz = (w * z2);
HXDLIN(  19)			this->self->_00 = ( (float)((((Float)1.0) - (yy + zz))) );
HXDLIN(  19)			this->self->_10 = (xy - wz);
HXDLIN(  19)			this->self->_20 = (xz + wy);
HXDLIN(  19)			this->self->_01 = (xy + wz);
HXDLIN(  19)			this->self->_11 = ( (float)((((Float)1.0) - (xx + zz))) );
HXDLIN(  19)			this->self->_21 = (yz - wx);
HXDLIN(  19)			this->self->_02 = (xz - wy);
HXDLIN(  19)			this->self->_12 = (yz + wx);
HXDLIN(  19)			this->self->_22 = ( (float)((((Float)1.0) - (xx + yy))) );
HXDLIN(  19)			this->self->_03 = ( (float)(((Float)0.0)) );
HXDLIN(  19)			this->self->_13 = ( (float)(((Float)0.0)) );
HXDLIN(  19)			this->self->_23 = ( (float)(((Float)0.0)) );
HXDLIN(  19)			this->self->_30 = ( (float)(((Float)0.0)) );
HXDLIN(  19)			this->self->_31 = ( (float)(((Float)0.0)) );
HXDLIN(  19)			this->self->_32 = ( (float)(((Float)0.0)) );
HXDLIN(  19)			this->self->_33 = ( (float)(((Float)1.0)) );
            		}
HXLINE(  20)		{
HXLINE(  20)			float x1 = sc->x;
HXDLIN(  20)			float y1 = sc->y;
HXDLIN(  20)			float z1 = sc->z;
HXDLIN(  20)			{
HXLINE(  20)				 ::iron::math::Mat4 _g = hx::ObjectPtr<OBJ_>(this);
HXDLIN(  20)				_g->self->_00 = (_g->self->_00 * x1);
            			}
HXDLIN(  20)			{
HXLINE(  20)				 ::iron::math::Mat4 _g1 = hx::ObjectPtr<OBJ_>(this);
HXDLIN(  20)				_g1->self->_01 = (_g1->self->_01 * x1);
            			}
HXDLIN(  20)			{
HXLINE(  20)				 ::iron::math::Mat4 _g2 = hx::ObjectPtr<OBJ_>(this);
HXDLIN(  20)				_g2->self->_02 = (_g2->self->_02 * x1);
            			}
HXDLIN(  20)			{
HXLINE(  20)				 ::iron::math::Mat4 _g3 = hx::ObjectPtr<OBJ_>(this);
HXDLIN(  20)				_g3->self->_03 = (_g3->self->_03 * x1);
            			}
HXDLIN(  20)			{
HXLINE(  20)				 ::iron::math::Mat4 _g4 = hx::ObjectPtr<OBJ_>(this);
HXDLIN(  20)				_g4->self->_10 = (_g4->self->_10 * y1);
            			}
HXDLIN(  20)			{
HXLINE(  20)				 ::iron::math::Mat4 _g5 = hx::ObjectPtr<OBJ_>(this);
HXDLIN(  20)				_g5->self->_11 = (_g5->self->_11 * y1);
            			}
HXDLIN(  20)			{
HXLINE(  20)				 ::iron::math::Mat4 _g6 = hx::ObjectPtr<OBJ_>(this);
HXDLIN(  20)				_g6->self->_12 = (_g6->self->_12 * y1);
            			}
HXDLIN(  20)			{
HXLINE(  20)				 ::iron::math::Mat4 _g7 = hx::ObjectPtr<OBJ_>(this);
HXDLIN(  20)				_g7->self->_13 = (_g7->self->_13 * y1);
            			}
HXDLIN(  20)			{
HXLINE(  20)				 ::iron::math::Mat4 _g8 = hx::ObjectPtr<OBJ_>(this);
HXDLIN(  20)				_g8->self->_20 = (_g8->self->_20 * z1);
            			}
HXDLIN(  20)			{
HXLINE(  20)				 ::iron::math::Mat4 _g9 = hx::ObjectPtr<OBJ_>(this);
HXDLIN(  20)				_g9->self->_21 = (_g9->self->_21 * z1);
            			}
HXDLIN(  20)			{
HXLINE(  20)				 ::iron::math::Mat4 _g10 = hx::ObjectPtr<OBJ_>(this);
HXDLIN(  20)				_g10->self->_22 = (_g10->self->_22 * z1);
            			}
HXDLIN(  20)			{
HXLINE(  20)				 ::iron::math::Mat4 _g11 = hx::ObjectPtr<OBJ_>(this);
HXDLIN(  20)				_g11->self->_23 = (_g11->self->_23 * z1);
            			}
            		}
HXLINE(  21)		{
HXLINE(  21)			this->self->_30 = loc->x;
HXDLIN(  21)			this->self->_31 = loc->y;
HXDLIN(  21)			this->self->_32 = loc->z;
            		}
HXLINE(  22)		return hx::ObjectPtr<OBJ_>(this);
            	}


HX_DEFINE_DYNAMIC_FUNC3(Mat4_obj,compose,return )

 ::iron::math::Mat4 Mat4_obj::decompose( ::iron::math::Vec4 loc, ::iron::math::Quat quat, ::iron::math::Vec4 scale){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_25_decompose)
HXLINE(  26)		loc->x = this->self->_30;
HXDLIN(  26)		loc->y = this->self->_31;
HXDLIN(  26)		loc->z = this->self->_32;
HXLINE(  27)		 ::iron::math::Vec4 _this = ::iron::math::Mat4_obj::helpVec;
HXDLIN(  27)		_this->x = this->self->_00;
HXDLIN(  27)		_this->y = this->self->_01;
HXDLIN(  27)		_this->z = this->self->_02;
HXDLIN(  27)		_this->w = ( (float)(((Float)1.0)) );
HXDLIN(  27)		 ::iron::math::Vec4 _this1 = _this;
HXDLIN(  27)		float v = (_this1->x * _this1->x);
HXDLIN(  27)		float v1 = (v + (_this1->y * _this1->y));
HXDLIN(  27)		scale->x = ( (float)(::Math_obj::sqrt(( (Float)((v1 + (_this1->z * _this1->z))) ))) );
HXLINE(  28)		 ::iron::math::Vec4 _this2 = ::iron::math::Mat4_obj::helpVec;
HXDLIN(  28)		_this2->x = this->self->_10;
HXDLIN(  28)		_this2->y = this->self->_11;
HXDLIN(  28)		_this2->z = this->self->_12;
HXDLIN(  28)		_this2->w = ( (float)(((Float)1.0)) );
HXDLIN(  28)		 ::iron::math::Vec4 _this3 = _this2;
HXDLIN(  28)		float v2 = (_this3->x * _this3->x);
HXDLIN(  28)		float v3 = (v2 + (_this3->y * _this3->y));
HXDLIN(  28)		scale->y = ( (float)(::Math_obj::sqrt(( (Float)((v3 + (_this3->z * _this3->z))) ))) );
HXLINE(  29)		 ::iron::math::Vec4 _this4 = ::iron::math::Mat4_obj::helpVec;
HXDLIN(  29)		_this4->x = this->self->_20;
HXDLIN(  29)		_this4->y = this->self->_21;
HXDLIN(  29)		_this4->z = this->self->_22;
HXDLIN(  29)		_this4->w = ( (float)(((Float)1.0)) );
HXDLIN(  29)		 ::iron::math::Vec4 _this5 = _this4;
HXDLIN(  29)		float v4 = (_this5->x * _this5->x);
HXDLIN(  29)		float v5 = (v4 + (_this5->y * _this5->y));
HXDLIN(  29)		scale->z = ( (float)(::Math_obj::sqrt(( (Float)((v5 + (_this5->z * _this5->z))) ))) );
HXLINE(  30)		 ::kha::math::FastMatrix4 _this6 = this->self;
HXDLIN(  30)		float m3 = _this6->_12;
HXDLIN(  30)		float m4 = _this6->_22;
HXDLIN(  30)		float m5 = _this6->_32;
HXDLIN(  30)		float m6 = _this6->_13;
HXDLIN(  30)		float m7 = _this6->_23;
HXDLIN(  30)		float m8 = _this6->_33;
HXDLIN(  30)		float _this7 = _this6->_11;
HXDLIN(  30)		float c00 = (_this7 * ((m4 * m8) - (m5 * m7)));
HXDLIN(  30)		float _this8 = _this6->_21;
HXDLIN(  30)		float c001 = (c00 - (_this8 * ((m3 * m8) - (m5 * m6))));
HXDLIN(  30)		float _this9 = _this6->_31;
HXDLIN(  30)		float c002 = (c001 + (_this9 * ((m3 * m7) - (m4 * m6))));
HXDLIN(  30)		float m31 = _this6->_12;
HXDLIN(  30)		float m41 = _this6->_22;
HXDLIN(  30)		float m51 = _this6->_32;
HXDLIN(  30)		float m61 = _this6->_13;
HXDLIN(  30)		float m71 = _this6->_23;
HXDLIN(  30)		float m81 = _this6->_33;
HXDLIN(  30)		float _this10 = _this6->_10;
HXDLIN(  30)		float c01 = (_this10 * ((m41 * m81) - (m51 * m71)));
HXDLIN(  30)		float _this11 = _this6->_20;
HXDLIN(  30)		float c011 = (c01 - (_this11 * ((m31 * m81) - (m51 * m61))));
HXDLIN(  30)		float _this12 = _this6->_30;
HXDLIN(  30)		float c012 = (c011 + (_this12 * ((m31 * m71) - (m41 * m61))));
HXDLIN(  30)		float m32 = _this6->_11;
HXDLIN(  30)		float m42 = _this6->_21;
HXDLIN(  30)		float m52 = _this6->_31;
HXDLIN(  30)		float m62 = _this6->_13;
HXDLIN(  30)		float m72 = _this6->_23;
HXDLIN(  30)		float m82 = _this6->_33;
HXDLIN(  30)		float _this13 = _this6->_10;
HXDLIN(  30)		float c02 = (_this13 * ((m42 * m82) - (m52 * m72)));
HXDLIN(  30)		float _this14 = _this6->_20;
HXDLIN(  30)		float c021 = (c02 - (_this14 * ((m32 * m82) - (m52 * m62))));
HXDLIN(  30)		float _this15 = _this6->_30;
HXDLIN(  30)		float c022 = (c021 + (_this15 * ((m32 * m72) - (m42 * m62))));
HXDLIN(  30)		float m33 = _this6->_11;
HXDLIN(  30)		float m43 = _this6->_21;
HXDLIN(  30)		float m53 = _this6->_31;
HXDLIN(  30)		float m63 = _this6->_12;
HXDLIN(  30)		float m73 = _this6->_22;
HXDLIN(  30)		float m83 = _this6->_32;
HXDLIN(  30)		float _this16 = _this6->_10;
HXDLIN(  30)		float c03 = (_this16 * ((m43 * m83) - (m53 * m73)));
HXDLIN(  30)		float _this17 = _this6->_20;
HXDLIN(  30)		float c031 = (c03 - (_this17 * ((m33 * m83) - (m53 * m63))));
HXDLIN(  30)		float _this18 = _this6->_30;
HXDLIN(  30)		float c032 = (c031 + (_this18 * ((m33 * m73) - (m43 * m63))));
HXDLIN(  30)		float _hx_tmp = (_this6->_00 * c002);
HXDLIN(  30)		float _hx_tmp1 = (_hx_tmp - (_this6->_01 * c012));
HXDLIN(  30)		float _hx_tmp2 = (_hx_tmp1 + (_this6->_02 * c022));
HXDLIN(  30)		if (((_hx_tmp2 - (_this6->_03 * c032)) < ((Float)0.0))) {
HXLINE(  30)			scale->x = -(scale->x);
            		}
HXLINE(  31)		Float invs = (((Float)1.0) / ( (Float)(scale->x) ));
HXLINE(  32)		::iron::math::Mat4_obj::helpMat->self->_00 = ( (float)((this->self->_00 * invs)) );
HXLINE(  33)		::iron::math::Mat4_obj::helpMat->self->_01 = ( (float)((this->self->_01 * invs)) );
HXLINE(  34)		::iron::math::Mat4_obj::helpMat->self->_02 = ( (float)((this->self->_02 * invs)) );
HXLINE(  35)		invs = (((Float)1.0) / ( (Float)(scale->y) ));
HXLINE(  36)		::iron::math::Mat4_obj::helpMat->self->_10 = ( (float)((this->self->_10 * invs)) );
HXLINE(  37)		::iron::math::Mat4_obj::helpMat->self->_11 = ( (float)((this->self->_11 * invs)) );
HXLINE(  38)		::iron::math::Mat4_obj::helpMat->self->_12 = ( (float)((this->self->_12 * invs)) );
HXLINE(  39)		invs = (((Float)1.0) / ( (Float)(scale->z) ));
HXLINE(  40)		::iron::math::Mat4_obj::helpMat->self->_20 = ( (float)((this->self->_20 * invs)) );
HXLINE(  41)		::iron::math::Mat4_obj::helpMat->self->_21 = ( (float)((this->self->_21 * invs)) );
HXLINE(  42)		::iron::math::Mat4_obj::helpMat->self->_22 = ( (float)((this->self->_22 * invs)) );
HXLINE(  43)		{
HXLINE(  43)			 ::iron::math::Mat4 m = ::iron::math::Mat4_obj::helpMat;
HXDLIN(  43)			float m11 = m->self->_00;
HXDLIN(  43)			float m12 = m->self->_10;
HXDLIN(  43)			float m13 = m->self->_20;
HXDLIN(  43)			float m21 = m->self->_01;
HXDLIN(  43)			float m22 = m->self->_11;
HXDLIN(  43)			float m23 = m->self->_21;
HXDLIN(  43)			float m311 = m->self->_02;
HXDLIN(  43)			float m321 = m->self->_12;
HXDLIN(  43)			float m331 = m->self->_22;
HXDLIN(  43)			float tr = ((m11 + m22) + m331);
HXDLIN(  43)			Float s = ((Float)0.0);
HXDLIN(  43)			if ((tr > 0)) {
HXLINE(  43)				s = (((Float)0.5) / ::Math_obj::sqrt((tr + ((Float)1.0))));
HXDLIN(  43)				quat->w = ( (float)((((Float)0.25) / s)) );
HXDLIN(  43)				quat->x = ( (float)(((m321 - m23) * s)) );
HXDLIN(  43)				quat->y = ( (float)(((m13 - m311) * s)) );
HXDLIN(  43)				quat->z = ( (float)(((m21 - m12) * s)) );
            			}
            			else {
HXLINE(  43)				bool _hx_tmp3;
HXDLIN(  43)				if ((m11 > m22)) {
HXLINE(  43)					_hx_tmp3 = (m11 > m331);
            				}
            				else {
HXLINE(  43)					_hx_tmp3 = false;
            				}
HXDLIN(  43)				if (_hx_tmp3) {
HXLINE(  43)					s = (((Float)2.0) * ::Math_obj::sqrt((((((Float)1.0) + m11) - m22) - m331)));
HXDLIN(  43)					quat->w = ( (float)((( (Float)((m321 - m23)) ) / s)) );
HXDLIN(  43)					quat->x = ( (float)((((Float)0.25) * s)) );
HXDLIN(  43)					quat->y = ( (float)((( (Float)((m12 + m21)) ) / s)) );
HXDLIN(  43)					quat->z = ( (float)((( (Float)((m13 + m311)) ) / s)) );
            				}
            				else {
HXLINE(  43)					if ((m22 > m331)) {
HXLINE(  43)						s = (((Float)2.0) * ::Math_obj::sqrt((((((Float)1.0) + m22) - m11) - m331)));
HXDLIN(  43)						quat->w = ( (float)((( (Float)((m13 - m311)) ) / s)) );
HXDLIN(  43)						quat->x = ( (float)((( (Float)((m12 + m21)) ) / s)) );
HXDLIN(  43)						quat->y = ( (float)((((Float)0.25) * s)) );
HXDLIN(  43)						quat->z = ( (float)((( (Float)((m23 + m321)) ) / s)) );
            					}
            					else {
HXLINE(  43)						s = (((Float)2.0) * ::Math_obj::sqrt((((((Float)1.0) + m331) - m11) - m22)));
HXDLIN(  43)						quat->w = ( (float)((( (Float)((m21 - m12)) ) / s)) );
HXDLIN(  43)						quat->x = ( (float)((( (Float)((m13 + m311)) ) / s)) );
HXDLIN(  43)						quat->y = ( (float)((( (Float)((m23 + m321)) ) / s)) );
HXDLIN(  43)						quat->z = ( (float)((((Float)0.25) * s)) );
            					}
            				}
            			}
            		}
HXLINE(  44)		return hx::ObjectPtr<OBJ_>(this);
            	}


HX_DEFINE_DYNAMIC_FUNC3(Mat4_obj,decompose,return )

 ::iron::math::Mat4 Mat4_obj::setLoc( ::iron::math::Vec4 v){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_47_setLoc)
HXLINE(  48)		this->self->_30 = v->x;
HXLINE(  49)		this->self->_31 = v->y;
HXLINE(  50)		this->self->_32 = v->z;
HXLINE(  51)		return hx::ObjectPtr<OBJ_>(this);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Mat4_obj,setLoc,return )

 ::iron::math::Mat4 Mat4_obj::fromQuat( ::iron::math::Quat q){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_54_fromQuat)
HXLINE(  55)		float x = q->x;
HXDLIN(  55)		float y = q->y;
HXDLIN(  55)		float z = q->z;
HXDLIN(  55)		float w = q->w;
HXLINE(  56)		float x2 = (x + x);
HXDLIN(  56)		float y2 = (y + y);
HXDLIN(  56)		float z2 = (z + z);
HXLINE(  57)		float xx = (x * x2);
HXDLIN(  57)		float xy = (x * y2);
HXDLIN(  57)		float xz = (x * z2);
HXLINE(  58)		float yy = (y * y2);
HXDLIN(  58)		float yz = (y * z2);
HXDLIN(  58)		float zz = (z * z2);
HXLINE(  59)		float wx = (w * x2);
HXDLIN(  59)		float wy = (w * y2);
HXDLIN(  59)		float wz = (w * z2);
HXLINE(  61)		this->self->_00 = ( (float)((((Float)1.0) - (yy + zz))) );
HXLINE(  62)		this->self->_10 = (xy - wz);
HXLINE(  63)		this->self->_20 = (xz + wy);
HXLINE(  65)		this->self->_01 = (xy + wz);
HXLINE(  66)		this->self->_11 = ( (float)((((Float)1.0) - (xx + zz))) );
HXLINE(  67)		this->self->_21 = (yz - wx);
HXLINE(  69)		this->self->_02 = (xz - wy);
HXLINE(  70)		this->self->_12 = (yz + wx);
HXLINE(  71)		this->self->_22 = ( (float)((((Float)1.0) - (xx + yy))) );
HXLINE(  73)		this->self->_03 = ( (float)(((Float)0.0)) );
HXLINE(  74)		this->self->_13 = ( (float)(((Float)0.0)) );
HXLINE(  75)		this->self->_23 = ( (float)(((Float)0.0)) );
HXLINE(  76)		this->self->_30 = ( (float)(((Float)0.0)) );
HXLINE(  77)		this->self->_31 = ( (float)(((Float)0.0)) );
HXLINE(  78)		this->self->_32 = ( (float)(((Float)0.0)) );
HXLINE(  79)		this->self->_33 = ( (float)(((Float)1.0)) );
HXLINE(  81)		return hx::ObjectPtr<OBJ_>(this);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Mat4_obj,fromQuat,return )

 ::iron::math::Mat4 Mat4_obj::setIdentity(){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_102_setIdentity)
HXLINE( 103)		this->self->_00 = ( (float)(((Float)1.0)) );
HXDLIN( 103)		this->self->_01 = ( (float)(((Float)0.0)) );
HXDLIN( 103)		this->self->_02 = ( (float)(((Float)0.0)) );
HXDLIN( 103)		this->self->_03 = ( (float)(((Float)0.0)) );
HXLINE( 104)		this->self->_10 = ( (float)(((Float)0.0)) );
HXDLIN( 104)		this->self->_11 = ( (float)(((Float)1.0)) );
HXDLIN( 104)		this->self->_12 = ( (float)(((Float)0.0)) );
HXDLIN( 104)		this->self->_13 = ( (float)(((Float)0.0)) );
HXLINE( 105)		this->self->_20 = ( (float)(((Float)0.0)) );
HXDLIN( 105)		this->self->_21 = ( (float)(((Float)0.0)) );
HXDLIN( 105)		this->self->_22 = ( (float)(((Float)1.0)) );
HXDLIN( 105)		this->self->_23 = ( (float)(((Float)0.0)) );
HXLINE( 106)		this->self->_30 = ( (float)(((Float)0.0)) );
HXDLIN( 106)		this->self->_31 = ( (float)(((Float)0.0)) );
HXDLIN( 106)		this->self->_32 = ( (float)(((Float)0.0)) );
HXDLIN( 106)		this->self->_33 = ( (float)(((Float)1.0)) );
HXLINE( 107)		return hx::ObjectPtr<OBJ_>(this);
            	}


HX_DEFINE_DYNAMIC_FUNC0(Mat4_obj,setIdentity,return )

 ::iron::math::Mat4 Mat4_obj::initTranslate(hx::Null< float >  __o_x,hx::Null< float >  __o_y,hx::Null< float >  __o_z){
float x = __o_x.Default(((Float)0.0));
float y = __o_y.Default(((Float)0.0));
float z = __o_z.Default(((Float)0.0));
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_110_initTranslate)
HXLINE( 111)		this->self->_00 = ( (float)(((Float)1.0)) );
HXDLIN( 111)		this->self->_01 = ( (float)(((Float)0.0)) );
HXDLIN( 111)		this->self->_02 = ( (float)(((Float)0.0)) );
HXDLIN( 111)		this->self->_03 = ( (float)(((Float)0.0)) );
HXLINE( 112)		this->self->_10 = ( (float)(((Float)0.0)) );
HXDLIN( 112)		this->self->_11 = ( (float)(((Float)1.0)) );
HXDLIN( 112)		this->self->_12 = ( (float)(((Float)0.0)) );
HXDLIN( 112)		this->self->_13 = ( (float)(((Float)0.0)) );
HXLINE( 113)		this->self->_20 = ( (float)(((Float)0.0)) );
HXDLIN( 113)		this->self->_21 = ( (float)(((Float)0.0)) );
HXDLIN( 113)		this->self->_22 = ( (float)(((Float)1.0)) );
HXDLIN( 113)		this->self->_23 = ( (float)(((Float)0.0)) );
HXLINE( 114)		this->self->_30 = x;
HXDLIN( 114)		this->self->_31 = y;
HXDLIN( 114)		this->self->_32 = z;
HXDLIN( 114)		this->self->_33 = ( (float)(((Float)1.0)) );
HXLINE( 115)		return hx::ObjectPtr<OBJ_>(this);
            	}


HX_DEFINE_DYNAMIC_FUNC3(Mat4_obj,initTranslate,return )

 ::iron::math::Mat4 Mat4_obj::translate(float x,float y,float z){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_118_translate)
HXLINE( 119)		{
HXLINE( 119)			 ::iron::math::Mat4 _g = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 119)			{
HXLINE( 119)				float _g1 = _g->self->_00;
HXDLIN( 119)				_g->self->_00 = (_g1 + (x * this->self->_03));
            			}
            		}
HXDLIN( 119)		{
HXLINE( 119)			 ::iron::math::Mat4 _g2 = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 119)			{
HXLINE( 119)				float _g3 = _g2->self->_01;
HXDLIN( 119)				_g2->self->_01 = (_g3 + (y * this->self->_03));
            			}
            		}
HXDLIN( 119)		{
HXLINE( 119)			 ::iron::math::Mat4 _g4 = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 119)			{
HXLINE( 119)				float _g5 = _g4->self->_02;
HXDLIN( 119)				_g4->self->_02 = (_g5 + (z * this->self->_03));
            			}
            		}
HXLINE( 120)		{
HXLINE( 120)			 ::iron::math::Mat4 _g6 = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 120)			{
HXLINE( 120)				float _g7 = _g6->self->_10;
HXDLIN( 120)				_g6->self->_10 = (_g7 + (x * this->self->_13));
            			}
            		}
HXDLIN( 120)		{
HXLINE( 120)			 ::iron::math::Mat4 _g8 = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 120)			{
HXLINE( 120)				float _g9 = _g8->self->_11;
HXDLIN( 120)				_g8->self->_11 = (_g9 + (y * this->self->_13));
            			}
            		}
HXDLIN( 120)		{
HXLINE( 120)			 ::iron::math::Mat4 _g10 = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 120)			{
HXLINE( 120)				float _g11 = _g10->self->_12;
HXDLIN( 120)				_g10->self->_12 = (_g11 + (z * this->self->_13));
            			}
            		}
HXLINE( 121)		{
HXLINE( 121)			 ::iron::math::Mat4 _g12 = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 121)			{
HXLINE( 121)				float _g13 = _g12->self->_20;
HXDLIN( 121)				_g12->self->_20 = (_g13 + (x * this->self->_23));
            			}
            		}
HXDLIN( 121)		{
HXLINE( 121)			 ::iron::math::Mat4 _g14 = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 121)			{
HXLINE( 121)				float _g15 = _g14->self->_21;
HXDLIN( 121)				_g14->self->_21 = (_g15 + (y * this->self->_23));
            			}
            		}
HXDLIN( 121)		{
HXLINE( 121)			 ::iron::math::Mat4 _g16 = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 121)			{
HXLINE( 121)				float _g17 = _g16->self->_22;
HXDLIN( 121)				_g16->self->_22 = (_g17 + (z * this->self->_23));
            			}
            		}
HXLINE( 122)		{
HXLINE( 122)			 ::iron::math::Mat4 _g18 = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 122)			{
HXLINE( 122)				float _g19 = _g18->self->_30;
HXDLIN( 122)				_g18->self->_30 = (_g19 + (x * this->self->_33));
            			}
            		}
HXDLIN( 122)		{
HXLINE( 122)			 ::iron::math::Mat4 _g20 = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 122)			{
HXLINE( 122)				float _g21 = _g20->self->_31;
HXDLIN( 122)				_g20->self->_31 = (_g21 + (y * this->self->_33));
            			}
            		}
HXDLIN( 122)		{
HXLINE( 122)			 ::iron::math::Mat4 _g22 = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 122)			{
HXLINE( 122)				float _g23 = _g22->self->_32;
HXDLIN( 122)				_g22->self->_32 = (_g23 + (z * this->self->_33));
            			}
            		}
HXLINE( 123)		return hx::ObjectPtr<OBJ_>(this);
            	}


HX_DEFINE_DYNAMIC_FUNC3(Mat4_obj,translate,return )

 ::iron::math::Mat4 Mat4_obj::scale( ::iron::math::Vec4 v){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_126_scale)
HXLINE( 127)		float x = v->x;
HXDLIN( 127)		float y = v->y;
HXDLIN( 127)		float z = v->z;
HXLINE( 128)		{
HXLINE( 128)			 ::iron::math::Mat4 _g = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 128)			_g->self->_00 = (_g->self->_00 * x);
            		}
HXLINE( 129)		{
HXLINE( 129)			 ::iron::math::Mat4 _g1 = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 129)			_g1->self->_01 = (_g1->self->_01 * x);
            		}
HXLINE( 130)		{
HXLINE( 130)			 ::iron::math::Mat4 _g2 = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 130)			_g2->self->_02 = (_g2->self->_02 * x);
            		}
HXLINE( 131)		{
HXLINE( 131)			 ::iron::math::Mat4 _g3 = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 131)			_g3->self->_03 = (_g3->self->_03 * x);
            		}
HXLINE( 132)		{
HXLINE( 132)			 ::iron::math::Mat4 _g4 = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 132)			_g4->self->_10 = (_g4->self->_10 * y);
            		}
HXLINE( 133)		{
HXLINE( 133)			 ::iron::math::Mat4 _g5 = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 133)			_g5->self->_11 = (_g5->self->_11 * y);
            		}
HXLINE( 134)		{
HXLINE( 134)			 ::iron::math::Mat4 _g6 = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 134)			_g6->self->_12 = (_g6->self->_12 * y);
            		}
HXLINE( 135)		{
HXLINE( 135)			 ::iron::math::Mat4 _g7 = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 135)			_g7->self->_13 = (_g7->self->_13 * y);
            		}
HXLINE( 136)		{
HXLINE( 136)			 ::iron::math::Mat4 _g8 = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 136)			_g8->self->_20 = (_g8->self->_20 * z);
            		}
HXLINE( 137)		{
HXLINE( 137)			 ::iron::math::Mat4 _g9 = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 137)			_g9->self->_21 = (_g9->self->_21 * z);
            		}
HXLINE( 138)		{
HXLINE( 138)			 ::iron::math::Mat4 _g10 = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 138)			_g10->self->_22 = (_g10->self->_22 * z);
            		}
HXLINE( 139)		{
HXLINE( 139)			 ::iron::math::Mat4 _g11 = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 139)			_g11->self->_23 = (_g11->self->_23 * z);
            		}
HXLINE( 140)		return hx::ObjectPtr<OBJ_>(this);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Mat4_obj,scale,return )

 ::iron::math::Mat4 Mat4_obj::multmats3x4( ::iron::math::Mat4 a, ::iron::math::Mat4 b){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_143_multmats3x4)
HXLINE( 144)		float a00 = a->self->_00;
HXDLIN( 144)		float a01 = a->self->_01;
HXDLIN( 144)		float a02 = a->self->_02;
HXDLIN( 144)		float a03 = a->self->_03;
HXLINE( 145)		float a10 = a->self->_10;
HXDLIN( 145)		float a11 = a->self->_11;
HXDLIN( 145)		float a12 = a->self->_12;
HXDLIN( 145)		float a13 = a->self->_13;
HXLINE( 146)		float a20 = a->self->_20;
HXDLIN( 146)		float a21 = a->self->_21;
HXDLIN( 146)		float a22 = a->self->_22;
HXDLIN( 146)		float a23 = a->self->_23;
HXLINE( 147)		float a30 = a->self->_30;
HXDLIN( 147)		float a31 = a->self->_31;
HXDLIN( 147)		float a32 = a->self->_32;
HXDLIN( 147)		float a33 = a->self->_33;
HXLINE( 149)		float b0 = b->self->_00;
HXDLIN( 149)		float b1 = b->self->_10;
HXDLIN( 149)		float b2 = b->self->_20;
HXDLIN( 149)		float b3 = b->self->_30;
HXLINE( 150)		this->self->_00 = ((((a00 * b0) + (a01 * b1)) + (a02 * b2)) + (a03 * b3));
HXLINE( 151)		this->self->_10 = ((((a10 * b0) + (a11 * b1)) + (a12 * b2)) + (a13 * b3));
HXLINE( 152)		this->self->_20 = ((((a20 * b0) + (a21 * b1)) + (a22 * b2)) + (a23 * b3));
HXLINE( 153)		this->self->_30 = ((((a30 * b0) + (a31 * b1)) + (a32 * b2)) + (a33 * b3));
HXLINE( 155)		b0 = b->self->_01;
HXDLIN( 155)		b1 = b->self->_11;
HXDLIN( 155)		b2 = b->self->_21;
HXDLIN( 155)		b3 = b->self->_31;
HXLINE( 156)		this->self->_01 = ((((a00 * b0) + (a01 * b1)) + (a02 * b2)) + (a03 * b3));
HXLINE( 157)		this->self->_11 = ((((a10 * b0) + (a11 * b1)) + (a12 * b2)) + (a13 * b3));
HXLINE( 158)		this->self->_21 = ((((a20 * b0) + (a21 * b1)) + (a22 * b2)) + (a23 * b3));
HXLINE( 159)		this->self->_31 = ((((a30 * b0) + (a31 * b1)) + (a32 * b2)) + (a33 * b3));
HXLINE( 161)		b0 = b->self->_02;
HXDLIN( 161)		b1 = b->self->_12;
HXDLIN( 161)		b2 = b->self->_22;
HXDLIN( 161)		b3 = b->self->_32;
HXLINE( 162)		this->self->_02 = ((((a00 * b0) + (a01 * b1)) + (a02 * b2)) + (a03 * b3));
HXLINE( 163)		this->self->_12 = ((((a10 * b0) + (a11 * b1)) + (a12 * b2)) + (a13 * b3));
HXLINE( 164)		this->self->_22 = ((((a20 * b0) + (a21 * b1)) + (a22 * b2)) + (a23 * b3));
HXLINE( 165)		this->self->_32 = ((((a30 * b0) + (a31 * b1)) + (a32 * b2)) + (a33 * b3));
HXLINE( 167)		this->self->_03 = ( (float)(0) );
HXLINE( 168)		this->self->_13 = ( (float)(0) );
HXLINE( 169)		this->self->_23 = ( (float)(0) );
HXLINE( 170)		this->self->_33 = ( (float)(1) );
HXLINE( 171)		return hx::ObjectPtr<OBJ_>(this);
            	}


HX_DEFINE_DYNAMIC_FUNC2(Mat4_obj,multmats3x4,return )

 ::iron::math::Mat4 Mat4_obj::multmats( ::iron::math::Mat4 b, ::iron::math::Mat4 a){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_174_multmats)
HXLINE( 175)		float a00 = a->self->_00;
HXDLIN( 175)		float a01 = a->self->_01;
HXDLIN( 175)		float a02 = a->self->_02;
HXDLIN( 175)		float a03 = a->self->_03;
HXLINE( 176)		float a10 = a->self->_10;
HXDLIN( 176)		float a11 = a->self->_11;
HXDLIN( 176)		float a12 = a->self->_12;
HXDLIN( 176)		float a13 = a->self->_13;
HXLINE( 177)		float a20 = a->self->_20;
HXDLIN( 177)		float a21 = a->self->_21;
HXDLIN( 177)		float a22 = a->self->_22;
HXDLIN( 177)		float a23 = a->self->_23;
HXLINE( 178)		float a30 = a->self->_30;
HXDLIN( 178)		float a31 = a->self->_31;
HXDLIN( 178)		float a32 = a->self->_32;
HXDLIN( 178)		float a33 = a->self->_33;
HXLINE( 180)		float b0 = b->self->_00;
HXDLIN( 180)		float b1 = b->self->_10;
HXDLIN( 180)		float b2 = b->self->_20;
HXDLIN( 180)		float b3 = b->self->_30;
HXLINE( 181)		this->self->_00 = ((((a00 * b0) + (a01 * b1)) + (a02 * b2)) + (a03 * b3));
HXLINE( 182)		this->self->_10 = ((((a10 * b0) + (a11 * b1)) + (a12 * b2)) + (a13 * b3));
HXLINE( 183)		this->self->_20 = ((((a20 * b0) + (a21 * b1)) + (a22 * b2)) + (a23 * b3));
HXLINE( 184)		this->self->_30 = ((((a30 * b0) + (a31 * b1)) + (a32 * b2)) + (a33 * b3));
HXLINE( 186)		b0 = b->self->_01;
HXDLIN( 186)		b1 = b->self->_11;
HXDLIN( 186)		b2 = b->self->_21;
HXDLIN( 186)		b3 = b->self->_31;
HXLINE( 187)		this->self->_01 = ((((a00 * b0) + (a01 * b1)) + (a02 * b2)) + (a03 * b3));
HXLINE( 188)		this->self->_11 = ((((a10 * b0) + (a11 * b1)) + (a12 * b2)) + (a13 * b3));
HXLINE( 189)		this->self->_21 = ((((a20 * b0) + (a21 * b1)) + (a22 * b2)) + (a23 * b3));
HXLINE( 190)		this->self->_31 = ((((a30 * b0) + (a31 * b1)) + (a32 * b2)) + (a33 * b3));
HXLINE( 192)		b0 = b->self->_02;
HXDLIN( 192)		b1 = b->self->_12;
HXDLIN( 192)		b2 = b->self->_22;
HXDLIN( 192)		b3 = b->self->_32;
HXLINE( 193)		this->self->_02 = ((((a00 * b0) + (a01 * b1)) + (a02 * b2)) + (a03 * b3));
HXLINE( 194)		this->self->_12 = ((((a10 * b0) + (a11 * b1)) + (a12 * b2)) + (a13 * b3));
HXLINE( 195)		this->self->_22 = ((((a20 * b0) + (a21 * b1)) + (a22 * b2)) + (a23 * b3));
HXLINE( 196)		this->self->_32 = ((((a30 * b0) + (a31 * b1)) + (a32 * b2)) + (a33 * b3));
HXLINE( 198)		b0 = b->self->_03;
HXDLIN( 198)		b1 = b->self->_13;
HXDLIN( 198)		b2 = b->self->_23;
HXDLIN( 198)		b3 = b->self->_33;
HXLINE( 199)		this->self->_03 = ((((a00 * b0) + (a01 * b1)) + (a02 * b2)) + (a03 * b3));
HXLINE( 200)		this->self->_13 = ((((a10 * b0) + (a11 * b1)) + (a12 * b2)) + (a13 * b3));
HXLINE( 201)		this->self->_23 = ((((a20 * b0) + (a21 * b1)) + (a22 * b2)) + (a23 * b3));
HXLINE( 202)		this->self->_33 = ((((a30 * b0) + (a31 * b1)) + (a32 * b2)) + (a33 * b3));
HXLINE( 204)		return hx::ObjectPtr<OBJ_>(this);
            	}


HX_DEFINE_DYNAMIC_FUNC2(Mat4_obj,multmats,return )

 ::iron::math::Mat4 Mat4_obj::multmat2( ::iron::math::Mat4 m){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_207_multmat2)
HXDLIN( 207)		float a00 = this->self->_00;
HXDLIN( 207)		float a01 = this->self->_01;
HXDLIN( 207)		float a02 = this->self->_02;
HXDLIN( 207)		float a03 = this->self->_03;
HXDLIN( 207)		float a10 = this->self->_10;
HXDLIN( 207)		float a11 = this->self->_11;
HXDLIN( 207)		float a12 = this->self->_12;
HXDLIN( 207)		float a13 = this->self->_13;
HXDLIN( 207)		float a20 = this->self->_20;
HXDLIN( 207)		float a21 = this->self->_21;
HXDLIN( 207)		float a22 = this->self->_22;
HXDLIN( 207)		float a23 = this->self->_23;
HXDLIN( 207)		float a30 = this->self->_30;
HXDLIN( 207)		float a31 = this->self->_31;
HXDLIN( 207)		float a32 = this->self->_32;
HXDLIN( 207)		float a33 = this->self->_33;
HXDLIN( 207)		float b0 = m->self->_00;
HXDLIN( 207)		float b1 = m->self->_10;
HXDLIN( 207)		float b2 = m->self->_20;
HXDLIN( 207)		float b3 = m->self->_30;
HXDLIN( 207)		this->self->_00 = ((((a00 * b0) + (a01 * b1)) + (a02 * b2)) + (a03 * b3));
HXDLIN( 207)		this->self->_10 = ((((a10 * b0) + (a11 * b1)) + (a12 * b2)) + (a13 * b3));
HXDLIN( 207)		this->self->_20 = ((((a20 * b0) + (a21 * b1)) + (a22 * b2)) + (a23 * b3));
HXDLIN( 207)		this->self->_30 = ((((a30 * b0) + (a31 * b1)) + (a32 * b2)) + (a33 * b3));
HXDLIN( 207)		b0 = m->self->_01;
HXDLIN( 207)		b1 = m->self->_11;
HXDLIN( 207)		b2 = m->self->_21;
HXDLIN( 207)		b3 = m->self->_31;
HXDLIN( 207)		this->self->_01 = ((((a00 * b0) + (a01 * b1)) + (a02 * b2)) + (a03 * b3));
HXDLIN( 207)		this->self->_11 = ((((a10 * b0) + (a11 * b1)) + (a12 * b2)) + (a13 * b3));
HXDLIN( 207)		this->self->_21 = ((((a20 * b0) + (a21 * b1)) + (a22 * b2)) + (a23 * b3));
HXDLIN( 207)		this->self->_31 = ((((a30 * b0) + (a31 * b1)) + (a32 * b2)) + (a33 * b3));
HXDLIN( 207)		b0 = m->self->_02;
HXDLIN( 207)		b1 = m->self->_12;
HXDLIN( 207)		b2 = m->self->_22;
HXDLIN( 207)		b3 = m->self->_32;
HXDLIN( 207)		this->self->_02 = ((((a00 * b0) + (a01 * b1)) + (a02 * b2)) + (a03 * b3));
HXDLIN( 207)		this->self->_12 = ((((a10 * b0) + (a11 * b1)) + (a12 * b2)) + (a13 * b3));
HXDLIN( 207)		this->self->_22 = ((((a20 * b0) + (a21 * b1)) + (a22 * b2)) + (a23 * b3));
HXDLIN( 207)		this->self->_32 = ((((a30 * b0) + (a31 * b1)) + (a32 * b2)) + (a33 * b3));
HXDLIN( 207)		b0 = m->self->_03;
HXDLIN( 207)		b1 = m->self->_13;
HXDLIN( 207)		b2 = m->self->_23;
HXDLIN( 207)		b3 = m->self->_33;
HXDLIN( 207)		this->self->_03 = ((((a00 * b0) + (a01 * b1)) + (a02 * b2)) + (a03 * b3));
HXDLIN( 207)		this->self->_13 = ((((a10 * b0) + (a11 * b1)) + (a12 * b2)) + (a13 * b3));
HXDLIN( 207)		this->self->_23 = ((((a20 * b0) + (a21 * b1)) + (a22 * b2)) + (a23 * b3));
HXDLIN( 207)		this->self->_33 = ((((a30 * b0) + (a31 * b1)) + (a32 * b2)) + (a33 * b3));
HXDLIN( 207)		return hx::ObjectPtr<OBJ_>(this);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Mat4_obj,multmat2,return )

 ::iron::math::Mat4 Mat4_obj::multmat( ::iron::math::Mat4 m){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_209_multmat)
HXLINE( 210)		float a00 = this->self->_00;
HXDLIN( 210)		float a01 = this->self->_01;
HXDLIN( 210)		float a02 = this->self->_02;
HXDLIN( 210)		float a03 = this->self->_03;
HXLINE( 211)		float a10 = this->self->_10;
HXDLIN( 211)		float a11 = this->self->_11;
HXDLIN( 211)		float a12 = this->self->_12;
HXDLIN( 211)		float a13 = this->self->_13;
HXLINE( 212)		float a20 = this->self->_20;
HXDLIN( 212)		float a21 = this->self->_21;
HXDLIN( 212)		float a22 = this->self->_22;
HXDLIN( 212)		float a23 = this->self->_23;
HXLINE( 213)		float a30 = this->self->_30;
HXDLIN( 213)		float a31 = this->self->_31;
HXDLIN( 213)		float a32 = this->self->_32;
HXDLIN( 213)		float a33 = this->self->_33;
HXLINE( 215)		float b0 = m->self->_00;
HXDLIN( 215)		float b1 = m->self->_10;
HXDLIN( 215)		float b2 = m->self->_20;
HXDLIN( 215)		float b3 = m->self->_30;
HXLINE( 216)		this->self->_00 = ((((a00 * b0) + (a01 * b1)) + (a02 * b2)) + (a03 * b3));
HXLINE( 217)		this->self->_10 = ((((a10 * b0) + (a11 * b1)) + (a12 * b2)) + (a13 * b3));
HXLINE( 218)		this->self->_20 = ((((a20 * b0) + (a21 * b1)) + (a22 * b2)) + (a23 * b3));
HXLINE( 219)		this->self->_30 = ((((a30 * b0) + (a31 * b1)) + (a32 * b2)) + (a33 * b3));
HXLINE( 221)		b0 = m->self->_01;
HXDLIN( 221)		b1 = m->self->_11;
HXDLIN( 221)		b2 = m->self->_21;
HXDLIN( 221)		b3 = m->self->_31;
HXLINE( 222)		this->self->_01 = ((((a00 * b0) + (a01 * b1)) + (a02 * b2)) + (a03 * b3));
HXLINE( 223)		this->self->_11 = ((((a10 * b0) + (a11 * b1)) + (a12 * b2)) + (a13 * b3));
HXLINE( 224)		this->self->_21 = ((((a20 * b0) + (a21 * b1)) + (a22 * b2)) + (a23 * b3));
HXLINE( 225)		this->self->_31 = ((((a30 * b0) + (a31 * b1)) + (a32 * b2)) + (a33 * b3));
HXLINE( 227)		b0 = m->self->_02;
HXDLIN( 227)		b1 = m->self->_12;
HXDLIN( 227)		b2 = m->self->_22;
HXDLIN( 227)		b3 = m->self->_32;
HXLINE( 228)		this->self->_02 = ((((a00 * b0) + (a01 * b1)) + (a02 * b2)) + (a03 * b3));
HXLINE( 229)		this->self->_12 = ((((a10 * b0) + (a11 * b1)) + (a12 * b2)) + (a13 * b3));
HXLINE( 230)		this->self->_22 = ((((a20 * b0) + (a21 * b1)) + (a22 * b2)) + (a23 * b3));
HXLINE( 231)		this->self->_32 = ((((a30 * b0) + (a31 * b1)) + (a32 * b2)) + (a33 * b3));
HXLINE( 233)		b0 = m->self->_03;
HXDLIN( 233)		b1 = m->self->_13;
HXDLIN( 233)		b2 = m->self->_23;
HXDLIN( 233)		b3 = m->self->_33;
HXLINE( 234)		this->self->_03 = ((((a00 * b0) + (a01 * b1)) + (a02 * b2)) + (a03 * b3));
HXLINE( 235)		this->self->_13 = ((((a10 * b0) + (a11 * b1)) + (a12 * b2)) + (a13 * b3));
HXLINE( 236)		this->self->_23 = ((((a20 * b0) + (a21 * b1)) + (a22 * b2)) + (a23 * b3));
HXLINE( 237)		this->self->_33 = ((((a30 * b0) + (a31 * b1)) + (a32 * b2)) + (a33 * b3));
HXLINE( 239)		return hx::ObjectPtr<OBJ_>(this);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Mat4_obj,multmat,return )

 ::iron::math::Mat4 Mat4_obj::getInverse( ::iron::math::Mat4 m){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_242_getInverse)
HXLINE( 243)		float a00 = m->self->_00;
HXDLIN( 243)		float a01 = m->self->_01;
HXDLIN( 243)		float a02 = m->self->_02;
HXDLIN( 243)		float a03 = m->self->_03;
HXLINE( 244)		float a10 = m->self->_10;
HXDLIN( 244)		float a11 = m->self->_11;
HXDLIN( 244)		float a12 = m->self->_12;
HXDLIN( 244)		float a13 = m->self->_13;
HXLINE( 245)		float a20 = m->self->_20;
HXDLIN( 245)		float a21 = m->self->_21;
HXDLIN( 245)		float a22 = m->self->_22;
HXDLIN( 245)		float a23 = m->self->_23;
HXLINE( 246)		float a30 = m->self->_30;
HXDLIN( 246)		float a31 = m->self->_31;
HXDLIN( 246)		float a32 = m->self->_32;
HXDLIN( 246)		float a33 = m->self->_33;
HXLINE( 247)		float b00 = ((a00 * a11) - (a01 * a10));
HXLINE( 248)		float b01 = ((a00 * a12) - (a02 * a10));
HXLINE( 249)		float b02 = ((a00 * a13) - (a03 * a10));
HXLINE( 250)		float b03 = ((a01 * a12) - (a02 * a11));
HXLINE( 251)		float b04 = ((a01 * a13) - (a03 * a11));
HXLINE( 252)		float b05 = ((a02 * a13) - (a03 * a12));
HXLINE( 253)		float b06 = ((a20 * a31) - (a21 * a30));
HXLINE( 254)		float b07 = ((a20 * a32) - (a22 * a30));
HXLINE( 255)		float b08 = ((a20 * a33) - (a23 * a30));
HXLINE( 256)		float b09 = ((a21 * a32) - (a22 * a31));
HXLINE( 257)		float b10 = ((a21 * a33) - (a23 * a31));
HXLINE( 258)		float b11 = ((a22 * a33) - (a23 * a32));
HXLINE( 260)		float det = ((((((b00 * b11) - (b01 * b10)) + (b02 * b09)) + (b03 * b08)) - (b04 * b07)) + (b05 * b06));
HXLINE( 261)		if ((det == ((Float)0.0))) {
HXLINE( 261)			this->self->_00 = ( (float)(((Float)1.0)) );
HXDLIN( 261)			this->self->_01 = ( (float)(((Float)0.0)) );
HXDLIN( 261)			this->self->_02 = ( (float)(((Float)0.0)) );
HXDLIN( 261)			this->self->_03 = ( (float)(((Float)0.0)) );
HXDLIN( 261)			this->self->_10 = ( (float)(((Float)0.0)) );
HXDLIN( 261)			this->self->_11 = ( (float)(((Float)1.0)) );
HXDLIN( 261)			this->self->_12 = ( (float)(((Float)0.0)) );
HXDLIN( 261)			this->self->_13 = ( (float)(((Float)0.0)) );
HXDLIN( 261)			this->self->_20 = ( (float)(((Float)0.0)) );
HXDLIN( 261)			this->self->_21 = ( (float)(((Float)0.0)) );
HXDLIN( 261)			this->self->_22 = ( (float)(((Float)1.0)) );
HXDLIN( 261)			this->self->_23 = ( (float)(((Float)0.0)) );
HXDLIN( 261)			this->self->_30 = ( (float)(((Float)0.0)) );
HXDLIN( 261)			this->self->_31 = ( (float)(((Float)0.0)) );
HXDLIN( 261)			this->self->_32 = ( (float)(((Float)0.0)) );
HXDLIN( 261)			this->self->_33 = ( (float)(((Float)1.0)) );
HXDLIN( 261)			return hx::ObjectPtr<OBJ_>(this);
            		}
HXLINE( 262)		det = ( (float)((((Float)1.0) / ( (Float)(det) ))) );
HXLINE( 264)		this->self->_00 = ((((a11 * b11) - (a12 * b10)) + (a13 * b09)) * det);
HXLINE( 265)		this->self->_01 = ((((a02 * b10) - (a01 * b11)) - (a03 * b09)) * det);
HXLINE( 266)		this->self->_02 = ((((a31 * b05) - (a32 * b04)) + (a33 * b03)) * det);
HXLINE( 267)		this->self->_03 = ((((a22 * b04) - (a21 * b05)) - (a23 * b03)) * det);
HXLINE( 268)		this->self->_10 = ((((a12 * b08) - (a10 * b11)) - (a13 * b07)) * det);
HXLINE( 269)		this->self->_11 = ((((a00 * b11) - (a02 * b08)) + (a03 * b07)) * det);
HXLINE( 270)		this->self->_12 = ((((a32 * b02) - (a30 * b05)) - (a33 * b01)) * det);
HXLINE( 271)		this->self->_13 = ((((a20 * b05) - (a22 * b02)) + (a23 * b01)) * det);
HXLINE( 272)		this->self->_20 = ((((a10 * b10) - (a11 * b08)) + (a13 * b06)) * det);
HXLINE( 273)		this->self->_21 = ((((a01 * b08) - (a00 * b10)) - (a03 * b06)) * det);
HXLINE( 274)		this->self->_22 = ((((a30 * b04) - (a31 * b02)) + (a33 * b00)) * det);
HXLINE( 275)		this->self->_23 = ((((a21 * b02) - (a20 * b04)) - (a23 * b00)) * det);
HXLINE( 276)		this->self->_30 = ((((a11 * b07) - (a10 * b09)) - (a12 * b06)) * det);
HXLINE( 277)		this->self->_31 = ((((a00 * b09) - (a01 * b07)) + (a02 * b06)) * det);
HXLINE( 278)		this->self->_32 = ((((a31 * b01) - (a30 * b03)) - (a32 * b00)) * det);
HXLINE( 279)		this->self->_33 = ((((a20 * b03) - (a21 * b01)) + (a22 * b00)) * det);
HXLINE( 281)		return hx::ObjectPtr<OBJ_>(this);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Mat4_obj,getInverse,return )

 ::iron::math::Mat4 Mat4_obj::transpose(){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_284_transpose)
HXLINE( 285)		float f = this->self->_01;
HXDLIN( 285)		this->self->_01 = this->self->_10;
HXDLIN( 285)		this->self->_10 = f;
HXLINE( 286)		f = this->self->_02;
HXDLIN( 286)		this->self->_02 = this->self->_20;
HXDLIN( 286)		this->self->_20 = f;
HXLINE( 287)		f = this->self->_03;
HXDLIN( 287)		this->self->_03 = this->self->_30;
HXDLIN( 287)		this->self->_30 = f;
HXLINE( 288)		f = this->self->_12;
HXDLIN( 288)		this->self->_12 = this->self->_21;
HXDLIN( 288)		this->self->_21 = f;
HXLINE( 289)		f = this->self->_13;
HXDLIN( 289)		this->self->_13 = this->self->_31;
HXDLIN( 289)		this->self->_31 = f;
HXLINE( 290)		f = this->self->_23;
HXDLIN( 290)		this->self->_23 = this->self->_32;
HXDLIN( 290)		this->self->_32 = f;
HXLINE( 291)		return hx::ObjectPtr<OBJ_>(this);
            	}


HX_DEFINE_DYNAMIC_FUNC0(Mat4_obj,transpose,return )

 ::iron::math::Mat4 Mat4_obj::transpose3x3(){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_294_transpose3x3)
HXLINE( 295)		float f = this->self->_01;
HXDLIN( 295)		this->self->_01 = this->self->_10;
HXDLIN( 295)		this->self->_10 = f;
HXLINE( 296)		f = this->self->_02;
HXDLIN( 296)		this->self->_02 = this->self->_20;
HXDLIN( 296)		this->self->_20 = f;
HXLINE( 297)		f = this->self->_12;
HXDLIN( 297)		this->self->_12 = this->self->_21;
HXDLIN( 297)		this->self->_21 = f;
HXLINE( 298)		return hx::ObjectPtr<OBJ_>(this);
            	}


HX_DEFINE_DYNAMIC_FUNC0(Mat4_obj,transpose3x3,return )

 ::iron::math::Mat4 Mat4_obj::clone(){
            	HX_GC_STACKFRAME(&_hx_pos_04012593dfa58962_302_clone)
HXDLIN( 302)		return  ::iron::math::Mat4_obj::__alloc( HX_CTX ,this->self->_00,this->self->_10,this->self->_20,this->self->_30,this->self->_01,this->self->_11,this->self->_21,this->self->_31,this->self->_02,this->self->_12,this->self->_22,this->self->_32,this->self->_03,this->self->_13,this->self->_23,this->self->_33);
            	}


HX_DEFINE_DYNAMIC_FUNC0(Mat4_obj,clone,return )

 ::iron::math::Mat4 Mat4_obj::setF32( ::kha::arrays::Float32ArrayPrivate a,hx::Null< int >  __o_offset){
int offset = __o_offset.Default(0);
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_310_setF32)
HXLINE( 311)		{
HXLINE( 311)			float f = a->self.get(offset);
HXDLIN( 311)			this->self->_00 = f;
            		}
HXDLIN( 311)		{
HXLINE( 311)			 float32array a1 = a->self;
HXDLIN( 311)			float f1 = a1.get((1 + offset));
HXDLIN( 311)			this->self->_10 = f1;
            		}
HXDLIN( 311)		{
HXLINE( 311)			 float32array a2 = a->self;
HXDLIN( 311)			float f2 = a2.get((2 + offset));
HXDLIN( 311)			this->self->_20 = f2;
            		}
HXDLIN( 311)		{
HXLINE( 311)			 float32array a3 = a->self;
HXDLIN( 311)			float f3 = a3.get((3 + offset));
HXDLIN( 311)			this->self->_30 = f3;
            		}
HXLINE( 312)		{
HXLINE( 312)			 float32array a4 = a->self;
HXDLIN( 312)			float f4 = a4.get((4 + offset));
HXDLIN( 312)			this->self->_01 = f4;
            		}
HXDLIN( 312)		{
HXLINE( 312)			 float32array a5 = a->self;
HXDLIN( 312)			float f5 = a5.get((5 + offset));
HXDLIN( 312)			this->self->_11 = f5;
            		}
HXDLIN( 312)		{
HXLINE( 312)			 float32array a6 = a->self;
HXDLIN( 312)			float f6 = a6.get((6 + offset));
HXDLIN( 312)			this->self->_21 = f6;
            		}
HXDLIN( 312)		{
HXLINE( 312)			 float32array a7 = a->self;
HXDLIN( 312)			float f7 = a7.get((7 + offset));
HXDLIN( 312)			this->self->_31 = f7;
            		}
HXLINE( 313)		{
HXLINE( 313)			 float32array a8 = a->self;
HXDLIN( 313)			float f8 = a8.get((8 + offset));
HXDLIN( 313)			this->self->_02 = f8;
            		}
HXDLIN( 313)		{
HXLINE( 313)			 float32array a9 = a->self;
HXDLIN( 313)			float f9 = a9.get((9 + offset));
HXDLIN( 313)			this->self->_12 = f9;
            		}
HXDLIN( 313)		{
HXLINE( 313)			 float32array a10 = a->self;
HXDLIN( 313)			float f10 = a10.get((10 + offset));
HXDLIN( 313)			this->self->_22 = f10;
            		}
HXDLIN( 313)		{
HXLINE( 313)			 float32array a11 = a->self;
HXDLIN( 313)			float f11 = a11.get((11 + offset));
HXDLIN( 313)			this->self->_32 = f11;
            		}
HXLINE( 314)		{
HXLINE( 314)			 float32array a12 = a->self;
HXDLIN( 314)			float f12 = a12.get((12 + offset));
HXDLIN( 314)			this->self->_03 = f12;
            		}
HXDLIN( 314)		{
HXLINE( 314)			 float32array a13 = a->self;
HXDLIN( 314)			float f13 = a13.get((13 + offset));
HXDLIN( 314)			this->self->_13 = f13;
            		}
HXDLIN( 314)		{
HXLINE( 314)			 float32array a14 = a->self;
HXDLIN( 314)			float f14 = a14.get((14 + offset));
HXDLIN( 314)			this->self->_23 = f14;
            		}
HXDLIN( 314)		{
HXLINE( 314)			 float32array a15 = a->self;
HXDLIN( 314)			float f15 = a15.get((15 + offset));
HXDLIN( 314)			this->self->_33 = f15;
            		}
HXLINE( 315)		return hx::ObjectPtr<OBJ_>(this);
            	}


HX_DEFINE_DYNAMIC_FUNC2(Mat4_obj,setF32,return )

 ::iron::math::Mat4 Mat4_obj::setFrom( ::iron::math::Mat4 m){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_318_setFrom)
HXLINE( 319)		this->self->_00 = m->self->_00;
HXDLIN( 319)		this->self->_01 = m->self->_01;
HXDLIN( 319)		this->self->_02 = m->self->_02;
HXDLIN( 319)		this->self->_03 = m->self->_03;
HXLINE( 320)		this->self->_10 = m->self->_10;
HXDLIN( 320)		this->self->_11 = m->self->_11;
HXDLIN( 320)		this->self->_12 = m->self->_12;
HXDLIN( 320)		this->self->_13 = m->self->_13;
HXLINE( 321)		this->self->_20 = m->self->_20;
HXDLIN( 321)		this->self->_21 = m->self->_21;
HXDLIN( 321)		this->self->_22 = m->self->_22;
HXDLIN( 321)		this->self->_23 = m->self->_23;
HXLINE( 322)		this->self->_30 = m->self->_30;
HXDLIN( 322)		this->self->_31 = m->self->_31;
HXDLIN( 322)		this->self->_32 = m->self->_32;
HXDLIN( 322)		this->self->_33 = m->self->_33;
HXLINE( 323)		return hx::ObjectPtr<OBJ_>(this);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Mat4_obj,setFrom,return )

 ::iron::math::Vec4 Mat4_obj::getLoc(){
            	HX_GC_STACKFRAME(&_hx_pos_04012593dfa58962_327_getLoc)
HXDLIN( 327)		return  ::iron::math::Vec4_obj::__alloc( HX_CTX ,this->self->_30,this->self->_31,this->self->_32,this->self->_33);
            	}


HX_DEFINE_DYNAMIC_FUNC0(Mat4_obj,getLoc,return )

 ::iron::math::Vec4 Mat4_obj::getScale(){
            	HX_GC_STACKFRAME(&_hx_pos_04012593dfa58962_331_getScale)
HXLINE( 332)		float v = (this->self->_00 * this->self->_00);
HXDLIN( 332)		float v1 = (v + (this->self->_10 * this->self->_10));
HXLINE( 333)		float v2 = (this->self->_01 * this->self->_01);
HXDLIN( 333)		float v3 = (v2 + (this->self->_11 * this->self->_11));
HXLINE( 334)		float v4 = (this->self->_02 * this->self->_02);
HXDLIN( 334)		float v5 = (v4 + (this->self->_12 * this->self->_12));
HXLINE( 331)		return  ::iron::math::Vec4_obj::__alloc( HX_CTX ,::Math_obj::sqrt(( (Float)((v1 + (this->self->_20 * this->self->_20))) )),::Math_obj::sqrt(( (Float)((v3 + (this->self->_21 * this->self->_21))) )),::Math_obj::sqrt(( (Float)((v5 + (this->self->_22 * this->self->_22))) )),null());
            	}


HX_DEFINE_DYNAMIC_FUNC0(Mat4_obj,getScale,return )

 ::iron::math::Mat4 Mat4_obj::mult(float s){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_338_mult)
HXLINE( 339)		{
HXLINE( 339)			 ::iron::math::Mat4 _g = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 339)			_g->self->_00 = (_g->self->_00 * s);
            		}
HXDLIN( 339)		{
HXLINE( 339)			 ::iron::math::Mat4 _g1 = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 339)			_g1->self->_10 = (_g1->self->_10 * s);
            		}
HXDLIN( 339)		{
HXLINE( 339)			 ::iron::math::Mat4 _g2 = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 339)			_g2->self->_20 = (_g2->self->_20 * s);
            		}
HXDLIN( 339)		{
HXLINE( 339)			 ::iron::math::Mat4 _g3 = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 339)			_g3->self->_30 = (_g3->self->_30 * s);
            		}
HXLINE( 340)		{
HXLINE( 340)			 ::iron::math::Mat4 _g4 = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 340)			_g4->self->_01 = (_g4->self->_01 * s);
            		}
HXDLIN( 340)		{
HXLINE( 340)			 ::iron::math::Mat4 _g5 = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 340)			_g5->self->_11 = (_g5->self->_11 * s);
            		}
HXDLIN( 340)		{
HXLINE( 340)			 ::iron::math::Mat4 _g6 = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 340)			_g6->self->_21 = (_g6->self->_21 * s);
            		}
HXDLIN( 340)		{
HXLINE( 340)			 ::iron::math::Mat4 _g7 = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 340)			_g7->self->_31 = (_g7->self->_31 * s);
            		}
HXLINE( 341)		{
HXLINE( 341)			 ::iron::math::Mat4 _g8 = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 341)			_g8->self->_02 = (_g8->self->_02 * s);
            		}
HXDLIN( 341)		{
HXLINE( 341)			 ::iron::math::Mat4 _g9 = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 341)			_g9->self->_12 = (_g9->self->_12 * s);
            		}
HXDLIN( 341)		{
HXLINE( 341)			 ::iron::math::Mat4 _g10 = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 341)			_g10->self->_22 = (_g10->self->_22 * s);
            		}
HXDLIN( 341)		{
HXLINE( 341)			 ::iron::math::Mat4 _g11 = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 341)			_g11->self->_32 = (_g11->self->_32 * s);
            		}
HXLINE( 342)		{
HXLINE( 342)			 ::iron::math::Mat4 _g12 = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 342)			_g12->self->_03 = (_g12->self->_03 * s);
            		}
HXDLIN( 342)		{
HXLINE( 342)			 ::iron::math::Mat4 _g13 = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 342)			_g13->self->_13 = (_g13->self->_13 * s);
            		}
HXDLIN( 342)		{
HXLINE( 342)			 ::iron::math::Mat4 _g14 = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 342)			_g14->self->_23 = (_g14->self->_23 * s);
            		}
HXDLIN( 342)		{
HXLINE( 342)			 ::iron::math::Mat4 _g15 = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 342)			_g15->self->_33 = (_g15->self->_33 * s);
            		}
HXLINE( 343)		return hx::ObjectPtr<OBJ_>(this);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Mat4_obj,mult,return )

 ::iron::math::Mat4 Mat4_obj::toRotation(){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_346_toRotation)
HXLINE( 347)		 ::iron::math::Vec4 _this = ::iron::math::Mat4_obj::helpVec;
HXDLIN( 347)		_this->x = this->self->_00;
HXDLIN( 347)		_this->y = this->self->_01;
HXDLIN( 347)		_this->z = this->self->_02;
HXDLIN( 347)		_this->w = ( (float)(((Float)1.0)) );
HXDLIN( 347)		 ::iron::math::Vec4 _this1 = _this;
HXDLIN( 347)		float v = (_this1->x * _this1->x);
HXDLIN( 347)		float v1 = (v + (_this1->y * _this1->y));
HXDLIN( 347)		Float scale = (((Float)1.0) / ( (Float)(( (float)(::Math_obj::sqrt(( (Float)((v1 + (_this1->z * _this1->z))) ))) )) ));
HXLINE( 348)		this->self->_00 = ( (float)((this->self->_00 * scale)) );
HXLINE( 349)		this->self->_01 = ( (float)((this->self->_01 * scale)) );
HXLINE( 350)		this->self->_02 = ( (float)((this->self->_02 * scale)) );
HXLINE( 351)		 ::iron::math::Vec4 _this2 = ::iron::math::Mat4_obj::helpVec;
HXDLIN( 351)		_this2->x = this->self->_10;
HXDLIN( 351)		_this2->y = this->self->_11;
HXDLIN( 351)		_this2->z = this->self->_12;
HXDLIN( 351)		_this2->w = ( (float)(((Float)1.0)) );
HXDLIN( 351)		 ::iron::math::Vec4 _this3 = _this2;
HXDLIN( 351)		float v2 = (_this3->x * _this3->x);
HXDLIN( 351)		float v3 = (v2 + (_this3->y * _this3->y));
HXDLIN( 351)		scale = (((Float)1.0) / ( (Float)(( (float)(::Math_obj::sqrt(( (Float)((v3 + (_this3->z * _this3->z))) ))) )) ));
HXLINE( 352)		this->self->_10 = ( (float)((this->self->_10 * scale)) );
HXLINE( 353)		this->self->_11 = ( (float)((this->self->_11 * scale)) );
HXLINE( 354)		this->self->_12 = ( (float)((this->self->_12 * scale)) );
HXLINE( 355)		 ::iron::math::Vec4 _this4 = ::iron::math::Mat4_obj::helpVec;
HXDLIN( 355)		_this4->x = this->self->_20;
HXDLIN( 355)		_this4->y = this->self->_21;
HXDLIN( 355)		_this4->z = this->self->_22;
HXDLIN( 355)		_this4->w = ( (float)(((Float)1.0)) );
HXDLIN( 355)		 ::iron::math::Vec4 _this5 = _this4;
HXDLIN( 355)		float v4 = (_this5->x * _this5->x);
HXDLIN( 355)		float v5 = (v4 + (_this5->y * _this5->y));
HXDLIN( 355)		scale = (((Float)1.0) / ( (Float)(( (float)(::Math_obj::sqrt(( (Float)((v5 + (_this5->z * _this5->z))) ))) )) ));
HXLINE( 356)		this->self->_20 = ( (float)((this->self->_20 * scale)) );
HXLINE( 357)		this->self->_21 = ( (float)((this->self->_21 * scale)) );
HXLINE( 358)		this->self->_22 = ( (float)((this->self->_22 * scale)) );
HXLINE( 359)		this->self->_03 = ( (float)(((Float)0.0)) );
HXLINE( 360)		this->self->_13 = ( (float)(((Float)0.0)) );
HXLINE( 361)		this->self->_23 = ( (float)(((Float)0.0)) );
HXLINE( 362)		this->self->_30 = ( (float)(((Float)0.0)) );
HXLINE( 363)		this->self->_31 = ( (float)(((Float)0.0)) );
HXLINE( 364)		this->self->_32 = ( (float)(((Float)0.0)) );
HXLINE( 365)		this->self->_33 = ( (float)(((Float)1.0)) );
HXLINE( 366)		return hx::ObjectPtr<OBJ_>(this);
            	}


HX_DEFINE_DYNAMIC_FUNC0(Mat4_obj,toRotation,return )

 ::iron::math::Mat4 Mat4_obj::setLookAt( ::iron::math::Vec4 eye, ::iron::math::Vec4 center, ::iron::math::Vec4 up){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_395_setLookAt)
HXLINE( 396)		float f0 = (center->x - eye->x);
HXLINE( 397)		float f1 = (center->y - eye->y);
HXLINE( 398)		float f2 = (center->z - eye->z);
HXLINE( 399)		Float n = (((Float)1.0) / ::Math_obj::sqrt(( (Float)((((f0 * f0) + (f1 * f1)) + (f2 * f2))) )));
HXLINE( 400)		f0 = (f0 * n);
HXLINE( 401)		f1 = (f1 * n);
HXLINE( 402)		f2 = (f2 * n);
HXLINE( 404)		float s0 = (f1 * up->z);
HXDLIN( 404)		float s01 = (s0 - (f2 * up->y));
HXLINE( 405)		float s1 = (f2 * up->x);
HXDLIN( 405)		float s11 = (s1 - (f0 * up->z));
HXLINE( 406)		float s2 = (f0 * up->y);
HXDLIN( 406)		float s21 = (s2 - (f1 * up->x));
HXLINE( 407)		n = (((Float)1.0) / ::Math_obj::sqrt(( (Float)((((s01 * s01) + (s11 * s11)) + (s21 * s21))) )));
HXLINE( 408)		s01 = (s01 * n);
HXLINE( 409)		s11 = (s11 * n);
HXLINE( 410)		s21 = (s21 * n);
HXLINE( 412)		float u0 = ((s11 * f2) - (s21 * f1));
HXLINE( 413)		float u1 = ((s21 * f0) - (s01 * f2));
HXLINE( 414)		float u2 = ((s01 * f1) - (s11 * f0));
HXLINE( 415)		float d0 = (-(eye->x) * s01);
HXDLIN( 415)		float d01 = (d0 - (eye->y * s11));
HXDLIN( 415)		float d02 = (d01 - (eye->z * s21));
HXLINE( 416)		float d1 = (-(eye->x) * u0);
HXDLIN( 416)		float d11 = (d1 - (eye->y * u1));
HXDLIN( 416)		float d12 = (d11 - (eye->z * u2));
HXLINE( 417)		float d2 = (eye->x * f0);
HXDLIN( 417)		float d21 = (d2 + (eye->y * f1));
HXDLIN( 417)		float d22 = (d21 + (eye->z * f2));
HXLINE( 419)		this->self->_00 = s01;
HXLINE( 420)		this->self->_10 = s11;
HXLINE( 421)		this->self->_20 = s21;
HXLINE( 422)		this->self->_30 = d02;
HXLINE( 423)		this->self->_01 = u0;
HXLINE( 424)		this->self->_11 = u1;
HXLINE( 425)		this->self->_21 = u2;
HXLINE( 426)		this->self->_31 = d12;
HXLINE( 427)		this->self->_02 = -(f0);
HXLINE( 428)		this->self->_12 = -(f1);
HXLINE( 429)		this->self->_22 = -(f2);
HXLINE( 430)		this->self->_32 = d22;
HXLINE( 431)		this->self->_03 = ( (float)(((Float)0.0)) );
HXLINE( 432)		this->self->_13 = ( (float)(((Float)0.0)) );
HXLINE( 433)		this->self->_23 = ( (float)(((Float)0.0)) );
HXLINE( 434)		this->self->_33 = ( (float)(((Float)1.0)) );
HXLINE( 435)		return hx::ObjectPtr<OBJ_>(this);
            	}


HX_DEFINE_DYNAMIC_FUNC3(Mat4_obj,setLookAt,return )

void Mat4_obj::applyQuat( ::iron::math::Quat q){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_438_applyQuat)
HXLINE( 439)		{
HXLINE( 439)			 ::iron::math::Mat4 _this = ::iron::math::Mat4_obj::helpMat;
HXDLIN( 439)			float x = q->x;
HXDLIN( 439)			float y = q->y;
HXDLIN( 439)			float z = q->z;
HXDLIN( 439)			float w = q->w;
HXDLIN( 439)			float x2 = (x + x);
HXDLIN( 439)			float y2 = (y + y);
HXDLIN( 439)			float z2 = (z + z);
HXDLIN( 439)			float xx = (x * x2);
HXDLIN( 439)			float xy = (x * y2);
HXDLIN( 439)			float xz = (x * z2);
HXDLIN( 439)			float yy = (y * y2);
HXDLIN( 439)			float yz = (y * z2);
HXDLIN( 439)			float zz = (z * z2);
HXDLIN( 439)			float wx = (w * x2);
HXDLIN( 439)			float wy = (w * y2);
HXDLIN( 439)			float wz = (w * z2);
HXDLIN( 439)			_this->self->_00 = ( (float)((((Float)1.0) - (yy + zz))) );
HXDLIN( 439)			_this->self->_10 = (xy - wz);
HXDLIN( 439)			_this->self->_20 = (xz + wy);
HXDLIN( 439)			_this->self->_01 = (xy + wz);
HXDLIN( 439)			_this->self->_11 = ( (float)((((Float)1.0) - (xx + zz))) );
HXDLIN( 439)			_this->self->_21 = (yz - wx);
HXDLIN( 439)			_this->self->_02 = (xz - wy);
HXDLIN( 439)			_this->self->_12 = (yz + wx);
HXDLIN( 439)			_this->self->_22 = ( (float)((((Float)1.0) - (xx + yy))) );
HXDLIN( 439)			_this->self->_03 = ( (float)(((Float)0.0)) );
HXDLIN( 439)			_this->self->_13 = ( (float)(((Float)0.0)) );
HXDLIN( 439)			_this->self->_23 = ( (float)(((Float)0.0)) );
HXDLIN( 439)			_this->self->_30 = ( (float)(((Float)0.0)) );
HXDLIN( 439)			_this->self->_31 = ( (float)(((Float)0.0)) );
HXDLIN( 439)			_this->self->_32 = ( (float)(((Float)0.0)) );
HXDLIN( 439)			_this->self->_33 = ( (float)(((Float)1.0)) );
            		}
HXLINE( 440)		{
HXLINE( 440)			 ::iron::math::Mat4 m = ::iron::math::Mat4_obj::helpMat;
HXDLIN( 440)			{
HXLINE( 440)				float a00 = this->self->_00;
HXDLIN( 440)				float a01 = this->self->_01;
HXDLIN( 440)				float a02 = this->self->_02;
HXDLIN( 440)				float a03 = this->self->_03;
HXDLIN( 440)				float a10 = this->self->_10;
HXDLIN( 440)				float a11 = this->self->_11;
HXDLIN( 440)				float a12 = this->self->_12;
HXDLIN( 440)				float a13 = this->self->_13;
HXDLIN( 440)				float a20 = this->self->_20;
HXDLIN( 440)				float a21 = this->self->_21;
HXDLIN( 440)				float a22 = this->self->_22;
HXDLIN( 440)				float a23 = this->self->_23;
HXDLIN( 440)				float a30 = this->self->_30;
HXDLIN( 440)				float a31 = this->self->_31;
HXDLIN( 440)				float a32 = this->self->_32;
HXDLIN( 440)				float a33 = this->self->_33;
HXDLIN( 440)				float b0 = m->self->_00;
HXDLIN( 440)				float b1 = m->self->_10;
HXDLIN( 440)				float b2 = m->self->_20;
HXDLIN( 440)				float b3 = m->self->_30;
HXDLIN( 440)				this->self->_00 = ((((a00 * b0) + (a01 * b1)) + (a02 * b2)) + (a03 * b3));
HXDLIN( 440)				this->self->_10 = ((((a10 * b0) + (a11 * b1)) + (a12 * b2)) + (a13 * b3));
HXDLIN( 440)				this->self->_20 = ((((a20 * b0) + (a21 * b1)) + (a22 * b2)) + (a23 * b3));
HXDLIN( 440)				this->self->_30 = ((((a30 * b0) + (a31 * b1)) + (a32 * b2)) + (a33 * b3));
HXDLIN( 440)				b0 = m->self->_01;
HXDLIN( 440)				b1 = m->self->_11;
HXDLIN( 440)				b2 = m->self->_21;
HXDLIN( 440)				b3 = m->self->_31;
HXDLIN( 440)				this->self->_01 = ((((a00 * b0) + (a01 * b1)) + (a02 * b2)) + (a03 * b3));
HXDLIN( 440)				this->self->_11 = ((((a10 * b0) + (a11 * b1)) + (a12 * b2)) + (a13 * b3));
HXDLIN( 440)				this->self->_21 = ((((a20 * b0) + (a21 * b1)) + (a22 * b2)) + (a23 * b3));
HXDLIN( 440)				this->self->_31 = ((((a30 * b0) + (a31 * b1)) + (a32 * b2)) + (a33 * b3));
HXDLIN( 440)				b0 = m->self->_02;
HXDLIN( 440)				b1 = m->self->_12;
HXDLIN( 440)				b2 = m->self->_22;
HXDLIN( 440)				b3 = m->self->_32;
HXDLIN( 440)				this->self->_02 = ((((a00 * b0) + (a01 * b1)) + (a02 * b2)) + (a03 * b3));
HXDLIN( 440)				this->self->_12 = ((((a10 * b0) + (a11 * b1)) + (a12 * b2)) + (a13 * b3));
HXDLIN( 440)				this->self->_22 = ((((a20 * b0) + (a21 * b1)) + (a22 * b2)) + (a23 * b3));
HXDLIN( 440)				this->self->_32 = ((((a30 * b0) + (a31 * b1)) + (a32 * b2)) + (a33 * b3));
HXDLIN( 440)				b0 = m->self->_03;
HXDLIN( 440)				b1 = m->self->_13;
HXDLIN( 440)				b2 = m->self->_23;
HXDLIN( 440)				b3 = m->self->_33;
HXDLIN( 440)				this->self->_03 = ((((a00 * b0) + (a01 * b1)) + (a02 * b2)) + (a03 * b3));
HXDLIN( 440)				this->self->_13 = ((((a10 * b0) + (a11 * b1)) + (a12 * b2)) + (a13 * b3));
HXDLIN( 440)				this->self->_23 = ((((a20 * b0) + (a21 * b1)) + (a22 * b2)) + (a23 * b3));
HXDLIN( 440)				this->self->_33 = ((((a30 * b0) + (a31 * b1)) + (a32 * b2)) + (a33 * b3));
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(Mat4_obj,applyQuat,(void))

 ::iron::math::Vec4 Mat4_obj::right(){
            	HX_GC_STACKFRAME(&_hx_pos_04012593dfa58962_443_right)
HXDLIN( 443)		return  ::iron::math::Vec4_obj::__alloc( HX_CTX ,this->self->_00,this->self->_01,this->self->_02,null());
            	}


HX_DEFINE_DYNAMIC_FUNC0(Mat4_obj,right,return )

 ::iron::math::Vec4 Mat4_obj::up(){
            	HX_GC_STACKFRAME(&_hx_pos_04012593dfa58962_444_up)
HXDLIN( 444)		return  ::iron::math::Vec4_obj::__alloc( HX_CTX ,this->self->_20,this->self->_21,this->self->_22,null());
            	}


HX_DEFINE_DYNAMIC_FUNC0(Mat4_obj,up,return )

 ::iron::math::Vec4 Mat4_obj::look(){
            	HX_GC_STACKFRAME(&_hx_pos_04012593dfa58962_445_look)
HXDLIN( 445)		return  ::iron::math::Vec4_obj::__alloc( HX_CTX ,this->self->_10,this->self->_11,this->self->_12,null());
            	}


HX_DEFINE_DYNAMIC_FUNC0(Mat4_obj,look,return )

float Mat4_obj::get__00(){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_447_get__00)
HXDLIN( 447)		return this->self->_00;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Mat4_obj,get__00,return )

float Mat4_obj::set__00(float f){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_447_set__00)
HXDLIN( 447)		return (this->self->_00 = f);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Mat4_obj,set__00,return )

float Mat4_obj::get__01(){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_448_get__01)
HXDLIN( 448)		return this->self->_01;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Mat4_obj,get__01,return )

float Mat4_obj::set__01(float f){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_448_set__01)
HXDLIN( 448)		return (this->self->_01 = f);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Mat4_obj,set__01,return )

float Mat4_obj::get__02(){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_449_get__02)
HXDLIN( 449)		return this->self->_02;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Mat4_obj,get__02,return )

float Mat4_obj::set__02(float f){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_449_set__02)
HXDLIN( 449)		return (this->self->_02 = f);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Mat4_obj,set__02,return )

float Mat4_obj::get__03(){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_450_get__03)
HXDLIN( 450)		return this->self->_03;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Mat4_obj,get__03,return )

float Mat4_obj::set__03(float f){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_450_set__03)
HXDLIN( 450)		return (this->self->_03 = f);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Mat4_obj,set__03,return )

float Mat4_obj::get__10(){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_451_get__10)
HXDLIN( 451)		return this->self->_10;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Mat4_obj,get__10,return )

float Mat4_obj::set__10(float f){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_451_set__10)
HXDLIN( 451)		return (this->self->_10 = f);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Mat4_obj,set__10,return )

float Mat4_obj::get__11(){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_452_get__11)
HXDLIN( 452)		return this->self->_11;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Mat4_obj,get__11,return )

float Mat4_obj::set__11(float f){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_452_set__11)
HXDLIN( 452)		return (this->self->_11 = f);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Mat4_obj,set__11,return )

float Mat4_obj::get__12(){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_453_get__12)
HXDLIN( 453)		return this->self->_12;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Mat4_obj,get__12,return )

float Mat4_obj::set__12(float f){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_453_set__12)
HXDLIN( 453)		return (this->self->_12 = f);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Mat4_obj,set__12,return )

float Mat4_obj::get__13(){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_454_get__13)
HXDLIN( 454)		return this->self->_13;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Mat4_obj,get__13,return )

float Mat4_obj::set__13(float f){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_454_set__13)
HXDLIN( 454)		return (this->self->_13 = f);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Mat4_obj,set__13,return )

float Mat4_obj::get__20(){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_455_get__20)
HXDLIN( 455)		return this->self->_20;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Mat4_obj,get__20,return )

float Mat4_obj::set__20(float f){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_455_set__20)
HXDLIN( 455)		return (this->self->_20 = f);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Mat4_obj,set__20,return )

float Mat4_obj::get__21(){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_456_get__21)
HXDLIN( 456)		return this->self->_21;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Mat4_obj,get__21,return )

float Mat4_obj::set__21(float f){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_456_set__21)
HXDLIN( 456)		return (this->self->_21 = f);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Mat4_obj,set__21,return )

float Mat4_obj::get__22(){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_457_get__22)
HXDLIN( 457)		return this->self->_22;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Mat4_obj,get__22,return )

float Mat4_obj::set__22(float f){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_457_set__22)
HXDLIN( 457)		return (this->self->_22 = f);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Mat4_obj,set__22,return )

float Mat4_obj::get__23(){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_458_get__23)
HXDLIN( 458)		return this->self->_23;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Mat4_obj,get__23,return )

float Mat4_obj::set__23(float f){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_458_set__23)
HXDLIN( 458)		return (this->self->_23 = f);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Mat4_obj,set__23,return )

float Mat4_obj::get__30(){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_459_get__30)
HXDLIN( 459)		return this->self->_30;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Mat4_obj,get__30,return )

float Mat4_obj::set__30(float f){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_459_set__30)
HXDLIN( 459)		return (this->self->_30 = f);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Mat4_obj,set__30,return )

float Mat4_obj::get__31(){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_460_get__31)
HXDLIN( 460)		return this->self->_31;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Mat4_obj,get__31,return )

float Mat4_obj::set__31(float f){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_460_set__31)
HXDLIN( 460)		return (this->self->_31 = f);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Mat4_obj,set__31,return )

float Mat4_obj::get__32(){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_461_get__32)
HXDLIN( 461)		return this->self->_32;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Mat4_obj,get__32,return )

float Mat4_obj::set__32(float f){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_461_set__32)
HXDLIN( 461)		return (this->self->_32 = f);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Mat4_obj,set__32,return )

float Mat4_obj::get__33(){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_462_get__33)
HXDLIN( 462)		return this->self->_33;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Mat4_obj,get__33,return )

float Mat4_obj::set__33(float f){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_462_set__33)
HXDLIN( 462)		return (this->self->_33 = f);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Mat4_obj,set__33,return )

::String Mat4_obj::toString(){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_465_toString)
HXDLIN( 465)		::String _hx_tmp = ((HX_("[[",a0,4f,00,00) + ::Std_obj::string(this->self->_00)) + HX_(", ",74,26,00,00));
HXDLIN( 465)		::String _hx_tmp1 = ((_hx_tmp + ::Std_obj::string(this->self->_10)) + HX_(", ",74,26,00,00));
HXDLIN( 465)		::String _hx_tmp2 = ((_hx_tmp1 + ::Std_obj::string(this->self->_20)) + HX_(", ",74,26,00,00));
HXDLIN( 465)		::String _hx_tmp3 = ((_hx_tmp2 + ::Std_obj::string(this->self->_30)) + HX_("], [",2a,57,9a,3d));
HXDLIN( 465)		::String _hx_tmp4 = ((_hx_tmp3 + ::Std_obj::string(this->self->_01)) + HX_(", ",74,26,00,00));
HXDLIN( 465)		::String _hx_tmp5 = ((_hx_tmp4 + ::Std_obj::string(this->self->_11)) + HX_(", ",74,26,00,00));
HXDLIN( 465)		::String _hx_tmp6 = ((_hx_tmp5 + ::Std_obj::string(this->self->_21)) + HX_(", ",74,26,00,00));
HXDLIN( 465)		::String _hx_tmp7 = ((_hx_tmp6 + ::Std_obj::string(this->self->_31)) + HX_("], [",2a,57,9a,3d));
HXDLIN( 465)		::String _hx_tmp8 = ((_hx_tmp7 + ::Std_obj::string(this->self->_02)) + HX_(", ",74,26,00,00));
HXDLIN( 465)		::String _hx_tmp9 = ((_hx_tmp8 + ::Std_obj::string(this->self->_12)) + HX_(", ",74,26,00,00));
HXDLIN( 465)		::String _hx_tmp10 = ((_hx_tmp9 + ::Std_obj::string(this->self->_22)) + HX_(", ",74,26,00,00));
HXDLIN( 465)		::String _hx_tmp11 = ((_hx_tmp10 + ::Std_obj::string(this->self->_32)) + HX_("], [",2a,57,9a,3d));
HXDLIN( 465)		::String _hx_tmp12 = ((_hx_tmp11 + ::Std_obj::string(this->self->_03)) + HX_(", ",74,26,00,00));
HXDLIN( 465)		::String _hx_tmp13 = ((_hx_tmp12 + ::Std_obj::string(this->self->_13)) + HX_(", ",74,26,00,00));
HXDLIN( 465)		::String _hx_tmp14 = ((_hx_tmp13 + ::Std_obj::string(this->self->_23)) + HX_(", ",74,26,00,00));
HXDLIN( 465)		return ((_hx_tmp14 + ::Std_obj::string(this->self->_33)) + HX_("]]",60,51,00,00));
            	}


HX_DEFINE_DYNAMIC_FUNC0(Mat4_obj,toString,return )

 ::iron::math::Vec4 Mat4_obj::helpVec;

 ::iron::math::Mat4 Mat4_obj::helpMat;

 ::iron::math::Mat4 Mat4_obj::fromFloat32Array( ::kha::arrays::Float32ArrayPrivate a,hx::Null< int >  __o_offset){
int offset = __o_offset.Default(0);
            	HX_GC_STACKFRAME(&_hx_pos_04012593dfa58962_85_fromFloat32Array)
HXLINE(  86)		float _hx_tmp = a->self.get(offset);
HXDLIN(  86)		 float32array a1 = a->self;
HXDLIN(  86)		float _hx_tmp1 = a1.get((1 + offset));
HXDLIN(  86)		 float32array a2 = a->self;
HXDLIN(  86)		float _hx_tmp2 = a2.get((2 + offset));
HXDLIN(  86)		 float32array a3 = a->self;
HXDLIN(  86)		float _hx_tmp3 = a3.get((3 + offset));
HXLINE(  87)		 float32array a4 = a->self;
HXDLIN(  87)		float _hx_tmp4 = a4.get((4 + offset));
HXDLIN(  87)		 float32array a5 = a->self;
HXDLIN(  87)		float _hx_tmp5 = a5.get((5 + offset));
HXDLIN(  87)		 float32array a6 = a->self;
HXDLIN(  87)		float _hx_tmp6 = a6.get((6 + offset));
HXDLIN(  87)		 float32array a7 = a->self;
HXDLIN(  87)		float _hx_tmp7 = a7.get((7 + offset));
HXLINE(  88)		 float32array a8 = a->self;
HXDLIN(  88)		float _hx_tmp8 = a8.get((8 + offset));
HXDLIN(  88)		 float32array a9 = a->self;
HXDLIN(  88)		float _hx_tmp9 = a9.get((9 + offset));
HXDLIN(  88)		 float32array a10 = a->self;
HXDLIN(  88)		float _hx_tmp10 = a10.get((10 + offset));
HXDLIN(  88)		 float32array a11 = a->self;
HXDLIN(  88)		float _hx_tmp11 = a11.get((11 + offset));
HXLINE(  89)		 float32array a12 = a->self;
HXDLIN(  89)		float _hx_tmp12 = a12.get((12 + offset));
HXDLIN(  89)		 float32array a13 = a->self;
HXDLIN(  89)		float _hx_tmp13 = a13.get((13 + offset));
HXDLIN(  89)		 float32array a14 = a->self;
HXDLIN(  89)		float _hx_tmp14 = a14.get((14 + offset));
HXDLIN(  89)		 float32array a15 = a->self;
HXLINE(  85)		return  ::iron::math::Mat4_obj::__alloc( HX_CTX ,_hx_tmp,_hx_tmp1,_hx_tmp2,_hx_tmp3,_hx_tmp4,_hx_tmp5,_hx_tmp6,_hx_tmp7,_hx_tmp8,_hx_tmp9,_hx_tmp10,_hx_tmp11,_hx_tmp12,_hx_tmp13,_hx_tmp14,a15.get((15 + offset)));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Mat4_obj,fromFloat32Array,return )

 ::iron::math::Mat4 Mat4_obj::identity(){
            	HX_GC_STACKFRAME(&_hx_pos_04012593dfa58962_94_identity)
HXDLIN(  94)		return  ::iron::math::Mat4_obj::__alloc( HX_CTX ,( (float)(((Float)1.0)) ),( (float)(((Float)0.0)) ),( (float)(((Float)0.0)) ),( (float)(((Float)0.0)) ),( (float)(((Float)0.0)) ),( (float)(((Float)1.0)) ),( (float)(((Float)0.0)) ),( (float)(((Float)0.0)) ),( (float)(((Float)0.0)) ),( (float)(((Float)0.0)) ),( (float)(((Float)1.0)) ),( (float)(((Float)0.0)) ),( (float)(((Float)0.0)) ),( (float)(((Float)0.0)) ),( (float)(((Float)0.0)) ),( (float)(((Float)1.0)) ));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Mat4_obj,identity,return )

 ::iron::math::Mat4 Mat4_obj::persp(float fovY,float aspect,float zn,float zf){
            	HX_GC_STACKFRAME(&_hx_pos_04012593dfa58962_369_persp)
HXLINE( 370)		Float uh = (((Float)1.0) / ::Math_obj::tan((( (Float)(fovY) ) / ( (Float)(2) ))));
HXLINE( 371)		Float uw = (uh / ( (Float)(aspect) ));
HXLINE( 372)		return  ::iron::math::Mat4_obj::__alloc( HX_CTX ,( (float)(uw) ),( (float)(0) ),( (float)(0) ),( (float)(0) ),( (float)(0) ),( (float)(uh) ),( (float)(0) ),( (float)(0) ),( (float)(0) ),( (float)(0) ),( (float)((( (Float)((zf + zn)) ) / ( (Float)((zn - zf)) ))) ),( (float)((( (Float)(((2 * zf) * zn)) ) / ( (Float)((zn - zf)) ))) ),( (float)(0) ),( (float)(0) ),( (float)(-1) ),( (float)(0) ));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(Mat4_obj,persp,return )

 ::iron::math::Mat4 Mat4_obj::ortho(float left,float right,float bottom,float top,float _hx_near,float _hx_far){
            	HX_GC_STACKFRAME(&_hx_pos_04012593dfa58962_380_ortho)
HXLINE( 381)		float rl = (right - left);
HXLINE( 382)		float tb = (top - bottom);
HXLINE( 383)		float fn = (_hx_far - _hx_near);
HXLINE( 384)		Float tx = (( (Float)(-((right + left))) ) / ( (Float)(rl) ));
HXLINE( 385)		Float ty = (( (Float)(-((top + bottom))) ) / ( (Float)(tb) ));
HXLINE( 386)		Float tz = (( (Float)(-((_hx_far + _hx_near))) ) / ( (Float)(fn) ));
HXLINE( 387)		return  ::iron::math::Mat4_obj::__alloc( HX_CTX ,( (float)((( (Float)(2) ) / ( (Float)(rl) ))) ),( (float)(0) ),( (float)(0) ),( (float)(tx) ),( (float)(0) ),( (float)((( (Float)(2) ) / ( (Float)(tb) ))) ),( (float)(0) ),( (float)(ty) ),( (float)(0) ),( (float)(0) ),( (float)((( (Float)(-2) ) / ( (Float)(fn) ))) ),( (float)(tz) ),( (float)(0) ),( (float)(0) ),( (float)(0) ),( (float)(1) ));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC6(Mat4_obj,ortho,return )


hx::ObjectPtr< Mat4_obj > Mat4_obj::__new(float _00,float _10,float _20,float _30,float _01,float _11,float _21,float _31,float _02,float _12,float _22,float _32,float _03,float _13,float _23,float _33) {
	hx::ObjectPtr< Mat4_obj > __this = new Mat4_obj();
	__this->__construct(_00,_10,_20,_30,_01,_11,_21,_31,_02,_12,_22,_32,_03,_13,_23,_33);
	return __this;
}

hx::ObjectPtr< Mat4_obj > Mat4_obj::__alloc(hx::Ctx *_hx_ctx,float _00,float _10,float _20,float _30,float _01,float _11,float _21,float _31,float _02,float _12,float _22,float _32,float _03,float _13,float _23,float _33) {
	Mat4_obj *__this = (Mat4_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(Mat4_obj), true, "iron.math.Mat4"));
	*(void **)__this = Mat4_obj::_hx_vtable;
	__this->__construct(_00,_10,_20,_30,_01,_11,_21,_31,_02,_12,_22,_32,_03,_13,_23,_33);
	return __this;
}

Mat4_obj::Mat4_obj()
{
}

void Mat4_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(Mat4);
	HX_MARK_MEMBER_NAME(self,"self");
	HX_MARK_END_CLASS();
}

void Mat4_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(self,"self");
}

hx::Val Mat4_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 2:
		if (HX_FIELD_EQ(inName,"up") ) { return hx::Val( up_dyn() ); }
		break;
	case 3:
		if (HX_FIELD_EQ(inName,"_00") ) { if (inCallProp == hx::paccAlways) return hx::Val( get__00() ); }
		if (HX_FIELD_EQ(inName,"_01") ) { if (inCallProp == hx::paccAlways) return hx::Val( get__01() ); }
		if (HX_FIELD_EQ(inName,"_02") ) { if (inCallProp == hx::paccAlways) return hx::Val( get__02() ); }
		if (HX_FIELD_EQ(inName,"_03") ) { if (inCallProp == hx::paccAlways) return hx::Val( get__03() ); }
		if (HX_FIELD_EQ(inName,"_10") ) { if (inCallProp == hx::paccAlways) return hx::Val( get__10() ); }
		if (HX_FIELD_EQ(inName,"_11") ) { if (inCallProp == hx::paccAlways) return hx::Val( get__11() ); }
		if (HX_FIELD_EQ(inName,"_12") ) { if (inCallProp == hx::paccAlways) return hx::Val( get__12() ); }
		if (HX_FIELD_EQ(inName,"_13") ) { if (inCallProp == hx::paccAlways) return hx::Val( get__13() ); }
		if (HX_FIELD_EQ(inName,"_20") ) { if (inCallProp == hx::paccAlways) return hx::Val( get__20() ); }
		if (HX_FIELD_EQ(inName,"_21") ) { if (inCallProp == hx::paccAlways) return hx::Val( get__21() ); }
		if (HX_FIELD_EQ(inName,"_22") ) { if (inCallProp == hx::paccAlways) return hx::Val( get__22() ); }
		if (HX_FIELD_EQ(inName,"_23") ) { if (inCallProp == hx::paccAlways) return hx::Val( get__23() ); }
		if (HX_FIELD_EQ(inName,"_30") ) { if (inCallProp == hx::paccAlways) return hx::Val( get__30() ); }
		if (HX_FIELD_EQ(inName,"_31") ) { if (inCallProp == hx::paccAlways) return hx::Val( get__31() ); }
		if (HX_FIELD_EQ(inName,"_32") ) { if (inCallProp == hx::paccAlways) return hx::Val( get__32() ); }
		if (HX_FIELD_EQ(inName,"_33") ) { if (inCallProp == hx::paccAlways) return hx::Val( get__33() ); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"self") ) { return hx::Val( self ); }
		if (HX_FIELD_EQ(inName,"mult") ) { return hx::Val( mult_dyn() ); }
		if (HX_FIELD_EQ(inName,"look") ) { return hx::Val( look_dyn() ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"scale") ) { return hx::Val( scale_dyn() ); }
		if (HX_FIELD_EQ(inName,"clone") ) { return hx::Val( clone_dyn() ); }
		if (HX_FIELD_EQ(inName,"right") ) { return hx::Val( right_dyn() ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"setLoc") ) { return hx::Val( setLoc_dyn() ); }
		if (HX_FIELD_EQ(inName,"setF32") ) { return hx::Val( setF32_dyn() ); }
		if (HX_FIELD_EQ(inName,"getLoc") ) { return hx::Val( getLoc_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"compose") ) { return hx::Val( compose_dyn() ); }
		if (HX_FIELD_EQ(inName,"multmat") ) { return hx::Val( multmat_dyn() ); }
		if (HX_FIELD_EQ(inName,"setFrom") ) { return hx::Val( setFrom_dyn() ); }
		if (HX_FIELD_EQ(inName,"get__00") ) { return hx::Val( get__00_dyn() ); }
		if (HX_FIELD_EQ(inName,"set__00") ) { return hx::Val( set__00_dyn() ); }
		if (HX_FIELD_EQ(inName,"get__01") ) { return hx::Val( get__01_dyn() ); }
		if (HX_FIELD_EQ(inName,"set__01") ) { return hx::Val( set__01_dyn() ); }
		if (HX_FIELD_EQ(inName,"get__02") ) { return hx::Val( get__02_dyn() ); }
		if (HX_FIELD_EQ(inName,"set__02") ) { return hx::Val( set__02_dyn() ); }
		if (HX_FIELD_EQ(inName,"get__03") ) { return hx::Val( get__03_dyn() ); }
		if (HX_FIELD_EQ(inName,"set__03") ) { return hx::Val( set__03_dyn() ); }
		if (HX_FIELD_EQ(inName,"get__10") ) { return hx::Val( get__10_dyn() ); }
		if (HX_FIELD_EQ(inName,"set__10") ) { return hx::Val( set__10_dyn() ); }
		if (HX_FIELD_EQ(inName,"get__11") ) { return hx::Val( get__11_dyn() ); }
		if (HX_FIELD_EQ(inName,"set__11") ) { return hx::Val( set__11_dyn() ); }
		if (HX_FIELD_EQ(inName,"get__12") ) { return hx::Val( get__12_dyn() ); }
		if (HX_FIELD_EQ(inName,"set__12") ) { return hx::Val( set__12_dyn() ); }
		if (HX_FIELD_EQ(inName,"get__13") ) { return hx::Val( get__13_dyn() ); }
		if (HX_FIELD_EQ(inName,"set__13") ) { return hx::Val( set__13_dyn() ); }
		if (HX_FIELD_EQ(inName,"get__20") ) { return hx::Val( get__20_dyn() ); }
		if (HX_FIELD_EQ(inName,"set__20") ) { return hx::Val( set__20_dyn() ); }
		if (HX_FIELD_EQ(inName,"get__21") ) { return hx::Val( get__21_dyn() ); }
		if (HX_FIELD_EQ(inName,"set__21") ) { return hx::Val( set__21_dyn() ); }
		if (HX_FIELD_EQ(inName,"get__22") ) { return hx::Val( get__22_dyn() ); }
		if (HX_FIELD_EQ(inName,"set__22") ) { return hx::Val( set__22_dyn() ); }
		if (HX_FIELD_EQ(inName,"get__23") ) { return hx::Val( get__23_dyn() ); }
		if (HX_FIELD_EQ(inName,"set__23") ) { return hx::Val( set__23_dyn() ); }
		if (HX_FIELD_EQ(inName,"get__30") ) { return hx::Val( get__30_dyn() ); }
		if (HX_FIELD_EQ(inName,"set__30") ) { return hx::Val( set__30_dyn() ); }
		if (HX_FIELD_EQ(inName,"get__31") ) { return hx::Val( get__31_dyn() ); }
		if (HX_FIELD_EQ(inName,"set__31") ) { return hx::Val( set__31_dyn() ); }
		if (HX_FIELD_EQ(inName,"get__32") ) { return hx::Val( get__32_dyn() ); }
		if (HX_FIELD_EQ(inName,"set__32") ) { return hx::Val( set__32_dyn() ); }
		if (HX_FIELD_EQ(inName,"get__33") ) { return hx::Val( get__33_dyn() ); }
		if (HX_FIELD_EQ(inName,"set__33") ) { return hx::Val( set__33_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"fromQuat") ) { return hx::Val( fromQuat_dyn() ); }
		if (HX_FIELD_EQ(inName,"multmats") ) { return hx::Val( multmats_dyn() ); }
		if (HX_FIELD_EQ(inName,"multmat2") ) { return hx::Val( multmat2_dyn() ); }
		if (HX_FIELD_EQ(inName,"getScale") ) { return hx::Val( getScale_dyn() ); }
		if (HX_FIELD_EQ(inName,"toString") ) { return hx::Val( toString_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"decompose") ) { return hx::Val( decompose_dyn() ); }
		if (HX_FIELD_EQ(inName,"translate") ) { return hx::Val( translate_dyn() ); }
		if (HX_FIELD_EQ(inName,"transpose") ) { return hx::Val( transpose_dyn() ); }
		if (HX_FIELD_EQ(inName,"setLookAt") ) { return hx::Val( setLookAt_dyn() ); }
		if (HX_FIELD_EQ(inName,"applyQuat") ) { return hx::Val( applyQuat_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"getInverse") ) { return hx::Val( getInverse_dyn() ); }
		if (HX_FIELD_EQ(inName,"toRotation") ) { return hx::Val( toRotation_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"setIdentity") ) { return hx::Val( setIdentity_dyn() ); }
		if (HX_FIELD_EQ(inName,"multmats3x4") ) { return hx::Val( multmats3x4_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"transpose3x3") ) { return hx::Val( transpose3x3_dyn() ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"initTranslate") ) { return hx::Val( initTranslate_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

bool Mat4_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"persp") ) { outValue = persp_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"ortho") ) { outValue = ortho_dyn(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"helpVec") ) { outValue = ( helpVec ); return true; }
		if (HX_FIELD_EQ(inName,"helpMat") ) { outValue = ( helpMat ); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"identity") ) { outValue = identity_dyn(); return true; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"fromFloat32Array") ) { outValue = fromFloat32Array_dyn(); return true; }
	}
	return false;
}

hx::Val Mat4_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"_00") ) { if (inCallProp == hx::paccAlways) return hx::Val( set__00(inValue.Cast< float >()) ); }
		if (HX_FIELD_EQ(inName,"_01") ) { if (inCallProp == hx::paccAlways) return hx::Val( set__01(inValue.Cast< float >()) ); }
		if (HX_FIELD_EQ(inName,"_02") ) { if (inCallProp == hx::paccAlways) return hx::Val( set__02(inValue.Cast< float >()) ); }
		if (HX_FIELD_EQ(inName,"_03") ) { if (inCallProp == hx::paccAlways) return hx::Val( set__03(inValue.Cast< float >()) ); }
		if (HX_FIELD_EQ(inName,"_10") ) { if (inCallProp == hx::paccAlways) return hx::Val( set__10(inValue.Cast< float >()) ); }
		if (HX_FIELD_EQ(inName,"_11") ) { if (inCallProp == hx::paccAlways) return hx::Val( set__11(inValue.Cast< float >()) ); }
		if (HX_FIELD_EQ(inName,"_12") ) { if (inCallProp == hx::paccAlways) return hx::Val( set__12(inValue.Cast< float >()) ); }
		if (HX_FIELD_EQ(inName,"_13") ) { if (inCallProp == hx::paccAlways) return hx::Val( set__13(inValue.Cast< float >()) ); }
		if (HX_FIELD_EQ(inName,"_20") ) { if (inCallProp == hx::paccAlways) return hx::Val( set__20(inValue.Cast< float >()) ); }
		if (HX_FIELD_EQ(inName,"_21") ) { if (inCallProp == hx::paccAlways) return hx::Val( set__21(inValue.Cast< float >()) ); }
		if (HX_FIELD_EQ(inName,"_22") ) { if (inCallProp == hx::paccAlways) return hx::Val( set__22(inValue.Cast< float >()) ); }
		if (HX_FIELD_EQ(inName,"_23") ) { if (inCallProp == hx::paccAlways) return hx::Val( set__23(inValue.Cast< float >()) ); }
		if (HX_FIELD_EQ(inName,"_30") ) { if (inCallProp == hx::paccAlways) return hx::Val( set__30(inValue.Cast< float >()) ); }
		if (HX_FIELD_EQ(inName,"_31") ) { if (inCallProp == hx::paccAlways) return hx::Val( set__31(inValue.Cast< float >()) ); }
		if (HX_FIELD_EQ(inName,"_32") ) { if (inCallProp == hx::paccAlways) return hx::Val( set__32(inValue.Cast< float >()) ); }
		if (HX_FIELD_EQ(inName,"_33") ) { if (inCallProp == hx::paccAlways) return hx::Val( set__33(inValue.Cast< float >()) ); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"self") ) { self=inValue.Cast<  ::kha::math::FastMatrix4 >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

bool Mat4_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"helpVec") ) { helpVec=ioValue.Cast<  ::iron::math::Vec4 >(); return true; }
		if (HX_FIELD_EQ(inName,"helpMat") ) { helpMat=ioValue.Cast<  ::iron::math::Mat4 >(); return true; }
	}
	return false;
}

void Mat4_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("self",8c,8b,50,4c));
	outFields->push(HX_("_00",1f,40,48,00));
	outFields->push(HX_("_01",20,40,48,00));
	outFields->push(HX_("_02",21,40,48,00));
	outFields->push(HX_("_03",22,40,48,00));
	outFields->push(HX_("_10",fe,40,48,00));
	outFields->push(HX_("_11",ff,40,48,00));
	outFields->push(HX_("_12",00,41,48,00));
	outFields->push(HX_("_13",01,41,48,00));
	outFields->push(HX_("_20",dd,41,48,00));
	outFields->push(HX_("_21",de,41,48,00));
	outFields->push(HX_("_22",df,41,48,00));
	outFields->push(HX_("_23",e0,41,48,00));
	outFields->push(HX_("_30",bc,42,48,00));
	outFields->push(HX_("_31",bd,42,48,00));
	outFields->push(HX_("_32",be,42,48,00));
	outFields->push(HX_("_33",bf,42,48,00));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo Mat4_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*::kha::math::FastMatrix4*/ ,(int)offsetof(Mat4_obj,self),HX_("self",8c,8b,50,4c)},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo Mat4_obj_sStaticStorageInfo[] = {
	{hx::fsObject /*::iron::math::Vec4*/ ,(void *) &Mat4_obj::helpVec,HX_("helpVec",13,d6,53,c0)},
	{hx::fsObject /*::iron::math::Mat4*/ ,(void *) &Mat4_obj::helpMat,HX_("helpMat",5f,fe,4c,c0)},
	{ hx::fsUnknown, 0, null()}
};
#endif

static ::String Mat4_obj_sMemberFields[] = {
	HX_("self",8c,8b,50,4c),
	HX_("compose",12,b9,73,83),
	HX_("decompose",b1,c3,a7,7a),
	HX_("setLoc",fe,e1,69,6f),
	HX_("fromQuat",61,07,d6,a8),
	HX_("setIdentity",00,0f,90,e9),
	HX_("initTranslate",1e,9a,7f,c4),
	HX_("translate",4e,d7,7f,49),
	HX_("scale",8a,ce,ce,78),
	HX_("multmats3x4",cc,f5,57,3d),
	HX_("multmats",c3,61,26,9d),
	HX_("multmat2",82,61,26,9d),
	HX_("multmat",b0,38,ab,f8),
	HX_("getInverse",ba,d1,52,8d),
	HX_("transpose",79,50,2f,4c),
	HX_("transpose3x3",d5,9c,64,6c),
	HX_("clone",5d,13,63,48),
	HX_("setF32",03,20,65,6f),
	HX_("setFrom",2c,e6,46,09),
	HX_("getLoc",8a,8d,21,a3),
	HX_("getScale",14,de,a5,d8),
	HX_("mult",f0,67,65,48),
	HX_("toRotation",d9,d1,a2,7a),
	HX_("setLookAt",74,ea,5c,c1),
	HX_("applyQuat",65,39,d9,34),
	HX_("right",dc,0b,64,e9),
	HX_("up",5b,66,00,00),
	HX_("look",5f,a6,b7,47),
	HX_("get__00",b6,08,bd,26),
	HX_("set__00",c2,99,be,19),
	HX_("get__01",b7,08,bd,26),
	HX_("set__01",c3,99,be,19),
	HX_("get__02",b8,08,bd,26),
	HX_("set__02",c4,99,be,19),
	HX_("get__03",b9,08,bd,26),
	HX_("set__03",c5,99,be,19),
	HX_("get__10",95,09,bd,26),
	HX_("set__10",a1,9a,be,19),
	HX_("get__11",96,09,bd,26),
	HX_("set__11",a2,9a,be,19),
	HX_("get__12",97,09,bd,26),
	HX_("set__12",a3,9a,be,19),
	HX_("get__13",98,09,bd,26),
	HX_("set__13",a4,9a,be,19),
	HX_("get__20",74,0a,bd,26),
	HX_("set__20",80,9b,be,19),
	HX_("get__21",75,0a,bd,26),
	HX_("set__21",81,9b,be,19),
	HX_("get__22",76,0a,bd,26),
	HX_("set__22",82,9b,be,19),
	HX_("get__23",77,0a,bd,26),
	HX_("set__23",83,9b,be,19),
	HX_("get__30",53,0b,bd,26),
	HX_("set__30",5f,9c,be,19),
	HX_("get__31",54,0b,bd,26),
	HX_("set__31",60,9c,be,19),
	HX_("get__32",55,0b,bd,26),
	HX_("set__32",61,9c,be,19),
	HX_("get__33",56,0b,bd,26),
	HX_("set__33",62,9c,be,19),
	HX_("toString",ac,d0,6e,38),
	::String(null()) };

static void Mat4_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Mat4_obj::helpVec,"helpVec");
	HX_MARK_MEMBER_NAME(Mat4_obj::helpMat,"helpMat");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Mat4_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Mat4_obj::helpVec,"helpVec");
	HX_VISIT_MEMBER_NAME(Mat4_obj::helpMat,"helpMat");
};

#endif

hx::Class Mat4_obj::__mClass;

static ::String Mat4_obj_sStaticFields[] = {
	HX_("helpVec",13,d6,53,c0),
	HX_("helpMat",5f,fe,4c,c0),
	HX_("fromFloat32Array",e8,5e,81,61),
	HX_("identity",3e,45,2f,b9),
	HX_("persp",ba,6a,fa,bf),
	HX_("ortho",38,17,2d,35),
	::String(null())
};

void Mat4_obj::__register()
{
	Mat4_obj _hx_dummy;
	Mat4_obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("iron.math.Mat4",74,a3,1f,f1);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Mat4_obj::__GetStatic;
	__mClass->mSetStaticField = &Mat4_obj::__SetStatic;
	__mClass->mMarkFunc = Mat4_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(Mat4_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(Mat4_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< Mat4_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Mat4_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Mat4_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Mat4_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void Mat4_obj::__boot()
{
{
            	HX_GC_STACKFRAME(&_hx_pos_04012593dfa58962_8_boot)
HXDLIN(   8)		helpVec =  ::iron::math::Vec4_obj::__alloc( HX_CTX ,null(),null(),null(),null());
            	}
{
            	HX_GC_STACKFRAME(&_hx_pos_04012593dfa58962_9_boot)
HXDLIN(   9)		helpMat =  ::iron::math::Mat4_obj::__alloc( HX_CTX ,( (float)(((Float)1.0)) ),( (float)(((Float)0.0)) ),( (float)(((Float)0.0)) ),( (float)(((Float)0.0)) ),( (float)(((Float)0.0)) ),( (float)(((Float)1.0)) ),( (float)(((Float)0.0)) ),( (float)(((Float)0.0)) ),( (float)(((Float)0.0)) ),( (float)(((Float)0.0)) ),( (float)(((Float)1.0)) ),( (float)(((Float)0.0)) ),( (float)(((Float)0.0)) ),( (float)(((Float)0.0)) ),( (float)(((Float)0.0)) ),( (float)(((Float)1.0)) ));
            	}
}

} // end namespace iron
} // end namespace math
