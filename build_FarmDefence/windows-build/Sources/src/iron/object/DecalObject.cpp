// Generated by Haxe 4.0.0-preview.4+6e012c1
#include <hxcpp.h>

#ifndef INCLUDED_iron_object_DecalObject
#include <hxinc/iron/object/DecalObject.h>
#endif
#ifndef INCLUDED_iron_object_Object
#include <hxinc/iron/object/Object.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_dce6ca39aed22fb3_9_new,"iron.object.DecalObject","new",0x1a291755,"iron.object.DecalObject.new","iron/object/DecalObject.hx",9,0xee11d3db)
namespace iron{
namespace object{

void DecalObject_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_dce6ca39aed22fb3_9_new)
HXDLIN(   9)		super::__construct();
            	}

Dynamic DecalObject_obj::__CreateEmpty() { return new DecalObject_obj; }

void *DecalObject_obj::_hx_vtable = 0;

Dynamic DecalObject_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< DecalObject_obj > _hx_result = new DecalObject_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool DecalObject_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x2a486766) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x2a486766;
	} else {
		return inClassId==(int)0x6b9505fd;
	}
}


hx::ObjectPtr< DecalObject_obj > DecalObject_obj::__new() {
	hx::ObjectPtr< DecalObject_obj > __this = new DecalObject_obj();
	__this->__construct();
	return __this;
}

hx::ObjectPtr< DecalObject_obj > DecalObject_obj::__alloc(hx::Ctx *_hx_ctx) {
	DecalObject_obj *__this = (DecalObject_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(DecalObject_obj), true, "iron.object.DecalObject"));
	*(void **)__this = DecalObject_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

DecalObject_obj::DecalObject_obj()
{
}

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo *DecalObject_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *DecalObject_obj_sStaticStorageInfo = 0;
#endif

hx::Class DecalObject_obj::__mClass;

void DecalObject_obj::__register()
{
	DecalObject_obj _hx_dummy;
	DecalObject_obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("iron.object.DecalObject",e3,c8,f3,ad);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< DecalObject_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = DecalObject_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = DecalObject_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace iron
} // end namespace object
