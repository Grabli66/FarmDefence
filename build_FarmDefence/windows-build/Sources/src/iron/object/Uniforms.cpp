// Generated by Haxe 4.0.0-preview.4+6e012c1
#include <hxcpp.h>

#ifndef INCLUDED_c5728fd05c542abe
#define INCLUDED_c5728fd05c542abe
#include "cpp_float32array.h"
#endif
#ifndef INCLUDED_Std
#include <hxinc/Std.h>
#endif
#ifndef INCLUDED_haxe_IMap
#include <hxinc/haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_ds_StringMap
#include <hxinc/haxe/ds/StringMap.h>
#endif
#ifndef INCLUDED_iron_RenderPath
#include <hxinc/iron/RenderPath.h>
#endif
#ifndef INCLUDED_iron_RenderTarget
#include <hxinc/iron/RenderTarget.h>
#endif
#ifndef INCLUDED_iron_RenderTargetRaw
#include <hxinc/iron/RenderTargetRaw.h>
#endif
#ifndef INCLUDED_iron_Scene
#include <hxinc/iron/Scene.h>
#endif
#ifndef INCLUDED_iron_data_CameraData
#include <hxinc/iron/data/CameraData.h>
#endif
#ifndef INCLUDED_iron_data_Data
#include <hxinc/iron/data/Data.h>
#endif
#ifndef INCLUDED_iron_data_LightData
#include <hxinc/iron/data/LightData.h>
#endif
#ifndef INCLUDED_iron_data_MaterialContext
#include <hxinc/iron/data/MaterialContext.h>
#endif
#ifndef INCLUDED_iron_data_MaterialData
#include <hxinc/iron/data/MaterialData.h>
#endif
#ifndef INCLUDED_iron_data_Probe
#include <hxinc/iron/data/Probe.h>
#endif
#ifndef INCLUDED_iron_data_ShaderContext
#include <hxinc/iron/data/ShaderContext.h>
#endif
#ifndef INCLUDED_iron_data_TBindConstant
#include <hxinc/iron/data/TBindConstant.h>
#endif
#ifndef INCLUDED_iron_data_TBindTexture
#include <hxinc/iron/data/TBindTexture.h>
#endif
#ifndef INCLUDED_iron_data_TCameraData
#include <hxinc/iron/data/TCameraData.h>
#endif
#ifndef INCLUDED_iron_data_TLightData
#include <hxinc/iron/data/TLightData.h>
#endif
#ifndef INCLUDED_iron_data_TMaterialContext
#include <hxinc/iron/data/TMaterialContext.h>
#endif
#ifndef INCLUDED_iron_data_TProbe
#include <hxinc/iron/data/TProbe.h>
#endif
#ifndef INCLUDED_iron_data_TShaderConstant
#include <hxinc/iron/data/TShaderConstant.h>
#endif
#ifndef INCLUDED_iron_data_TShaderContext
#include <hxinc/iron/data/TShaderContext.h>
#endif
#ifndef INCLUDED_iron_data_TTextureUnit
#include <hxinc/iron/data/TTextureUnit.h>
#endif
#ifndef INCLUDED_iron_data_TWorldData
#include <hxinc/iron/data/TWorldData.h>
#endif
#ifndef INCLUDED_iron_data_WorldData
#include <hxinc/iron/data/WorldData.h>
#endif
#ifndef INCLUDED_iron_math_Mat3
#include <hxinc/iron/math/Mat3.h>
#endif
#ifndef INCLUDED_iron_math_Mat4
#include <hxinc/iron/math/Mat4.h>
#endif
#ifndef INCLUDED_iron_math_Quat
#include <hxinc/iron/math/Quat.h>
#endif
#ifndef INCLUDED_iron_math_Vec4
#include <hxinc/iron/math/Vec4.h>
#endif
#ifndef INCLUDED_iron_object_Animation
#include <hxinc/iron/object/Animation.h>
#endif
#ifndef INCLUDED_iron_object_BoneAnimation
#include <hxinc/iron/object/BoneAnimation.h>
#endif
#ifndef INCLUDED_iron_object_CameraObject
#include <hxinc/iron/object/CameraObject.h>
#endif
#ifndef INCLUDED_iron_object_LightObject
#include <hxinc/iron/object/LightObject.h>
#endif
#ifndef INCLUDED_iron_object_MeshObject
#include <hxinc/iron/object/MeshObject.h>
#endif
#ifndef INCLUDED_iron_object_Object
#include <hxinc/iron/object/Object.h>
#endif
#ifndef INCLUDED_iron_object_ParticleSystem
#include <hxinc/iron/object/ParticleSystem.h>
#endif
#ifndef INCLUDED_iron_object_Tilesheet
#include <hxinc/iron/object/Tilesheet.h>
#endif
#ifndef INCLUDED_iron_object_Transform
#include <hxinc/iron/object/Transform.h>
#endif
#ifndef INCLUDED_iron_object_Uniforms
#include <hxinc/iron/object/Uniforms.h>
#endif
#ifndef INCLUDED_iron_system_Time
#include <hxinc/iron/system/Time.h>
#endif
#ifndef INCLUDED_kha_Canvas
#include <hxinc/kha/Canvas.h>
#endif
#ifndef INCLUDED_kha_Image
#include <hxinc/kha/Image.h>
#endif
#ifndef INCLUDED_kha_Resource
#include <hxinc/kha/Resource.h>
#endif
#ifndef INCLUDED_kha_Scheduler
#include <hxinc/kha/Scheduler.h>
#endif
#ifndef INCLUDED_kha_System
#include <hxinc/kha/System.h>
#endif
#ifndef INCLUDED_kha_arrays_Float32ArrayPrivate
#include <hxinc/kha/arrays/Float32ArrayPrivate.h>
#endif
#ifndef INCLUDED_kha_graphics4_ConstantLocation
#include <hxinc/kha/graphics4/ConstantLocation.h>
#endif
#ifndef INCLUDED_kha_graphics4_CubeMap
#include <hxinc/kha/graphics4/CubeMap.h>
#endif
#ifndef INCLUDED_kha_graphics4_Graphics
#include <hxinc/kha/graphics4/Graphics.h>
#endif
#ifndef INCLUDED_kha_graphics4_MipMapFilter
#include <hxinc/kha/graphics4/MipMapFilter.h>
#endif
#ifndef INCLUDED_kha_graphics4_TextureAddressing
#include <hxinc/kha/graphics4/TextureAddressing.h>
#endif
#ifndef INCLUDED_kha_graphics4_TextureFilter
#include <hxinc/kha/graphics4/TextureFilter.h>
#endif
#ifndef INCLUDED_kha_graphics4_TextureUnit
#include <hxinc/kha/graphics4/TextureUnit.h>
#endif
#ifndef INCLUDED_kha_math_FastMatrix3
#include <hxinc/kha/math/FastMatrix3.h>
#endif
#ifndef INCLUDED_kha_math_FastMatrix4
#include <hxinc/kha/math/FastMatrix4.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_ed3d8b453cef9f5d_52_setContextConstants,"iron.object.Uniforms","setContextConstants",0xbafaa43c,"iron.object.Uniforms.setContextConstants","iron/object/Uniforms.hx",52,0x2c37ec56)
HX_LOCAL_STACK_FRAME(_hx_pos_ed3d8b453cef9f5d_138_setObjectConstants,"iron.object.Uniforms","setObjectConstants",0x810215b4,"iron.object.Uniforms.setObjectConstants","iron/object/Uniforms.hx",138,0x2c37ec56)
HX_LOCAL_STACK_FRAME(_hx_pos_ed3d8b453cef9f5d_167_bindRenderTarget,"iron.object.Uniforms","bindRenderTarget",0x84ed568a,"iron.object.Uniforms.bindRenderTarget","iron/object/Uniforms.hx",167,0x2c37ec56)
HX_LOCAL_STACK_FRAME(_hx_pos_ed3d8b453cef9f5d_232_setContextConstant,"iron.object.Uniforms","setContextConstant",0x8a98a857,"iron.object.Uniforms.setContextConstant","iron/object/Uniforms.hx",232,0x2c37ec56)
HX_LOCAL_STACK_FRAME(_hx_pos_ed3d8b453cef9f5d_708_setObjectConstant,"iron.object.Uniforms","setObjectConstant",0x4fca0ddf,"iron.object.Uniforms.setObjectConstant","iron/object/Uniforms.hx",708,0x2c37ec56)
HX_LOCAL_STACK_FRAME(_hx_pos_ed3d8b453cef9f5d_996_setMaterialConstants,"iron.object.Uniforms","setMaterialConstants",0xc45f7bcc,"iron.object.Uniforms.setMaterialConstants","iron/object/Uniforms.hx",996,0x2c37ec56)
HX_LOCAL_STACK_FRAME(_hx_pos_ed3d8b453cef9f5d_1031_currentMat,"iron.object.Uniforms","currentMat",0xc0efb54d,"iron.object.Uniforms.currentMat","iron/object/Uniforms.hx",1031,0x2c37ec56)
HX_LOCAL_STACK_FRAME(_hx_pos_ed3d8b453cef9f5d_1037_setMaterialConstant,"iron.object.Uniforms","setMaterialConstant",0xf1f4f2c7,"iron.object.Uniforms.setMaterialConstant","iron/object/Uniforms.hx",1037,0x2c37ec56)
HX_LOCAL_STACK_FRAME(_hx_pos_ed3d8b453cef9f5d_24_boot,"iron.object.Uniforms","boot",0xa2f5b918,"iron.object.Uniforms.boot","iron/object/Uniforms.hx",24,0x2c37ec56)
HX_LOCAL_STACK_FRAME(_hx_pos_ed3d8b453cef9f5d_36_boot,"iron.object.Uniforms","boot",0xa2f5b918,"iron.object.Uniforms.boot","iron/object/Uniforms.hx",36,0x2c37ec56)
HX_LOCAL_STACK_FRAME(_hx_pos_ed3d8b453cef9f5d_37_boot,"iron.object.Uniforms","boot",0xa2f5b918,"iron.object.Uniforms.boot","iron/object/Uniforms.hx",37,0x2c37ec56)
HX_LOCAL_STACK_FRAME(_hx_pos_ed3d8b453cef9f5d_38_boot,"iron.object.Uniforms","boot",0xa2f5b918,"iron.object.Uniforms.boot","iron/object/Uniforms.hx",38,0x2c37ec56)
HX_LOCAL_STACK_FRAME(_hx_pos_ed3d8b453cef9f5d_39_boot,"iron.object.Uniforms","boot",0xa2f5b918,"iron.object.Uniforms.boot","iron/object/Uniforms.hx",39,0x2c37ec56)
HX_LOCAL_STACK_FRAME(_hx_pos_ed3d8b453cef9f5d_40_boot,"iron.object.Uniforms","boot",0xa2f5b918,"iron.object.Uniforms.boot","iron/object/Uniforms.hx",40,0x2c37ec56)
HX_LOCAL_STACK_FRAME(_hx_pos_ed3d8b453cef9f5d_41_boot,"iron.object.Uniforms","boot",0xa2f5b918,"iron.object.Uniforms.boot","iron/object/Uniforms.hx",41,0x2c37ec56)
HX_LOCAL_STACK_FRAME(_hx_pos_ed3d8b453cef9f5d_43_boot,"iron.object.Uniforms","boot",0xa2f5b918,"iron.object.Uniforms.boot","iron/object/Uniforms.hx",43,0x2c37ec56)
HX_LOCAL_STACK_FRAME(_hx_pos_ed3d8b453cef9f5d_44_boot,"iron.object.Uniforms","boot",0xa2f5b918,"iron.object.Uniforms.boot","iron/object/Uniforms.hx",44,0x2c37ec56)
HX_LOCAL_STACK_FRAME(_hx_pos_ed3d8b453cef9f5d_45_boot,"iron.object.Uniforms","boot",0xa2f5b918,"iron.object.Uniforms.boot","iron/object/Uniforms.hx",45,0x2c37ec56)
HX_LOCAL_STACK_FRAME(_hx_pos_ed3d8b453cef9f5d_46_boot,"iron.object.Uniforms","boot",0xa2f5b918,"iron.object.Uniforms.boot","iron/object/Uniforms.hx",46,0x2c37ec56)
HX_LOCAL_STACK_FRAME(_hx_pos_ed3d8b453cef9f5d_47_boot,"iron.object.Uniforms","boot",0xa2f5b918,"iron.object.Uniforms.boot","iron/object/Uniforms.hx",47,0x2c37ec56)
HX_LOCAL_STACK_FRAME(_hx_pos_ed3d8b453cef9f5d_48_boot,"iron.object.Uniforms","boot",0xa2f5b918,"iron.object.Uniforms.boot","iron/object/Uniforms.hx",48,0x2c37ec56)
HX_LOCAL_STACK_FRAME(_hx_pos_ed3d8b453cef9f5d_49_boot,"iron.object.Uniforms","boot",0xa2f5b918,"iron.object.Uniforms.boot","iron/object/Uniforms.hx",49,0x2c37ec56)
HX_LOCAL_STACK_FRAME(_hx_pos_ed3d8b453cef9f5d_50_boot,"iron.object.Uniforms","boot",0xa2f5b918,"iron.object.Uniforms.boot","iron/object/Uniforms.hx",50,0x2c37ec56)
namespace iron{
namespace object{

void Uniforms_obj::__construct() { }

Dynamic Uniforms_obj::__CreateEmpty() { return new Uniforms_obj; }

void *Uniforms_obj::_hx_vtable = 0;

Dynamic Uniforms_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Uniforms_obj > _hx_result = new Uniforms_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Uniforms_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x19e66d26;
}

 ::iron::math::Mat4 Uniforms_obj::biasMat;

 ::iron::math::Mat4 Uniforms_obj::helpMat;

 ::iron::math::Mat4 Uniforms_obj::helpMat2;

 ::iron::math::Mat3 Uniforms_obj::helpMat3;

 ::iron::math::Vec4 Uniforms_obj::helpVec;

 ::iron::math::Vec4 Uniforms_obj::helpVec2;

 ::iron::math::Quat Uniforms_obj::helpQuat;

::Array< ::Dynamic> Uniforms_obj::externalTextureLinks;

::Array< ::Dynamic> Uniforms_obj::externalMat4Links;

::Array< ::Dynamic> Uniforms_obj::externalVec4Links;

::Array< ::Dynamic> Uniforms_obj::externalVec3Links;

::Array< ::Dynamic> Uniforms_obj::externalVec2Links;

::Array< ::Dynamic> Uniforms_obj::externalFloatLinks;

::Array< ::Dynamic> Uniforms_obj::externalFloatsLinks;

::Array< ::Dynamic> Uniforms_obj::externalIntLinks;

void Uniforms_obj::setContextConstants(::Dynamic g, ::iron::data::ShaderContext context, ::iron::object::CameraObject camera, ::iron::object::LightObject light,::Array< ::String > bindParams){
            	HX_STACKFRAME(&_hx_pos_ed3d8b453cef9f5d_52_setContextConstants)
HXLINE(  53)		if (hx::IsNotNull( context->raw->constants )) {
HXLINE(  54)			int _g1 = 0;
HXDLIN(  54)			int _g = context->raw->constants->length;
HXDLIN(  54)			while((_g1 < _g)){
HXLINE(  54)				_g1 = (_g1 + 1);
HXDLIN(  54)				int i = (_g1 - 1);
HXLINE(  55)				 ::iron::data::TShaderConstant c = context->raw->constants->__get(i).StaticCast<  ::iron::data::TShaderConstant >();
HXLINE(  56)				::iron::object::Uniforms_obj::setContextConstant(g,camera,light,context->constants->__get(i),c);
            			}
            		}
HXLINE(  61)		if (hx::IsNotNull( bindParams )) {
HXLINE(  62)			int _g11 = 0;
HXDLIN(  62)			int _g2 = ::Std_obj::_hx_int((( (Float)(bindParams->length) ) / ( (Float)(2) )));
HXDLIN(  62)			while((_g11 < _g2)){
HXLINE(  62)				_g11 = (_g11 + 1);
HXDLIN(  62)				int i1 = (_g11 - 1);
HXLINE(  63)				int pos = (i1 * 2);
HXLINE(  64)				::String rtID = bindParams->__get(pos);
HXLINE(  65)				::String samplerID = bindParams->__get((pos + 1));
HXLINE(  66)				bool attachDepth = false;
HXLINE(  67)				::String _hx_char = rtID.charAt(0);
HXLINE(  68)				if ((_hx_char == HX_("_",5f,00,00,00))) {
HXLINE(  69)					attachDepth = true;
HXLINE(  70)					rtID = rtID.substr(1,null());
            				}
HXLINE(  72)				 ::iron::RenderTarget rt;
HXDLIN(  72)				if (attachDepth) {
HXLINE(  72)					rt = ( ( ::iron::RenderTarget)(::iron::RenderPath_obj::active->depthToRenderTarget->get(rtID)) );
            				}
            				else {
HXLINE(  72)					rt = ( ( ::iron::RenderTarget)(::iron::RenderPath_obj::active->renderTargets->get(rtID)) );
            				}
HXLINE(  73)				::iron::object::Uniforms_obj::bindRenderTarget(g,rt,context,samplerID,attachDepth);
            			}
            		}
HXLINE(  78)		if (hx::IsNotNull( context->raw->texture_units )) {
HXLINE(  79)			int _g12 = 0;
HXDLIN(  79)			int _g3 = context->raw->texture_units->length;
HXDLIN(  79)			while((_g12 < _g3)){
HXLINE(  79)				_g12 = (_g12 + 1);
HXDLIN(  79)				int j = (_g12 - 1);
HXLINE(  80)				::String tulink = context->raw->texture_units->__get(j).StaticCast<  ::iron::data::TTextureUnit >()->link;
HXLINE(  81)				if (hx::IsNull( tulink )) {
HXLINE(  81)					continue;
            				}
HXLINE(  83)				if ((tulink == HX_("_envmapRadiance",51,b4,3c,28))) {
HXLINE(  84)					 ::iron::data::WorldData w = ::iron::Scene_obj::active->world;
HXLINE(  85)					if (hx::IsNotNull( w )) {
HXLINE(  86)						::Dynamic context1 = context->textureUnits->__get(j);
HXDLIN(  86)						::kha::graphics4::Graphics_obj::setTexture(g,context1,w->getGlobalProbe()->radiance);
HXLINE(  87)						::kha::graphics4::Graphics_obj::setTextureParameters(g,context->textureUnits->__get(j),::kha::graphics4::TextureAddressing_obj::Repeat_dyn(),::kha::graphics4::TextureAddressing_obj::Repeat_dyn(),::kha::graphics4::TextureFilter_obj::LinearFilter_dyn(),::kha::graphics4::TextureFilter_obj::LinearFilter_dyn(),::kha::graphics4::MipMapFilter_obj::LinearMipFilter_dyn());
            					}
            				}
            				else {
HXLINE(  90)					if ((tulink == HX_("_envmap",6e,8a,e8,74))) {
HXLINE(  91)						 ::iron::data::WorldData w1 = ::iron::Scene_obj::active->world;
HXLINE(  92)						if (hx::IsNotNull( w1 )) {
HXLINE(  93)							::kha::graphics4::Graphics_obj::setTexture(g,context->textureUnits->__get(j),w1->envmap);
            						}
            					}
            					else {
HXLINE(  96)						if ((tulink == HX_("_envmapBrdf",e0,46,00,d7))) {
HXLINE(  97)							::Dynamic context2 = context->textureUnits->__get(j);
HXDLIN(  97)							::kha::graphics4::Graphics_obj::setTexture(g,context2,::iron::Scene_obj::active->embedded->get(HX_("brdf.png",8d,ff,2a,3f)));
            						}
            						else {
HXLINE(  99)							if ((tulink == HX_("_noise8",fd,28,f2,98))) {
HXLINE( 100)								::Dynamic context3 = context->textureUnits->__get(j);
HXDLIN( 100)								::kha::graphics4::Graphics_obj::setTexture(g,context3,::iron::Scene_obj::active->embedded->get(HX_("noise8.png",99,4b,ba,f9)));
HXLINE( 101)								::kha::graphics4::Graphics_obj::setTextureParameters(g,context->textureUnits->__get(j),::kha::graphics4::TextureAddressing_obj::Repeat_dyn(),::kha::graphics4::TextureAddressing_obj::Repeat_dyn(),::kha::graphics4::TextureFilter_obj::LinearFilter_dyn(),::kha::graphics4::TextureFilter_obj::LinearFilter_dyn(),::kha::graphics4::MipMapFilter_obj::NoMipFilter_dyn());
            							}
            							else {
HXLINE( 103)								if ((tulink == HX_("_noise64",d9,b2,f1,3a))) {
HXLINE( 104)									::Dynamic context4 = context->textureUnits->__get(j);
HXDLIN( 104)									::kha::graphics4::Graphics_obj::setTexture(g,context4,::iron::Scene_obj::active->embedded->get(HX_("noise64.png",93,12,5a,05)));
HXLINE( 105)									::kha::graphics4::Graphics_obj::setTextureParameters(g,context->textureUnits->__get(j),::kha::graphics4::TextureAddressing_obj::Repeat_dyn(),::kha::graphics4::TextureAddressing_obj::Repeat_dyn(),::kha::graphics4::TextureFilter_obj::LinearFilter_dyn(),::kha::graphics4::TextureFilter_obj::LinearFilter_dyn(),::kha::graphics4::MipMapFilter_obj::NoMipFilter_dyn());
            								}
            								else {
HXLINE( 107)									if ((tulink == HX_("_blueNoise64",df,d3,5f,a2))) {
HXLINE( 108)										::Dynamic context5 = context->textureUnits->__get(j);
HXDLIN( 108)										::kha::graphics4::Graphics_obj::setTexture(g,context5,::iron::Scene_obj::active->embedded->get(HX_("blue_noise64.png",2e,82,23,04)));
HXLINE( 109)										::kha::graphics4::Graphics_obj::setTextureParameters(g,context->textureUnits->__get(j),::kha::graphics4::TextureAddressing_obj::Repeat_dyn(),::kha::graphics4::TextureAddressing_obj::Repeat_dyn(),::kha::graphics4::TextureFilter_obj::LinearFilter_dyn(),::kha::graphics4::TextureFilter_obj::LinearFilter_dyn(),::kha::graphics4::MipMapFilter_obj::NoMipFilter_dyn());
            									}
            									else {
HXLINE( 111)										if ((tulink == HX_("_noise256",18,c3,87,58))) {
HXLINE( 112)											::Dynamic context6 = context->textureUnits->__get(j);
HXDLIN( 112)											::kha::graphics4::Graphics_obj::setTexture(g,context6,::iron::Scene_obj::active->embedded->get(HX_("noise256.png",74,c9,11,d9)));
HXLINE( 113)											::kha::graphics4::Graphics_obj::setTextureParameters(g,context->textureUnits->__get(j),::kha::graphics4::TextureAddressing_obj::Repeat_dyn(),::kha::graphics4::TextureAddressing_obj::Repeat_dyn(),::kha::graphics4::TextureFilter_obj::LinearFilter_dyn(),::kha::graphics4::TextureFilter_obj::LinearFilter_dyn(),::kha::graphics4::MipMapFilter_obj::NoMipFilter_dyn());
            										}
            										else {
HXLINE( 115)											if ((tulink == HX_("_lightColorTexture",6f,2c,dd,f7))) {
HXLINE( 116)												if (hx::IsNotNull( light )) {
HXLINE( 117)													::kha::graphics4::Graphics_obj::setTexture(g,context->textureUnits->__get(j),light->data->colorTexture);
HXLINE( 118)													::kha::graphics4::Graphics_obj::setTextureParameters(g,context->textureUnits->__get(j),::kha::graphics4::TextureAddressing_obj::Repeat_dyn(),::kha::graphics4::TextureAddressing_obj::Repeat_dyn(),::kha::graphics4::TextureFilter_obj::LinearFilter_dyn(),::kha::graphics4::TextureFilter_obj::LinearFilter_dyn(),::kha::graphics4::MipMapFilter_obj::NoMipFilter_dyn());
            												}
            											}
            											else {
HXLINE( 121)												if ((tulink == HX_("_iesTexture",a3,99,2e,08))) {
HXLINE( 122)													::Dynamic context7 = context->textureUnits->__get(j);
HXDLIN( 122)													::kha::graphics4::Graphics_obj::setTexture(g,context7,::iron::Scene_obj::active->embedded->get(HX_("iestexture.png",df,f3,69,d1)));
HXLINE( 123)													::kha::graphics4::Graphics_obj::setTextureParameters(g,context->textureUnits->__get(j),::kha::graphics4::TextureAddressing_obj::Repeat_dyn(),::kha::graphics4::TextureAddressing_obj::Repeat_dyn(),::kha::graphics4::TextureFilter_obj::LinearFilter_dyn(),::kha::graphics4::TextureFilter_obj::LinearFilter_dyn(),::kha::graphics4::MipMapFilter_obj::NoMipFilter_dyn());
            												}
            												else {
HXLINE( 125)													bool _hx_tmp = (tulink == HX_("_sdfTexture",c5,13,96,d0));
            												}
            											}
            										}
            									}
            								}
            							}
            						}
            					}
            				}
            			}
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC5(Uniforms_obj,setContextConstants,(void))

void Uniforms_obj::setObjectConstants(::Dynamic g, ::iron::data::ShaderContext context, ::iron::object::Object object, ::iron::object::CameraObject camera, ::iron::object::LightObject light){
            	HX_STACKFRAME(&_hx_pos_ed3d8b453cef9f5d_138_setObjectConstants)
HXLINE( 139)		if (hx::IsNotNull( context->raw->constants )) {
HXLINE( 140)			int _g1 = 0;
HXDLIN( 140)			int _g = context->raw->constants->length;
HXDLIN( 140)			while((_g1 < _g)){
HXLINE( 140)				_g1 = (_g1 + 1);
HXDLIN( 140)				int i = (_g1 - 1);
HXLINE( 141)				 ::iron::data::TShaderConstant c = context->raw->constants->__get(i).StaticCast<  ::iron::data::TShaderConstant >();
HXLINE( 142)				::iron::object::Uniforms_obj::setObjectConstant(g,object,camera,light,context->constants->__get(i),c);
            			}
            		}
HXLINE( 148)		if (hx::IsNotNull( ::iron::object::Uniforms_obj::externalTextureLinks )) {
HXLINE( 149)			if (hx::IsNotNull( context->raw->texture_units )) {
HXLINE( 150)				int _g11 = 0;
HXDLIN( 150)				int _g2 = context->raw->texture_units->length;
HXDLIN( 150)				while((_g11 < _g2)){
HXLINE( 150)					_g11 = (_g11 + 1);
HXDLIN( 150)					int j = (_g11 - 1);
HXLINE( 151)					::String tulink = context->raw->texture_units->__get(j).StaticCast<  ::iron::data::TTextureUnit >()->link;
HXLINE( 152)					if (hx::IsNull( tulink )) {
HXLINE( 152)						continue;
            					}
HXLINE( 153)					{
HXLINE( 153)						int _g21 = 0;
HXDLIN( 153)						::Array< ::Dynamic> _g3 = ::iron::object::Uniforms_obj::externalTextureLinks;
HXDLIN( 153)						while((_g21 < _g3->length)){
HXLINE( 153)							 ::Dynamic f = _g3->__get(_g21);
HXDLIN( 153)							_g21 = (_g21 + 1);
HXLINE( 154)							 ::kha::Image image = ( ( ::kha::Image)(f(object,::iron::object::Uniforms_obj::currentMat(object),tulink)) );
HXLINE( 155)							if (hx::IsNotNull( image )) {
HXLINE( 156)								::kha::graphics4::Graphics_obj::setTexture(g,context->textureUnits->__get(j),image);
HXLINE( 158)								goto _hx_goto_6;
            							}
            						}
            						_hx_goto_6:;
            					}
            				}
            			}
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC5(Uniforms_obj,setObjectConstants,(void))

void Uniforms_obj::bindRenderTarget(::Dynamic g, ::iron::RenderTarget rt, ::iron::data::ShaderContext context,::String samplerID,bool attachDepth){
            	HX_STACKFRAME(&_hx_pos_ed3d8b453cef9f5d_167_bindRenderTarget)
HXDLIN( 167)		if (hx::IsNotNull( rt )) {
HXLINE( 168)			::Array< ::Dynamic> tus = context->raw->texture_units;
HXLINE( 170)			{
HXLINE( 170)				int _g1 = 0;
HXDLIN( 170)				int _g = tus->length;
HXDLIN( 170)				while((_g1 < _g)){
HXLINE( 170)					_g1 = (_g1 + 1);
HXDLIN( 170)					int j = (_g1 - 1);
HXLINE( 171)					if ((samplerID == tus->__get(j).StaticCast<  ::iron::data::TTextureUnit >()->name)) {
HXLINE( 172)						bool isImage;
HXDLIN( 172)						if (hx::IsNotNull( tus->__get(j).StaticCast<  ::iron::data::TTextureUnit >()->is_image )) {
HXLINE( 172)							isImage = ( (bool)(tus->__get(j).StaticCast<  ::iron::data::TTextureUnit >()->is_image) );
            						}
            						else {
HXLINE( 172)							isImage = false;
            						}
HXLINE( 174)						if (hx::IsGreater( rt->raw->depth,1 )) {
HXLINE( 175)							::kha::graphics4::Graphics_obj::setTexture3DParameters(g,context->textureUnits->__get(j),::kha::graphics4::TextureAddressing_obj::Clamp_dyn(),::kha::graphics4::TextureAddressing_obj::Clamp_dyn(),::kha::graphics4::TextureAddressing_obj::Clamp_dyn(),::kha::graphics4::TextureFilter_obj::LinearFilter_dyn(),::kha::graphics4::TextureFilter_obj::PointFilter_dyn(),::kha::graphics4::MipMapFilter_obj::LinearMipFilter_dyn());
HXLINE( 176)							context->paramsSet[j] = true;
            						}
HXLINE( 179)						if (isImage) {
HXLINE( 180)							::kha::graphics4::Graphics_obj::setImageTexture(g,context->textureUnits->__get(j),rt->image);
HXLINE( 184)							::kha::graphics4::Graphics_obj::setTexture3DParameters(g,context->textureUnits->__get(j),::kha::graphics4::TextureAddressing_obj::Clamp_dyn(),::kha::graphics4::TextureAddressing_obj::Clamp_dyn(),::kha::graphics4::TextureAddressing_obj::Clamp_dyn(),::kha::graphics4::TextureFilter_obj::LinearFilter_dyn(),::kha::graphics4::TextureFilter_obj::PointFilter_dyn(),::kha::graphics4::MipMapFilter_obj::LinearMipFilter_dyn());
HXLINE( 185)							context->paramsSet[j] = true;
            						}
            						else {
HXLINE( 189)							if (rt->isCubeMap) {
HXLINE( 190)								if (attachDepth) {
HXLINE( 190)									::kha::graphics4::Graphics_obj::setCubeMapDepth(g,context->textureUnits->__get(j),rt->cubeMap);
            								}
            								else {
HXLINE( 191)									::kha::graphics4::Graphics_obj::setCubeMap(g,context->textureUnits->__get(j),rt->cubeMap);
            								}
            							}
            							else {
HXLINE( 194)								if (attachDepth) {
HXLINE( 194)									::kha::graphics4::Graphics_obj::setTextureDepth(g,context->textureUnits->__get(j),rt->image);
            								}
            								else {
HXLINE( 195)									::kha::graphics4::Graphics_obj::setTexture(g,context->textureUnits->__get(j),rt->image);
            								}
            							}
            						}
HXLINE( 199)						bool _hx_tmp;
HXDLIN( 199)						bool _hx_tmp1;
HXDLIN( 199)						bool _hx_tmp2;
HXDLIN( 199)						if (!(context->paramsSet->__get(j))) {
HXLINE( 199)							_hx_tmp2 = hx::IsNotNull( rt->raw->mipmaps );
            						}
            						else {
HXLINE( 199)							_hx_tmp2 = false;
            						}
HXDLIN( 199)						if (_hx_tmp2) {
HXLINE( 199)							_hx_tmp1 = hx::IsEq( rt->raw->mipmaps,true );
            						}
            						else {
HXLINE( 199)							_hx_tmp1 = false;
            						}
HXDLIN( 199)						if (_hx_tmp1) {
HXLINE( 199)							_hx_tmp = !(isImage);
            						}
            						else {
HXLINE( 199)							_hx_tmp = false;
            						}
HXDLIN( 199)						if (_hx_tmp) {
HXLINE( 200)							::kha::graphics4::Graphics_obj::setTextureParameters(g,context->textureUnits->__get(j),::kha::graphics4::TextureAddressing_obj::Clamp_dyn(),::kha::graphics4::TextureAddressing_obj::Clamp_dyn(),::kha::graphics4::TextureFilter_obj::LinearFilter_dyn(),::kha::graphics4::TextureFilter_obj::LinearFilter_dyn(),::kha::graphics4::MipMapFilter_obj::LinearMipFilter_dyn());
HXLINE( 201)							context->paramsSet[j] = true;
            						}
HXLINE( 217)						if (!(context->paramsSet->__get(j))) {
HXLINE( 222)							::kha::graphics4::Graphics_obj::setTextureParameters(g,context->textureUnits->__get(j),::kha::graphics4::TextureAddressing_obj::Clamp_dyn(),::kha::graphics4::TextureAddressing_obj::Clamp_dyn(),::kha::graphics4::TextureFilter_obj::LinearFilter_dyn(),::kha::graphics4::TextureFilter_obj::LinearFilter_dyn(),::kha::graphics4::MipMapFilter_obj::NoMipFilter_dyn());
HXLINE( 224)							context->paramsSet[j] = true;
            						}
            					}
            				}
            			}
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC5(Uniforms_obj,bindRenderTarget,(void))

bool Uniforms_obj::setContextConstant(::Dynamic g, ::iron::object::CameraObject camera, ::iron::object::LightObject light,::Dynamic location, ::iron::data::TShaderConstant c){
            	HX_GC_STACKFRAME(&_hx_pos_ed3d8b453cef9f5d_232_setContextConstant)
HXLINE( 233)		if (hx::IsNull( c->link )) {
HXLINE( 233)			return true;
            		}
HXLINE( 235)		if ((c->type == HX_("mat4",94,41,56,48))) {
HXLINE( 236)			 ::iron::math::Mat4 m = null();
HXLINE( 237)			if ((c->link == HX_("_viewMatrix",a5,03,9f,cf))) {
HXLINE( 241)				m = camera->V;
            			}
            			else {
HXLINE( 244)				if ((c->link == HX_("_transposeInverseViewMatrix",bc,94,df,16))) {
HXLINE( 245)					{
HXLINE( 245)						 ::iron::math::Mat4 _this = ::iron::object::Uniforms_obj::helpMat;
HXDLIN( 245)						 ::iron::math::Mat4 m1 = camera->V;
HXDLIN( 245)						_this->self->_00 = m1->self->_00;
HXDLIN( 245)						_this->self->_01 = m1->self->_01;
HXDLIN( 245)						_this->self->_02 = m1->self->_02;
HXDLIN( 245)						_this->self->_03 = m1->self->_03;
HXDLIN( 245)						_this->self->_10 = m1->self->_10;
HXDLIN( 245)						_this->self->_11 = m1->self->_11;
HXDLIN( 245)						_this->self->_12 = m1->self->_12;
HXDLIN( 245)						_this->self->_13 = m1->self->_13;
HXDLIN( 245)						_this->self->_20 = m1->self->_20;
HXDLIN( 245)						_this->self->_21 = m1->self->_21;
HXDLIN( 245)						_this->self->_22 = m1->self->_22;
HXDLIN( 245)						_this->self->_23 = m1->self->_23;
HXDLIN( 245)						_this->self->_30 = m1->self->_30;
HXDLIN( 245)						_this->self->_31 = m1->self->_31;
HXDLIN( 245)						_this->self->_32 = m1->self->_32;
HXDLIN( 245)						_this->self->_33 = m1->self->_33;
            					}
HXLINE( 246)					{
HXLINE( 246)						 ::iron::math::Mat4 _this1 = ::iron::object::Uniforms_obj::helpMat;
HXDLIN( 246)						 ::iron::math::Mat4 m2 = ::iron::object::Uniforms_obj::helpMat;
HXDLIN( 246)						float a00 = m2->self->_00;
HXDLIN( 246)						float a01 = m2->self->_01;
HXDLIN( 246)						float a02 = m2->self->_02;
HXDLIN( 246)						float a03 = m2->self->_03;
HXDLIN( 246)						float a10 = m2->self->_10;
HXDLIN( 246)						float a11 = m2->self->_11;
HXDLIN( 246)						float a12 = m2->self->_12;
HXDLIN( 246)						float a13 = m2->self->_13;
HXDLIN( 246)						float a20 = m2->self->_20;
HXDLIN( 246)						float a21 = m2->self->_21;
HXDLIN( 246)						float a22 = m2->self->_22;
HXDLIN( 246)						float a23 = m2->self->_23;
HXDLIN( 246)						float a30 = m2->self->_30;
HXDLIN( 246)						float a31 = m2->self->_31;
HXDLIN( 246)						float a32 = m2->self->_32;
HXDLIN( 246)						float a33 = m2->self->_33;
HXDLIN( 246)						float b00 = ((a00 * a11) - (a01 * a10));
HXDLIN( 246)						float b01 = ((a00 * a12) - (a02 * a10));
HXDLIN( 246)						float b02 = ((a00 * a13) - (a03 * a10));
HXDLIN( 246)						float b03 = ((a01 * a12) - (a02 * a11));
HXDLIN( 246)						float b04 = ((a01 * a13) - (a03 * a11));
HXDLIN( 246)						float b05 = ((a02 * a13) - (a03 * a12));
HXDLIN( 246)						float b06 = ((a20 * a31) - (a21 * a30));
HXDLIN( 246)						float b07 = ((a20 * a32) - (a22 * a30));
HXDLIN( 246)						float b08 = ((a20 * a33) - (a23 * a30));
HXDLIN( 246)						float b09 = ((a21 * a32) - (a22 * a31));
HXDLIN( 246)						float b10 = ((a21 * a33) - (a23 * a31));
HXDLIN( 246)						float b11 = ((a22 * a33) - (a23 * a32));
HXDLIN( 246)						float det = ((((((b00 * b11) - (b01 * b10)) + (b02 * b09)) + (b03 * b08)) - (b04 * b07)) + (b05 * b06));
HXDLIN( 246)						if ((det == ((Float)0.0))) {
HXLINE( 246)							_this1->self->_00 = ( (float)(((Float)1.0)) );
HXDLIN( 246)							_this1->self->_01 = ( (float)(((Float)0.0)) );
HXDLIN( 246)							_this1->self->_02 = ( (float)(((Float)0.0)) );
HXDLIN( 246)							_this1->self->_03 = ( (float)(((Float)0.0)) );
HXDLIN( 246)							_this1->self->_10 = ( (float)(((Float)0.0)) );
HXDLIN( 246)							_this1->self->_11 = ( (float)(((Float)1.0)) );
HXDLIN( 246)							_this1->self->_12 = ( (float)(((Float)0.0)) );
HXDLIN( 246)							_this1->self->_13 = ( (float)(((Float)0.0)) );
HXDLIN( 246)							_this1->self->_20 = ( (float)(((Float)0.0)) );
HXDLIN( 246)							_this1->self->_21 = ( (float)(((Float)0.0)) );
HXDLIN( 246)							_this1->self->_22 = ( (float)(((Float)1.0)) );
HXDLIN( 246)							_this1->self->_23 = ( (float)(((Float)0.0)) );
HXDLIN( 246)							_this1->self->_30 = ( (float)(((Float)0.0)) );
HXDLIN( 246)							_this1->self->_31 = ( (float)(((Float)0.0)) );
HXDLIN( 246)							_this1->self->_32 = ( (float)(((Float)0.0)) );
HXDLIN( 246)							_this1->self->_33 = ( (float)(((Float)1.0)) );
            						}
            						else {
HXLINE( 246)							det = ( (float)((((Float)1.0) / ( (Float)(det) ))) );
HXDLIN( 246)							_this1->self->_00 = ((((a11 * b11) - (a12 * b10)) + (a13 * b09)) * det);
HXDLIN( 246)							_this1->self->_01 = ((((a02 * b10) - (a01 * b11)) - (a03 * b09)) * det);
HXDLIN( 246)							_this1->self->_02 = ((((a31 * b05) - (a32 * b04)) + (a33 * b03)) * det);
HXDLIN( 246)							_this1->self->_03 = ((((a22 * b04) - (a21 * b05)) - (a23 * b03)) * det);
HXDLIN( 246)							_this1->self->_10 = ((((a12 * b08) - (a10 * b11)) - (a13 * b07)) * det);
HXDLIN( 246)							_this1->self->_11 = ((((a00 * b11) - (a02 * b08)) + (a03 * b07)) * det);
HXDLIN( 246)							_this1->self->_12 = ((((a32 * b02) - (a30 * b05)) - (a33 * b01)) * det);
HXDLIN( 246)							_this1->self->_13 = ((((a20 * b05) - (a22 * b02)) + (a23 * b01)) * det);
HXDLIN( 246)							_this1->self->_20 = ((((a10 * b10) - (a11 * b08)) + (a13 * b06)) * det);
HXDLIN( 246)							_this1->self->_21 = ((((a01 * b08) - (a00 * b10)) - (a03 * b06)) * det);
HXDLIN( 246)							_this1->self->_22 = ((((a30 * b04) - (a31 * b02)) + (a33 * b00)) * det);
HXDLIN( 246)							_this1->self->_23 = ((((a21 * b02) - (a20 * b04)) - (a23 * b00)) * det);
HXDLIN( 246)							_this1->self->_30 = ((((a11 * b07) - (a10 * b09)) - (a12 * b06)) * det);
HXDLIN( 246)							_this1->self->_31 = ((((a00 * b09) - (a01 * b07)) + (a02 * b06)) * det);
HXDLIN( 246)							_this1->self->_32 = ((((a31 * b01) - (a30 * b03)) - (a32 * b00)) * det);
HXDLIN( 246)							_this1->self->_33 = ((((a20 * b03) - (a21 * b01)) + (a22 * b00)) * det);
            						}
            					}
HXLINE( 247)					{
HXLINE( 247)						 ::iron::math::Mat4 _this2 = ::iron::object::Uniforms_obj::helpMat;
HXDLIN( 247)						float f = _this2->self->_01;
HXDLIN( 247)						_this2->self->_01 = _this2->self->_10;
HXDLIN( 247)						_this2->self->_10 = f;
HXDLIN( 247)						f = _this2->self->_02;
HXDLIN( 247)						_this2->self->_02 = _this2->self->_20;
HXDLIN( 247)						_this2->self->_20 = f;
HXDLIN( 247)						f = _this2->self->_03;
HXDLIN( 247)						_this2->self->_03 = _this2->self->_30;
HXDLIN( 247)						_this2->self->_30 = f;
HXDLIN( 247)						f = _this2->self->_12;
HXDLIN( 247)						_this2->self->_12 = _this2->self->_21;
HXDLIN( 247)						_this2->self->_21 = f;
HXDLIN( 247)						f = _this2->self->_13;
HXDLIN( 247)						_this2->self->_13 = _this2->self->_31;
HXDLIN( 247)						_this2->self->_31 = f;
HXDLIN( 247)						f = _this2->self->_23;
HXDLIN( 247)						_this2->self->_23 = _this2->self->_32;
HXDLIN( 247)						_this2->self->_32 = f;
            					}
HXLINE( 248)					m = ::iron::object::Uniforms_obj::helpMat;
            				}
            				else {
HXLINE( 250)					if ((c->link == HX_("_inverseViewMatrix",17,a7,62,fe))) {
HXLINE( 254)						{
HXLINE( 254)							 ::iron::math::Mat4 _this3 = ::iron::object::Uniforms_obj::helpMat;
HXDLIN( 254)							 ::iron::math::Mat4 m3 = camera->V;
HXDLIN( 254)							float a001 = m3->self->_00;
HXDLIN( 254)							float a011 = m3->self->_01;
HXDLIN( 254)							float a021 = m3->self->_02;
HXDLIN( 254)							float a031 = m3->self->_03;
HXDLIN( 254)							float a101 = m3->self->_10;
HXDLIN( 254)							float a111 = m3->self->_11;
HXDLIN( 254)							float a121 = m3->self->_12;
HXDLIN( 254)							float a131 = m3->self->_13;
HXDLIN( 254)							float a201 = m3->self->_20;
HXDLIN( 254)							float a211 = m3->self->_21;
HXDLIN( 254)							float a221 = m3->self->_22;
HXDLIN( 254)							float a231 = m3->self->_23;
HXDLIN( 254)							float a301 = m3->self->_30;
HXDLIN( 254)							float a311 = m3->self->_31;
HXDLIN( 254)							float a321 = m3->self->_32;
HXDLIN( 254)							float a331 = m3->self->_33;
HXDLIN( 254)							float b001 = ((a001 * a111) - (a011 * a101));
HXDLIN( 254)							float b011 = ((a001 * a121) - (a021 * a101));
HXDLIN( 254)							float b021 = ((a001 * a131) - (a031 * a101));
HXDLIN( 254)							float b031 = ((a011 * a121) - (a021 * a111));
HXDLIN( 254)							float b041 = ((a011 * a131) - (a031 * a111));
HXDLIN( 254)							float b051 = ((a021 * a131) - (a031 * a121));
HXDLIN( 254)							float b061 = ((a201 * a311) - (a211 * a301));
HXDLIN( 254)							float b071 = ((a201 * a321) - (a221 * a301));
HXDLIN( 254)							float b081 = ((a201 * a331) - (a231 * a301));
HXDLIN( 254)							float b091 = ((a211 * a321) - (a221 * a311));
HXDLIN( 254)							float b101 = ((a211 * a331) - (a231 * a311));
HXDLIN( 254)							float b111 = ((a221 * a331) - (a231 * a321));
HXDLIN( 254)							float det1 = ((((((b001 * b111) - (b011 * b101)) + (b021 * b091)) + (b031 * b081)) - (b041 * b071)) + (b051 * b061));
HXDLIN( 254)							if ((det1 == ((Float)0.0))) {
HXLINE( 254)								_this3->self->_00 = ( (float)(((Float)1.0)) );
HXDLIN( 254)								_this3->self->_01 = ( (float)(((Float)0.0)) );
HXDLIN( 254)								_this3->self->_02 = ( (float)(((Float)0.0)) );
HXDLIN( 254)								_this3->self->_03 = ( (float)(((Float)0.0)) );
HXDLIN( 254)								_this3->self->_10 = ( (float)(((Float)0.0)) );
HXDLIN( 254)								_this3->self->_11 = ( (float)(((Float)1.0)) );
HXDLIN( 254)								_this3->self->_12 = ( (float)(((Float)0.0)) );
HXDLIN( 254)								_this3->self->_13 = ( (float)(((Float)0.0)) );
HXDLIN( 254)								_this3->self->_20 = ( (float)(((Float)0.0)) );
HXDLIN( 254)								_this3->self->_21 = ( (float)(((Float)0.0)) );
HXDLIN( 254)								_this3->self->_22 = ( (float)(((Float)1.0)) );
HXDLIN( 254)								_this3->self->_23 = ( (float)(((Float)0.0)) );
HXDLIN( 254)								_this3->self->_30 = ( (float)(((Float)0.0)) );
HXDLIN( 254)								_this3->self->_31 = ( (float)(((Float)0.0)) );
HXDLIN( 254)								_this3->self->_32 = ( (float)(((Float)0.0)) );
HXDLIN( 254)								_this3->self->_33 = ( (float)(((Float)1.0)) );
            							}
            							else {
HXLINE( 254)								det1 = ( (float)((((Float)1.0) / ( (Float)(det1) ))) );
HXDLIN( 254)								_this3->self->_00 = ((((a111 * b111) - (a121 * b101)) + (a131 * b091)) * det1);
HXDLIN( 254)								_this3->self->_01 = ((((a021 * b101) - (a011 * b111)) - (a031 * b091)) * det1);
HXDLIN( 254)								_this3->self->_02 = ((((a311 * b051) - (a321 * b041)) + (a331 * b031)) * det1);
HXDLIN( 254)								_this3->self->_03 = ((((a221 * b041) - (a211 * b051)) - (a231 * b031)) * det1);
HXDLIN( 254)								_this3->self->_10 = ((((a121 * b081) - (a101 * b111)) - (a131 * b071)) * det1);
HXDLIN( 254)								_this3->self->_11 = ((((a001 * b111) - (a021 * b081)) + (a031 * b071)) * det1);
HXDLIN( 254)								_this3->self->_12 = ((((a321 * b021) - (a301 * b051)) - (a331 * b011)) * det1);
HXDLIN( 254)								_this3->self->_13 = ((((a201 * b051) - (a221 * b021)) + (a231 * b011)) * det1);
HXDLIN( 254)								_this3->self->_20 = ((((a101 * b101) - (a111 * b081)) + (a131 * b061)) * det1);
HXDLIN( 254)								_this3->self->_21 = ((((a011 * b081) - (a001 * b101)) - (a031 * b061)) * det1);
HXDLIN( 254)								_this3->self->_22 = ((((a301 * b041) - (a311 * b021)) + (a331 * b001)) * det1);
HXDLIN( 254)								_this3->self->_23 = ((((a211 * b021) - (a201 * b041)) - (a231 * b001)) * det1);
HXDLIN( 254)								_this3->self->_30 = ((((a111 * b071) - (a101 * b091)) - (a121 * b061)) * det1);
HXDLIN( 254)								_this3->self->_31 = ((((a001 * b091) - (a011 * b071)) + (a021 * b061)) * det1);
HXDLIN( 254)								_this3->self->_32 = ((((a311 * b011) - (a301 * b031)) - (a321 * b001)) * det1);
HXDLIN( 254)								_this3->self->_33 = ((((a201 * b031) - (a211 * b011)) + (a221 * b001)) * det1);
            							}
            						}
HXLINE( 256)						m = ::iron::object::Uniforms_obj::helpMat;
            					}
            					else {
HXLINE( 258)						if ((c->link == HX_("_transposeViewMatrix",60,53,b3,5a))) {
HXLINE( 259)							{
HXLINE( 259)								 ::iron::math::Mat4 _this4 = ::iron::object::Uniforms_obj::helpMat;
HXDLIN( 259)								 ::iron::math::Mat4 m4 = camera->V;
HXDLIN( 259)								_this4->self->_00 = m4->self->_00;
HXDLIN( 259)								_this4->self->_01 = m4->self->_01;
HXDLIN( 259)								_this4->self->_02 = m4->self->_02;
HXDLIN( 259)								_this4->self->_03 = m4->self->_03;
HXDLIN( 259)								_this4->self->_10 = m4->self->_10;
HXDLIN( 259)								_this4->self->_11 = m4->self->_11;
HXDLIN( 259)								_this4->self->_12 = m4->self->_12;
HXDLIN( 259)								_this4->self->_13 = m4->self->_13;
HXDLIN( 259)								_this4->self->_20 = m4->self->_20;
HXDLIN( 259)								_this4->self->_21 = m4->self->_21;
HXDLIN( 259)								_this4->self->_22 = m4->self->_22;
HXDLIN( 259)								_this4->self->_23 = m4->self->_23;
HXDLIN( 259)								_this4->self->_30 = m4->self->_30;
HXDLIN( 259)								_this4->self->_31 = m4->self->_31;
HXDLIN( 259)								_this4->self->_32 = m4->self->_32;
HXDLIN( 259)								_this4->self->_33 = m4->self->_33;
            							}
HXLINE( 260)							{
HXLINE( 260)								 ::iron::math::Mat4 _this5 = ::iron::object::Uniforms_obj::helpMat;
HXDLIN( 260)								float f1 = _this5->self->_01;
HXDLIN( 260)								_this5->self->_01 = _this5->self->_10;
HXDLIN( 260)								_this5->self->_10 = f1;
HXDLIN( 260)								f1 = _this5->self->_02;
HXDLIN( 260)								_this5->self->_02 = _this5->self->_20;
HXDLIN( 260)								_this5->self->_20 = f1;
HXDLIN( 260)								f1 = _this5->self->_12;
HXDLIN( 260)								_this5->self->_12 = _this5->self->_21;
HXDLIN( 260)								_this5->self->_21 = f1;
            							}
HXLINE( 261)							m = ::iron::object::Uniforms_obj::helpMat;
            						}
            						else {
HXLINE( 263)							if ((c->link == HX_("_projectionMatrix",8f,76,36,69))) {
HXLINE( 264)								m = camera->P;
            							}
            							else {
HXLINE( 266)								if ((c->link == HX_("_inverseProjectionMatrix",81,3b,65,3b))) {
HXLINE( 267)									{
HXLINE( 267)										 ::iron::math::Mat4 _this6 = ::iron::object::Uniforms_obj::helpMat;
HXDLIN( 267)										 ::iron::math::Mat4 m5 = camera->P;
HXDLIN( 267)										float a002 = m5->self->_00;
HXDLIN( 267)										float a012 = m5->self->_01;
HXDLIN( 267)										float a022 = m5->self->_02;
HXDLIN( 267)										float a032 = m5->self->_03;
HXDLIN( 267)										float a102 = m5->self->_10;
HXDLIN( 267)										float a112 = m5->self->_11;
HXDLIN( 267)										float a122 = m5->self->_12;
HXDLIN( 267)										float a132 = m5->self->_13;
HXDLIN( 267)										float a202 = m5->self->_20;
HXDLIN( 267)										float a212 = m5->self->_21;
HXDLIN( 267)										float a222 = m5->self->_22;
HXDLIN( 267)										float a232 = m5->self->_23;
HXDLIN( 267)										float a302 = m5->self->_30;
HXDLIN( 267)										float a312 = m5->self->_31;
HXDLIN( 267)										float a322 = m5->self->_32;
HXDLIN( 267)										float a332 = m5->self->_33;
HXDLIN( 267)										float b002 = ((a002 * a112) - (a012 * a102));
HXDLIN( 267)										float b012 = ((a002 * a122) - (a022 * a102));
HXDLIN( 267)										float b022 = ((a002 * a132) - (a032 * a102));
HXDLIN( 267)										float b032 = ((a012 * a122) - (a022 * a112));
HXDLIN( 267)										float b042 = ((a012 * a132) - (a032 * a112));
HXDLIN( 267)										float b052 = ((a022 * a132) - (a032 * a122));
HXDLIN( 267)										float b062 = ((a202 * a312) - (a212 * a302));
HXDLIN( 267)										float b072 = ((a202 * a322) - (a222 * a302));
HXDLIN( 267)										float b082 = ((a202 * a332) - (a232 * a302));
HXDLIN( 267)										float b092 = ((a212 * a322) - (a222 * a312));
HXDLIN( 267)										float b102 = ((a212 * a332) - (a232 * a312));
HXDLIN( 267)										float b112 = ((a222 * a332) - (a232 * a322));
HXDLIN( 267)										float det2 = ((((((b002 * b112) - (b012 * b102)) + (b022 * b092)) + (b032 * b082)) - (b042 * b072)) + (b052 * b062));
HXDLIN( 267)										if ((det2 == ((Float)0.0))) {
HXLINE( 267)											_this6->self->_00 = ( (float)(((Float)1.0)) );
HXDLIN( 267)											_this6->self->_01 = ( (float)(((Float)0.0)) );
HXDLIN( 267)											_this6->self->_02 = ( (float)(((Float)0.0)) );
HXDLIN( 267)											_this6->self->_03 = ( (float)(((Float)0.0)) );
HXDLIN( 267)											_this6->self->_10 = ( (float)(((Float)0.0)) );
HXDLIN( 267)											_this6->self->_11 = ( (float)(((Float)1.0)) );
HXDLIN( 267)											_this6->self->_12 = ( (float)(((Float)0.0)) );
HXDLIN( 267)											_this6->self->_13 = ( (float)(((Float)0.0)) );
HXDLIN( 267)											_this6->self->_20 = ( (float)(((Float)0.0)) );
HXDLIN( 267)											_this6->self->_21 = ( (float)(((Float)0.0)) );
HXDLIN( 267)											_this6->self->_22 = ( (float)(((Float)1.0)) );
HXDLIN( 267)											_this6->self->_23 = ( (float)(((Float)0.0)) );
HXDLIN( 267)											_this6->self->_30 = ( (float)(((Float)0.0)) );
HXDLIN( 267)											_this6->self->_31 = ( (float)(((Float)0.0)) );
HXDLIN( 267)											_this6->self->_32 = ( (float)(((Float)0.0)) );
HXDLIN( 267)											_this6->self->_33 = ( (float)(((Float)1.0)) );
            										}
            										else {
HXLINE( 267)											det2 = ( (float)((((Float)1.0) / ( (Float)(det2) ))) );
HXDLIN( 267)											_this6->self->_00 = ((((a112 * b112) - (a122 * b102)) + (a132 * b092)) * det2);
HXDLIN( 267)											_this6->self->_01 = ((((a022 * b102) - (a012 * b112)) - (a032 * b092)) * det2);
HXDLIN( 267)											_this6->self->_02 = ((((a312 * b052) - (a322 * b042)) + (a332 * b032)) * det2);
HXDLIN( 267)											_this6->self->_03 = ((((a222 * b042) - (a212 * b052)) - (a232 * b032)) * det2);
HXDLIN( 267)											_this6->self->_10 = ((((a122 * b082) - (a102 * b112)) - (a132 * b072)) * det2);
HXDLIN( 267)											_this6->self->_11 = ((((a002 * b112) - (a022 * b082)) + (a032 * b072)) * det2);
HXDLIN( 267)											_this6->self->_12 = ((((a322 * b022) - (a302 * b052)) - (a332 * b012)) * det2);
HXDLIN( 267)											_this6->self->_13 = ((((a202 * b052) - (a222 * b022)) + (a232 * b012)) * det2);
HXDLIN( 267)											_this6->self->_20 = ((((a102 * b102) - (a112 * b082)) + (a132 * b062)) * det2);
HXDLIN( 267)											_this6->self->_21 = ((((a012 * b082) - (a002 * b102)) - (a032 * b062)) * det2);
HXDLIN( 267)											_this6->self->_22 = ((((a302 * b042) - (a312 * b022)) + (a332 * b002)) * det2);
HXDLIN( 267)											_this6->self->_23 = ((((a212 * b022) - (a202 * b042)) - (a232 * b002)) * det2);
HXDLIN( 267)											_this6->self->_30 = ((((a112 * b072) - (a102 * b092)) - (a122 * b062)) * det2);
HXDLIN( 267)											_this6->self->_31 = ((((a002 * b092) - (a012 * b072)) + (a022 * b062)) * det2);
HXDLIN( 267)											_this6->self->_32 = ((((a312 * b012) - (a302 * b032)) - (a322 * b002)) * det2);
HXDLIN( 267)											_this6->self->_33 = ((((a202 * b032) - (a212 * b012)) + (a222 * b002)) * det2);
            										}
            									}
HXLINE( 268)									m = ::iron::object::Uniforms_obj::helpMat;
            								}
            								else {
HXLINE( 270)									if ((c->link == HX_("_inverseViewProjectionMatrix",86,a0,af,20))) {
HXLINE( 274)										{
HXLINE( 274)											 ::iron::math::Mat4 _this7 = ::iron::object::Uniforms_obj::helpMat;
HXDLIN( 274)											 ::iron::math::Mat4 m6 = camera->V;
HXDLIN( 274)											_this7->self->_00 = m6->self->_00;
HXDLIN( 274)											_this7->self->_01 = m6->self->_01;
HXDLIN( 274)											_this7->self->_02 = m6->self->_02;
HXDLIN( 274)											_this7->self->_03 = m6->self->_03;
HXDLIN( 274)											_this7->self->_10 = m6->self->_10;
HXDLIN( 274)											_this7->self->_11 = m6->self->_11;
HXDLIN( 274)											_this7->self->_12 = m6->self->_12;
HXDLIN( 274)											_this7->self->_13 = m6->self->_13;
HXDLIN( 274)											_this7->self->_20 = m6->self->_20;
HXDLIN( 274)											_this7->self->_21 = m6->self->_21;
HXDLIN( 274)											_this7->self->_22 = m6->self->_22;
HXDLIN( 274)											_this7->self->_23 = m6->self->_23;
HXDLIN( 274)											_this7->self->_30 = m6->self->_30;
HXDLIN( 274)											_this7->self->_31 = m6->self->_31;
HXDLIN( 274)											_this7->self->_32 = m6->self->_32;
HXDLIN( 274)											_this7->self->_33 = m6->self->_33;
            										}
HXLINE( 276)										{
HXLINE( 276)											 ::iron::math::Mat4 _this8 = ::iron::object::Uniforms_obj::helpMat;
HXDLIN( 276)											 ::iron::math::Mat4 m7 = camera->P;
HXDLIN( 276)											float a003 = _this8->self->_00;
HXDLIN( 276)											float a013 = _this8->self->_01;
HXDLIN( 276)											float a023 = _this8->self->_02;
HXDLIN( 276)											float a033 = _this8->self->_03;
HXDLIN( 276)											float a103 = _this8->self->_10;
HXDLIN( 276)											float a113 = _this8->self->_11;
HXDLIN( 276)											float a123 = _this8->self->_12;
HXDLIN( 276)											float a133 = _this8->self->_13;
HXDLIN( 276)											float a203 = _this8->self->_20;
HXDLIN( 276)											float a213 = _this8->self->_21;
HXDLIN( 276)											float a223 = _this8->self->_22;
HXDLIN( 276)											float a233 = _this8->self->_23;
HXDLIN( 276)											float a303 = _this8->self->_30;
HXDLIN( 276)											float a313 = _this8->self->_31;
HXDLIN( 276)											float a323 = _this8->self->_32;
HXDLIN( 276)											float a333 = _this8->self->_33;
HXDLIN( 276)											float b0 = m7->self->_00;
HXDLIN( 276)											float b1 = m7->self->_10;
HXDLIN( 276)											float b2 = m7->self->_20;
HXDLIN( 276)											float b3 = m7->self->_30;
HXDLIN( 276)											_this8->self->_00 = ((((a003 * b0) + (a013 * b1)) + (a023 * b2)) + (a033 * b3));
HXDLIN( 276)											_this8->self->_10 = ((((a103 * b0) + (a113 * b1)) + (a123 * b2)) + (a133 * b3));
HXDLIN( 276)											_this8->self->_20 = ((((a203 * b0) + (a213 * b1)) + (a223 * b2)) + (a233 * b3));
HXDLIN( 276)											_this8->self->_30 = ((((a303 * b0) + (a313 * b1)) + (a323 * b2)) + (a333 * b3));
HXDLIN( 276)											b0 = m7->self->_01;
HXDLIN( 276)											b1 = m7->self->_11;
HXDLIN( 276)											b2 = m7->self->_21;
HXDLIN( 276)											b3 = m7->self->_31;
HXDLIN( 276)											_this8->self->_01 = ((((a003 * b0) + (a013 * b1)) + (a023 * b2)) + (a033 * b3));
HXDLIN( 276)											_this8->self->_11 = ((((a103 * b0) + (a113 * b1)) + (a123 * b2)) + (a133 * b3));
HXDLIN( 276)											_this8->self->_21 = ((((a203 * b0) + (a213 * b1)) + (a223 * b2)) + (a233 * b3));
HXDLIN( 276)											_this8->self->_31 = ((((a303 * b0) + (a313 * b1)) + (a323 * b2)) + (a333 * b3));
HXDLIN( 276)											b0 = m7->self->_02;
HXDLIN( 276)											b1 = m7->self->_12;
HXDLIN( 276)											b2 = m7->self->_22;
HXDLIN( 276)											b3 = m7->self->_32;
HXDLIN( 276)											_this8->self->_02 = ((((a003 * b0) + (a013 * b1)) + (a023 * b2)) + (a033 * b3));
HXDLIN( 276)											_this8->self->_12 = ((((a103 * b0) + (a113 * b1)) + (a123 * b2)) + (a133 * b3));
HXDLIN( 276)											_this8->self->_22 = ((((a203 * b0) + (a213 * b1)) + (a223 * b2)) + (a233 * b3));
HXDLIN( 276)											_this8->self->_32 = ((((a303 * b0) + (a313 * b1)) + (a323 * b2)) + (a333 * b3));
HXDLIN( 276)											b0 = m7->self->_03;
HXDLIN( 276)											b1 = m7->self->_13;
HXDLIN( 276)											b2 = m7->self->_23;
HXDLIN( 276)											b3 = m7->self->_33;
HXDLIN( 276)											_this8->self->_03 = ((((a003 * b0) + (a013 * b1)) + (a023 * b2)) + (a033 * b3));
HXDLIN( 276)											_this8->self->_13 = ((((a103 * b0) + (a113 * b1)) + (a123 * b2)) + (a133 * b3));
HXDLIN( 276)											_this8->self->_23 = ((((a203 * b0) + (a213 * b1)) + (a223 * b2)) + (a233 * b3));
HXDLIN( 276)											_this8->self->_33 = ((((a303 * b0) + (a313 * b1)) + (a323 * b2)) + (a333 * b3));
            										}
HXLINE( 277)										{
HXLINE( 277)											 ::iron::math::Mat4 _this9 = ::iron::object::Uniforms_obj::helpMat;
HXDLIN( 277)											 ::iron::math::Mat4 m8 = ::iron::object::Uniforms_obj::helpMat;
HXDLIN( 277)											float a004 = m8->self->_00;
HXDLIN( 277)											float a014 = m8->self->_01;
HXDLIN( 277)											float a024 = m8->self->_02;
HXDLIN( 277)											float a034 = m8->self->_03;
HXDLIN( 277)											float a104 = m8->self->_10;
HXDLIN( 277)											float a114 = m8->self->_11;
HXDLIN( 277)											float a124 = m8->self->_12;
HXDLIN( 277)											float a134 = m8->self->_13;
HXDLIN( 277)											float a204 = m8->self->_20;
HXDLIN( 277)											float a214 = m8->self->_21;
HXDLIN( 277)											float a224 = m8->self->_22;
HXDLIN( 277)											float a234 = m8->self->_23;
HXDLIN( 277)											float a304 = m8->self->_30;
HXDLIN( 277)											float a314 = m8->self->_31;
HXDLIN( 277)											float a324 = m8->self->_32;
HXDLIN( 277)											float a334 = m8->self->_33;
HXDLIN( 277)											float b003 = ((a004 * a114) - (a014 * a104));
HXDLIN( 277)											float b013 = ((a004 * a124) - (a024 * a104));
HXDLIN( 277)											float b023 = ((a004 * a134) - (a034 * a104));
HXDLIN( 277)											float b033 = ((a014 * a124) - (a024 * a114));
HXDLIN( 277)											float b043 = ((a014 * a134) - (a034 * a114));
HXDLIN( 277)											float b053 = ((a024 * a134) - (a034 * a124));
HXDLIN( 277)											float b063 = ((a204 * a314) - (a214 * a304));
HXDLIN( 277)											float b073 = ((a204 * a324) - (a224 * a304));
HXDLIN( 277)											float b083 = ((a204 * a334) - (a234 * a304));
HXDLIN( 277)											float b093 = ((a214 * a324) - (a224 * a314));
HXDLIN( 277)											float b103 = ((a214 * a334) - (a234 * a314));
HXDLIN( 277)											float b113 = ((a224 * a334) - (a234 * a324));
HXDLIN( 277)											float det3 = ((((((b003 * b113) - (b013 * b103)) + (b023 * b093)) + (b033 * b083)) - (b043 * b073)) + (b053 * b063));
HXDLIN( 277)											if ((det3 == ((Float)0.0))) {
HXLINE( 277)												_this9->self->_00 = ( (float)(((Float)1.0)) );
HXDLIN( 277)												_this9->self->_01 = ( (float)(((Float)0.0)) );
HXDLIN( 277)												_this9->self->_02 = ( (float)(((Float)0.0)) );
HXDLIN( 277)												_this9->self->_03 = ( (float)(((Float)0.0)) );
HXDLIN( 277)												_this9->self->_10 = ( (float)(((Float)0.0)) );
HXDLIN( 277)												_this9->self->_11 = ( (float)(((Float)1.0)) );
HXDLIN( 277)												_this9->self->_12 = ( (float)(((Float)0.0)) );
HXDLIN( 277)												_this9->self->_13 = ( (float)(((Float)0.0)) );
HXDLIN( 277)												_this9->self->_20 = ( (float)(((Float)0.0)) );
HXDLIN( 277)												_this9->self->_21 = ( (float)(((Float)0.0)) );
HXDLIN( 277)												_this9->self->_22 = ( (float)(((Float)1.0)) );
HXDLIN( 277)												_this9->self->_23 = ( (float)(((Float)0.0)) );
HXDLIN( 277)												_this9->self->_30 = ( (float)(((Float)0.0)) );
HXDLIN( 277)												_this9->self->_31 = ( (float)(((Float)0.0)) );
HXDLIN( 277)												_this9->self->_32 = ( (float)(((Float)0.0)) );
HXDLIN( 277)												_this9->self->_33 = ( (float)(((Float)1.0)) );
            											}
            											else {
HXLINE( 277)												det3 = ( (float)((((Float)1.0) / ( (Float)(det3) ))) );
HXDLIN( 277)												_this9->self->_00 = ((((a114 * b113) - (a124 * b103)) + (a134 * b093)) * det3);
HXDLIN( 277)												_this9->self->_01 = ((((a024 * b103) - (a014 * b113)) - (a034 * b093)) * det3);
HXDLIN( 277)												_this9->self->_02 = ((((a314 * b053) - (a324 * b043)) + (a334 * b033)) * det3);
HXDLIN( 277)												_this9->self->_03 = ((((a224 * b043) - (a214 * b053)) - (a234 * b033)) * det3);
HXDLIN( 277)												_this9->self->_10 = ((((a124 * b083) - (a104 * b113)) - (a134 * b073)) * det3);
HXDLIN( 277)												_this9->self->_11 = ((((a004 * b113) - (a024 * b083)) + (a034 * b073)) * det3);
HXDLIN( 277)												_this9->self->_12 = ((((a324 * b023) - (a304 * b053)) - (a334 * b013)) * det3);
HXDLIN( 277)												_this9->self->_13 = ((((a204 * b053) - (a224 * b023)) + (a234 * b013)) * det3);
HXDLIN( 277)												_this9->self->_20 = ((((a104 * b103) - (a114 * b083)) + (a134 * b063)) * det3);
HXDLIN( 277)												_this9->self->_21 = ((((a014 * b083) - (a004 * b103)) - (a034 * b063)) * det3);
HXDLIN( 277)												_this9->self->_22 = ((((a304 * b043) - (a314 * b023)) + (a334 * b003)) * det3);
HXDLIN( 277)												_this9->self->_23 = ((((a214 * b023) - (a204 * b043)) - (a234 * b003)) * det3);
HXDLIN( 277)												_this9->self->_30 = ((((a114 * b073) - (a104 * b093)) - (a124 * b063)) * det3);
HXDLIN( 277)												_this9->self->_31 = ((((a004 * b093) - (a014 * b073)) + (a024 * b063)) * det3);
HXDLIN( 277)												_this9->self->_32 = ((((a314 * b013) - (a304 * b033)) - (a324 * b003)) * det3);
HXDLIN( 277)												_this9->self->_33 = ((((a204 * b033) - (a214 * b013)) + (a224 * b003)) * det3);
            											}
            										}
HXLINE( 278)										m = ::iron::object::Uniforms_obj::helpMat;
            									}
            									else {
HXLINE( 280)										if ((c->link == HX_("_viewProjectionMatrix",94,7a,d6,be))) {
HXLINE( 285)											m = camera->VP;
            										}
            										else {
HXLINE( 288)											if ((c->link == HX_("_prevViewProjectionMatrix",a7,cc,79,26))) {
HXLINE( 289)												{
HXLINE( 289)													 ::iron::math::Mat4 _this10 = ::iron::object::Uniforms_obj::helpMat;
HXDLIN( 289)													 ::iron::math::Mat4 m9 = camera->prevV;
HXDLIN( 289)													_this10->self->_00 = m9->self->_00;
HXDLIN( 289)													_this10->self->_01 = m9->self->_01;
HXDLIN( 289)													_this10->self->_02 = m9->self->_02;
HXDLIN( 289)													_this10->self->_03 = m9->self->_03;
HXDLIN( 289)													_this10->self->_10 = m9->self->_10;
HXDLIN( 289)													_this10->self->_11 = m9->self->_11;
HXDLIN( 289)													_this10->self->_12 = m9->self->_12;
HXDLIN( 289)													_this10->self->_13 = m9->self->_13;
HXDLIN( 289)													_this10->self->_20 = m9->self->_20;
HXDLIN( 289)													_this10->self->_21 = m9->self->_21;
HXDLIN( 289)													_this10->self->_22 = m9->self->_22;
HXDLIN( 289)													_this10->self->_23 = m9->self->_23;
HXDLIN( 289)													_this10->self->_30 = m9->self->_30;
HXDLIN( 289)													_this10->self->_31 = m9->self->_31;
HXDLIN( 289)													_this10->self->_32 = m9->self->_32;
HXDLIN( 289)													_this10->self->_33 = m9->self->_33;
            												}
HXLINE( 290)												{
HXLINE( 290)													 ::iron::math::Mat4 _this11 = ::iron::object::Uniforms_obj::helpMat;
HXDLIN( 290)													 ::iron::math::Mat4 m10 = camera->P;
HXDLIN( 290)													float a005 = _this11->self->_00;
HXDLIN( 290)													float a015 = _this11->self->_01;
HXDLIN( 290)													float a025 = _this11->self->_02;
HXDLIN( 290)													float a035 = _this11->self->_03;
HXDLIN( 290)													float a105 = _this11->self->_10;
HXDLIN( 290)													float a115 = _this11->self->_11;
HXDLIN( 290)													float a125 = _this11->self->_12;
HXDLIN( 290)													float a135 = _this11->self->_13;
HXDLIN( 290)													float a205 = _this11->self->_20;
HXDLIN( 290)													float a215 = _this11->self->_21;
HXDLIN( 290)													float a225 = _this11->self->_22;
HXDLIN( 290)													float a235 = _this11->self->_23;
HXDLIN( 290)													float a305 = _this11->self->_30;
HXDLIN( 290)													float a315 = _this11->self->_31;
HXDLIN( 290)													float a325 = _this11->self->_32;
HXDLIN( 290)													float a335 = _this11->self->_33;
HXDLIN( 290)													float b010 = m10->self->_00;
HXDLIN( 290)													float b12 = m10->self->_10;
HXDLIN( 290)													float b21 = m10->self->_20;
HXDLIN( 290)													float b31 = m10->self->_30;
HXDLIN( 290)													_this11->self->_00 = ((((a005 * b010) + (a015 * b12)) + (a025 * b21)) + (a035 * b31));
HXDLIN( 290)													_this11->self->_10 = ((((a105 * b010) + (a115 * b12)) + (a125 * b21)) + (a135 * b31));
HXDLIN( 290)													_this11->self->_20 = ((((a205 * b010) + (a215 * b12)) + (a225 * b21)) + (a235 * b31));
HXDLIN( 290)													_this11->self->_30 = ((((a305 * b010) + (a315 * b12)) + (a325 * b21)) + (a335 * b31));
HXDLIN( 290)													b010 = m10->self->_01;
HXDLIN( 290)													b12 = m10->self->_11;
HXDLIN( 290)													b21 = m10->self->_21;
HXDLIN( 290)													b31 = m10->self->_31;
HXDLIN( 290)													_this11->self->_01 = ((((a005 * b010) + (a015 * b12)) + (a025 * b21)) + (a035 * b31));
HXDLIN( 290)													_this11->self->_11 = ((((a105 * b010) + (a115 * b12)) + (a125 * b21)) + (a135 * b31));
HXDLIN( 290)													_this11->self->_21 = ((((a205 * b010) + (a215 * b12)) + (a225 * b21)) + (a235 * b31));
HXDLIN( 290)													_this11->self->_31 = ((((a305 * b010) + (a315 * b12)) + (a325 * b21)) + (a335 * b31));
HXDLIN( 290)													b010 = m10->self->_02;
HXDLIN( 290)													b12 = m10->self->_12;
HXDLIN( 290)													b21 = m10->self->_22;
HXDLIN( 290)													b31 = m10->self->_32;
HXDLIN( 290)													_this11->self->_02 = ((((a005 * b010) + (a015 * b12)) + (a025 * b21)) + (a035 * b31));
HXDLIN( 290)													_this11->self->_12 = ((((a105 * b010) + (a115 * b12)) + (a125 * b21)) + (a135 * b31));
HXDLIN( 290)													_this11->self->_22 = ((((a205 * b010) + (a215 * b12)) + (a225 * b21)) + (a235 * b31));
HXDLIN( 290)													_this11->self->_32 = ((((a305 * b010) + (a315 * b12)) + (a325 * b21)) + (a335 * b31));
HXDLIN( 290)													b010 = m10->self->_03;
HXDLIN( 290)													b12 = m10->self->_13;
HXDLIN( 290)													b21 = m10->self->_23;
HXDLIN( 290)													b31 = m10->self->_33;
HXDLIN( 290)													_this11->self->_03 = ((((a005 * b010) + (a015 * b12)) + (a025 * b21)) + (a035 * b31));
HXDLIN( 290)													_this11->self->_13 = ((((a105 * b010) + (a115 * b12)) + (a125 * b21)) + (a135 * b31));
HXDLIN( 290)													_this11->self->_23 = ((((a205 * b010) + (a215 * b12)) + (a225 * b21)) + (a235 * b31));
HXDLIN( 290)													_this11->self->_33 = ((((a305 * b010) + (a315 * b12)) + (a325 * b21)) + (a335 * b31));
            												}
HXLINE( 291)												m = ::iron::object::Uniforms_obj::helpMat;
            											}
            											else {
HXLINE( 293)												if ((c->link == HX_("_lightViewProjectionMatrix",6c,ea,ec,ec))) {
HXLINE( 294)													if (hx::IsNotNull( light )) {
HXLINE( 295)														m = light->VP;
            													}
            												}
            												else {
HXLINE( 298)													if ((c->link == HX_("_biasLightViewProjectionMatrix",33,fb,29,00))) {
HXLINE( 299)														if (hx::IsNotNull( light )) {
HXLINE( 300)															{
HXLINE( 300)																 ::iron::math::Mat4 _this12 = ::iron::object::Uniforms_obj::helpMat;
HXDLIN( 300)																 ::iron::math::Mat4 m11 = light->VP;
HXDLIN( 300)																_this12->self->_00 = m11->self->_00;
HXDLIN( 300)																_this12->self->_01 = m11->self->_01;
HXDLIN( 300)																_this12->self->_02 = m11->self->_02;
HXDLIN( 300)																_this12->self->_03 = m11->self->_03;
HXDLIN( 300)																_this12->self->_10 = m11->self->_10;
HXDLIN( 300)																_this12->self->_11 = m11->self->_11;
HXDLIN( 300)																_this12->self->_12 = m11->self->_12;
HXDLIN( 300)																_this12->self->_13 = m11->self->_13;
HXDLIN( 300)																_this12->self->_20 = m11->self->_20;
HXDLIN( 300)																_this12->self->_21 = m11->self->_21;
HXDLIN( 300)																_this12->self->_22 = m11->self->_22;
HXDLIN( 300)																_this12->self->_23 = m11->self->_23;
HXDLIN( 300)																_this12->self->_30 = m11->self->_30;
HXDLIN( 300)																_this12->self->_31 = m11->self->_31;
HXDLIN( 300)																_this12->self->_32 = m11->self->_32;
HXDLIN( 300)																_this12->self->_33 = m11->self->_33;
            															}
HXLINE( 301)															{
HXLINE( 301)																 ::iron::math::Mat4 _this13 = ::iron::object::Uniforms_obj::helpMat;
HXDLIN( 301)																 ::iron::math::Mat4 m12 = ::iron::object::Uniforms_obj::biasMat;
HXDLIN( 301)																float a006 = _this13->self->_00;
HXDLIN( 301)																float a016 = _this13->self->_01;
HXDLIN( 301)																float a026 = _this13->self->_02;
HXDLIN( 301)																float a036 = _this13->self->_03;
HXDLIN( 301)																float a106 = _this13->self->_10;
HXDLIN( 301)																float a116 = _this13->self->_11;
HXDLIN( 301)																float a126 = _this13->self->_12;
HXDLIN( 301)																float a136 = _this13->self->_13;
HXDLIN( 301)																float a206 = _this13->self->_20;
HXDLIN( 301)																float a216 = _this13->self->_21;
HXDLIN( 301)																float a226 = _this13->self->_22;
HXDLIN( 301)																float a236 = _this13->self->_23;
HXDLIN( 301)																float a306 = _this13->self->_30;
HXDLIN( 301)																float a316 = _this13->self->_31;
HXDLIN( 301)																float a326 = _this13->self->_32;
HXDLIN( 301)																float a336 = _this13->self->_33;
HXDLIN( 301)																float b014 = m12->self->_00;
HXDLIN( 301)																float b13 = m12->self->_10;
HXDLIN( 301)																float b22 = m12->self->_20;
HXDLIN( 301)																float b32 = m12->self->_30;
HXDLIN( 301)																_this13->self->_00 = ((((a006 * b014) + (a016 * b13)) + (a026 * b22)) + (a036 * b32));
HXDLIN( 301)																_this13->self->_10 = ((((a106 * b014) + (a116 * b13)) + (a126 * b22)) + (a136 * b32));
HXDLIN( 301)																_this13->self->_20 = ((((a206 * b014) + (a216 * b13)) + (a226 * b22)) + (a236 * b32));
HXDLIN( 301)																_this13->self->_30 = ((((a306 * b014) + (a316 * b13)) + (a326 * b22)) + (a336 * b32));
HXDLIN( 301)																b014 = m12->self->_01;
HXDLIN( 301)																b13 = m12->self->_11;
HXDLIN( 301)																b22 = m12->self->_21;
HXDLIN( 301)																b32 = m12->self->_31;
HXDLIN( 301)																_this13->self->_01 = ((((a006 * b014) + (a016 * b13)) + (a026 * b22)) + (a036 * b32));
HXDLIN( 301)																_this13->self->_11 = ((((a106 * b014) + (a116 * b13)) + (a126 * b22)) + (a136 * b32));
HXDLIN( 301)																_this13->self->_21 = ((((a206 * b014) + (a216 * b13)) + (a226 * b22)) + (a236 * b32));
HXDLIN( 301)																_this13->self->_31 = ((((a306 * b014) + (a316 * b13)) + (a326 * b22)) + (a336 * b32));
HXDLIN( 301)																b014 = m12->self->_02;
HXDLIN( 301)																b13 = m12->self->_12;
HXDLIN( 301)																b22 = m12->self->_22;
HXDLIN( 301)																b32 = m12->self->_32;
HXDLIN( 301)																_this13->self->_02 = ((((a006 * b014) + (a016 * b13)) + (a026 * b22)) + (a036 * b32));
HXDLIN( 301)																_this13->self->_12 = ((((a106 * b014) + (a116 * b13)) + (a126 * b22)) + (a136 * b32));
HXDLIN( 301)																_this13->self->_22 = ((((a206 * b014) + (a216 * b13)) + (a226 * b22)) + (a236 * b32));
HXDLIN( 301)																_this13->self->_32 = ((((a306 * b014) + (a316 * b13)) + (a326 * b22)) + (a336 * b32));
HXDLIN( 301)																b014 = m12->self->_03;
HXDLIN( 301)																b13 = m12->self->_13;
HXDLIN( 301)																b22 = m12->self->_23;
HXDLIN( 301)																b32 = m12->self->_33;
HXDLIN( 301)																_this13->self->_03 = ((((a006 * b014) + (a016 * b13)) + (a026 * b22)) + (a036 * b32));
HXDLIN( 301)																_this13->self->_13 = ((((a106 * b014) + (a116 * b13)) + (a126 * b22)) + (a136 * b32));
HXDLIN( 301)																_this13->self->_23 = ((((a206 * b014) + (a216 * b13)) + (a226 * b22)) + (a236 * b32));
HXDLIN( 301)																_this13->self->_33 = ((((a306 * b014) + (a316 * b13)) + (a326 * b22)) + (a336 * b32));
            															}
HXLINE( 302)															m = ::iron::object::Uniforms_obj::helpMat;
            														}
            													}
            													else {
HXLINE( 305)														if ((c->link == HX_("_lightVolumeWorldViewProjectionMatrix",96,e2,5c,33))) {
HXLINE( 306)															if (hx::IsNotNull( light )) {
HXLINE( 307)																 ::iron::object::Transform tr = light->transform;
HXLINE( 308)																::String type = light->data->raw->type;
HXLINE( 309)																if ((type == HX_("spot",02,e7,58,4c))) {
HXLINE( 318)																	{
HXLINE( 318)																		 ::iron::math::Vec4 _this14 = ::iron::object::Uniforms_obj::helpVec;
HXDLIN( 318)																		_this14->x = tr->world->self->_30;
HXDLIN( 318)																		_this14->y = tr->world->self->_31;
HXDLIN( 318)																		_this14->z = tr->world->self->_32;
HXDLIN( 318)																		_this14->w = ( (float)(((Float)1.0)) );
            																	}
HXLINE( 319)																	float f2 = ( (float)(((Float)2.0)) );
HXLINE( 320)																	{
HXLINE( 320)																		 ::iron::math::Vec4 _this15 = ::iron::object::Uniforms_obj::helpVec2;
HXDLIN( 320)																		_this15->x = ( (float)(light->data->raw->far_plane) );
HXDLIN( 320)																		_this15->y = ( (float)((light->data->raw->far_plane * f2)) );
HXDLIN( 320)																		_this15->z = ( (float)((light->data->raw->far_plane * f2)) );
HXDLIN( 320)																		_this15->w = ( (float)(((Float)1.0)) );
            																	}
HXLINE( 321)																	{
HXLINE( 321)																		 ::iron::math::Mat4 _this16 = ::iron::object::Uniforms_obj::helpMat;
HXDLIN( 321)																		 ::iron::math::Vec4 loc = ::iron::object::Uniforms_obj::helpVec;
HXDLIN( 321)																		 ::iron::math::Quat quat = ::iron::object::Uniforms_obj::helpQuat;
HXDLIN( 321)																		 ::iron::math::Vec4 sc = ::iron::object::Uniforms_obj::helpVec2;
HXDLIN( 321)																		{
HXLINE( 321)																			float x = quat->x;
HXDLIN( 321)																			float y = quat->y;
HXDLIN( 321)																			float z = quat->z;
HXDLIN( 321)																			float w = quat->w;
HXDLIN( 321)																			float x2 = (x + x);
HXDLIN( 321)																			float y2 = (y + y);
HXDLIN( 321)																			float z2 = (z + z);
HXDLIN( 321)																			float xx = (x * x2);
HXDLIN( 321)																			float xy = (x * y2);
HXDLIN( 321)																			float xz = (x * z2);
HXDLIN( 321)																			float yy = (y * y2);
HXDLIN( 321)																			float yz = (y * z2);
HXDLIN( 321)																			float zz = (z * z2);
HXDLIN( 321)																			float wx = (w * x2);
HXDLIN( 321)																			float wy = (w * y2);
HXDLIN( 321)																			float wz = (w * z2);
HXDLIN( 321)																			_this16->self->_00 = ( (float)((((Float)1.0) - (yy + zz))) );
HXDLIN( 321)																			_this16->self->_10 = (xy - wz);
HXDLIN( 321)																			_this16->self->_20 = (xz + wy);
HXDLIN( 321)																			_this16->self->_01 = (xy + wz);
HXDLIN( 321)																			_this16->self->_11 = ( (float)((((Float)1.0) - (xx + zz))) );
HXDLIN( 321)																			_this16->self->_21 = (yz - wx);
HXDLIN( 321)																			_this16->self->_02 = (xz - wy);
HXDLIN( 321)																			_this16->self->_12 = (yz + wx);
HXDLIN( 321)																			_this16->self->_22 = ( (float)((((Float)1.0) - (xx + yy))) );
HXDLIN( 321)																			_this16->self->_03 = ( (float)(((Float)0.0)) );
HXDLIN( 321)																			_this16->self->_13 = ( (float)(((Float)0.0)) );
HXDLIN( 321)																			_this16->self->_23 = ( (float)(((Float)0.0)) );
HXDLIN( 321)																			_this16->self->_30 = ( (float)(((Float)0.0)) );
HXDLIN( 321)																			_this16->self->_31 = ( (float)(((Float)0.0)) );
HXDLIN( 321)																			_this16->self->_32 = ( (float)(((Float)0.0)) );
HXDLIN( 321)																			_this16->self->_33 = ( (float)(((Float)1.0)) );
            																		}
HXDLIN( 321)																		{
HXLINE( 321)																			float x1 = sc->x;
HXDLIN( 321)																			float y1 = sc->y;
HXDLIN( 321)																			float z1 = sc->z;
HXDLIN( 321)																			{
HXLINE( 321)																				 ::iron::math::Mat4 _g = _this16;
HXDLIN( 321)																				_g->self->_00 = (_g->self->_00 * x1);
            																			}
HXDLIN( 321)																			{
HXLINE( 321)																				 ::iron::math::Mat4 _g1 = _this16;
HXDLIN( 321)																				_g1->self->_01 = (_g1->self->_01 * x1);
            																			}
HXDLIN( 321)																			{
HXLINE( 321)																				 ::iron::math::Mat4 _g2 = _this16;
HXDLIN( 321)																				_g2->self->_02 = (_g2->self->_02 * x1);
            																			}
HXDLIN( 321)																			{
HXLINE( 321)																				 ::iron::math::Mat4 _g3 = _this16;
HXDLIN( 321)																				_g3->self->_03 = (_g3->self->_03 * x1);
            																			}
HXDLIN( 321)																			{
HXLINE( 321)																				 ::iron::math::Mat4 _g4 = _this16;
HXDLIN( 321)																				_g4->self->_10 = (_g4->self->_10 * y1);
            																			}
HXDLIN( 321)																			{
HXLINE( 321)																				 ::iron::math::Mat4 _g5 = _this16;
HXDLIN( 321)																				_g5->self->_11 = (_g5->self->_11 * y1);
            																			}
HXDLIN( 321)																			{
HXLINE( 321)																				 ::iron::math::Mat4 _g6 = _this16;
HXDLIN( 321)																				_g6->self->_12 = (_g6->self->_12 * y1);
            																			}
HXDLIN( 321)																			{
HXLINE( 321)																				 ::iron::math::Mat4 _g7 = _this16;
HXDLIN( 321)																				_g7->self->_13 = (_g7->self->_13 * y1);
            																			}
HXDLIN( 321)																			{
HXLINE( 321)																				 ::iron::math::Mat4 _g8 = _this16;
HXDLIN( 321)																				_g8->self->_20 = (_g8->self->_20 * z1);
            																			}
HXDLIN( 321)																			{
HXLINE( 321)																				 ::iron::math::Mat4 _g9 = _this16;
HXDLIN( 321)																				_g9->self->_21 = (_g9->self->_21 * z1);
            																			}
HXDLIN( 321)																			{
HXLINE( 321)																				 ::iron::math::Mat4 _g10 = _this16;
HXDLIN( 321)																				_g10->self->_22 = (_g10->self->_22 * z1);
            																			}
HXDLIN( 321)																			{
HXLINE( 321)																				 ::iron::math::Mat4 _g11 = _this16;
HXDLIN( 321)																				_g11->self->_23 = (_g11->self->_23 * z1);
            																			}
            																		}
HXDLIN( 321)																		{
HXLINE( 321)																			_this16->self->_30 = loc->x;
HXDLIN( 321)																			_this16->self->_31 = loc->y;
HXDLIN( 321)																			_this16->self->_32 = loc->z;
            																		}
            																	}
            																}
            																else {
HXLINE( 323)																	bool _hx_tmp;
HXDLIN( 323)																	if ((type != HX_("point",50,b4,8f,c6))) {
HXLINE( 323)																		_hx_tmp = (type == HX_("area",8d,8b,74,40));
            																	}
            																	else {
HXLINE( 323)																		_hx_tmp = true;
            																	}
HXDLIN( 323)																	if (_hx_tmp) {
HXLINE( 324)																		{
HXLINE( 324)																			 ::iron::math::Vec4 _this17 = ::iron::object::Uniforms_obj::helpVec;
HXDLIN( 324)																			_this17->x = tr->world->self->_30;
HXDLIN( 324)																			_this17->y = tr->world->self->_31;
HXDLIN( 324)																			_this17->z = tr->world->self->_32;
HXDLIN( 324)																			_this17->w = ( (float)(((Float)1.0)) );
            																		}
HXLINE( 325)																		float f21 = ( (float)(((Float)2.0)) );
HXLINE( 326)																		{
HXLINE( 326)																			 ::iron::math::Vec4 _this18 = ::iron::object::Uniforms_obj::helpVec2;
HXDLIN( 326)																			_this18->x = ( (float)(light->data->raw->far_plane) );
HXDLIN( 326)																			_this18->y = ( (float)((light->data->raw->far_plane * f21)) );
HXDLIN( 326)																			_this18->z = ( (float)((light->data->raw->far_plane * f21)) );
HXDLIN( 326)																			_this18->w = ( (float)(((Float)1.0)) );
            																		}
HXLINE( 327)																		{
HXLINE( 327)																			 ::iron::math::Mat4 _this19 = ::iron::object::Uniforms_obj::helpMat;
HXDLIN( 327)																			 ::iron::math::Vec4 loc1 = ::iron::object::Uniforms_obj::helpVec;
HXDLIN( 327)																			 ::iron::math::Quat quat1 = ::iron::object::Uniforms_obj::helpQuat;
HXDLIN( 327)																			 ::iron::math::Vec4 sc1 = ::iron::object::Uniforms_obj::helpVec2;
HXDLIN( 327)																			{
HXLINE( 327)																				float x3 = quat1->x;
HXDLIN( 327)																				float y3 = quat1->y;
HXDLIN( 327)																				float z3 = quat1->z;
HXDLIN( 327)																				float w1 = quat1->w;
HXDLIN( 327)																				float x21 = (x3 + x3);
HXDLIN( 327)																				float y21 = (y3 + y3);
HXDLIN( 327)																				float z21 = (z3 + z3);
HXDLIN( 327)																				float xx1 = (x3 * x21);
HXDLIN( 327)																				float xy1 = (x3 * y21);
HXDLIN( 327)																				float xz1 = (x3 * z21);
HXDLIN( 327)																				float yy1 = (y3 * y21);
HXDLIN( 327)																				float yz1 = (y3 * z21);
HXDLIN( 327)																				float zz1 = (z3 * z21);
HXDLIN( 327)																				float wx1 = (w1 * x21);
HXDLIN( 327)																				float wy1 = (w1 * y21);
HXDLIN( 327)																				float wz1 = (w1 * z21);
HXDLIN( 327)																				_this19->self->_00 = ( (float)((((Float)1.0) - (yy1 + zz1))) );
HXDLIN( 327)																				_this19->self->_10 = (xy1 - wz1);
HXDLIN( 327)																				_this19->self->_20 = (xz1 + wy1);
HXDLIN( 327)																				_this19->self->_01 = (xy1 + wz1);
HXDLIN( 327)																				_this19->self->_11 = ( (float)((((Float)1.0) - (xx1 + zz1))) );
HXDLIN( 327)																				_this19->self->_21 = (yz1 - wx1);
HXDLIN( 327)																				_this19->self->_02 = (xz1 - wy1);
HXDLIN( 327)																				_this19->self->_12 = (yz1 + wx1);
HXDLIN( 327)																				_this19->self->_22 = ( (float)((((Float)1.0) - (xx1 + yy1))) );
HXDLIN( 327)																				_this19->self->_03 = ( (float)(((Float)0.0)) );
HXDLIN( 327)																				_this19->self->_13 = ( (float)(((Float)0.0)) );
HXDLIN( 327)																				_this19->self->_23 = ( (float)(((Float)0.0)) );
HXDLIN( 327)																				_this19->self->_30 = ( (float)(((Float)0.0)) );
HXDLIN( 327)																				_this19->self->_31 = ( (float)(((Float)0.0)) );
HXDLIN( 327)																				_this19->self->_32 = ( (float)(((Float)0.0)) );
HXDLIN( 327)																				_this19->self->_33 = ( (float)(((Float)1.0)) );
            																			}
HXDLIN( 327)																			{
HXLINE( 327)																				float x4 = sc1->x;
HXDLIN( 327)																				float y4 = sc1->y;
HXDLIN( 327)																				float z4 = sc1->z;
HXDLIN( 327)																				{
HXLINE( 327)																					 ::iron::math::Mat4 _g12 = _this19;
HXDLIN( 327)																					_g12->self->_00 = (_g12->self->_00 * x4);
            																				}
HXDLIN( 327)																				{
HXLINE( 327)																					 ::iron::math::Mat4 _g13 = _this19;
HXDLIN( 327)																					_g13->self->_01 = (_g13->self->_01 * x4);
            																				}
HXDLIN( 327)																				{
HXLINE( 327)																					 ::iron::math::Mat4 _g14 = _this19;
HXDLIN( 327)																					_g14->self->_02 = (_g14->self->_02 * x4);
            																				}
HXDLIN( 327)																				{
HXLINE( 327)																					 ::iron::math::Mat4 _g15 = _this19;
HXDLIN( 327)																					_g15->self->_03 = (_g15->self->_03 * x4);
            																				}
HXDLIN( 327)																				{
HXLINE( 327)																					 ::iron::math::Mat4 _g16 = _this19;
HXDLIN( 327)																					_g16->self->_10 = (_g16->self->_10 * y4);
            																				}
HXDLIN( 327)																				{
HXLINE( 327)																					 ::iron::math::Mat4 _g17 = _this19;
HXDLIN( 327)																					_g17->self->_11 = (_g17->self->_11 * y4);
            																				}
HXDLIN( 327)																				{
HXLINE( 327)																					 ::iron::math::Mat4 _g18 = _this19;
HXDLIN( 327)																					_g18->self->_12 = (_g18->self->_12 * y4);
            																				}
HXDLIN( 327)																				{
HXLINE( 327)																					 ::iron::math::Mat4 _g19 = _this19;
HXDLIN( 327)																					_g19->self->_13 = (_g19->self->_13 * y4);
            																				}
HXDLIN( 327)																				{
HXLINE( 327)																					 ::iron::math::Mat4 _g20 = _this19;
HXDLIN( 327)																					_g20->self->_20 = (_g20->self->_20 * z4);
            																				}
HXDLIN( 327)																				{
HXLINE( 327)																					 ::iron::math::Mat4 _g21 = _this19;
HXDLIN( 327)																					_g21->self->_21 = (_g21->self->_21 * z4);
            																				}
HXDLIN( 327)																				{
HXLINE( 327)																					 ::iron::math::Mat4 _g22 = _this19;
HXDLIN( 327)																					_g22->self->_22 = (_g22->self->_22 * z4);
            																				}
HXDLIN( 327)																				{
HXLINE( 327)																					 ::iron::math::Mat4 _g23 = _this19;
HXDLIN( 327)																					_g23->self->_23 = (_g23->self->_23 * z4);
            																				}
            																			}
HXDLIN( 327)																			{
HXLINE( 327)																				_this19->self->_30 = loc1->x;
HXDLIN( 327)																				_this19->self->_31 = loc1->y;
HXDLIN( 327)																				_this19->self->_32 = loc1->z;
            																			}
            																		}
            																	}
            																}
HXLINE( 330)																{
HXLINE( 330)																	 ::iron::math::Mat4 _this20 = ::iron::object::Uniforms_obj::helpMat;
HXDLIN( 330)																	 ::iron::math::Mat4 m13 = camera->V;
HXDLIN( 330)																	float a007 = _this20->self->_00;
HXDLIN( 330)																	float a017 = _this20->self->_01;
HXDLIN( 330)																	float a027 = _this20->self->_02;
HXDLIN( 330)																	float a037 = _this20->self->_03;
HXDLIN( 330)																	float a107 = _this20->self->_10;
HXDLIN( 330)																	float a117 = _this20->self->_11;
HXDLIN( 330)																	float a127 = _this20->self->_12;
HXDLIN( 330)																	float a137 = _this20->self->_13;
HXDLIN( 330)																	float a207 = _this20->self->_20;
HXDLIN( 330)																	float a217 = _this20->self->_21;
HXDLIN( 330)																	float a227 = _this20->self->_22;
HXDLIN( 330)																	float a237 = _this20->self->_23;
HXDLIN( 330)																	float a307 = _this20->self->_30;
HXDLIN( 330)																	float a317 = _this20->self->_31;
HXDLIN( 330)																	float a327 = _this20->self->_32;
HXDLIN( 330)																	float a337 = _this20->self->_33;
HXDLIN( 330)																	float b015 = m13->self->_00;
HXDLIN( 330)																	float b14 = m13->self->_10;
HXDLIN( 330)																	float b23 = m13->self->_20;
HXDLIN( 330)																	float b33 = m13->self->_30;
HXDLIN( 330)																	_this20->self->_00 = ((((a007 * b015) + (a017 * b14)) + (a027 * b23)) + (a037 * b33));
HXDLIN( 330)																	_this20->self->_10 = ((((a107 * b015) + (a117 * b14)) + (a127 * b23)) + (a137 * b33));
HXDLIN( 330)																	_this20->self->_20 = ((((a207 * b015) + (a217 * b14)) + (a227 * b23)) + (a237 * b33));
HXDLIN( 330)																	_this20->self->_30 = ((((a307 * b015) + (a317 * b14)) + (a327 * b23)) + (a337 * b33));
HXDLIN( 330)																	b015 = m13->self->_01;
HXDLIN( 330)																	b14 = m13->self->_11;
HXDLIN( 330)																	b23 = m13->self->_21;
HXDLIN( 330)																	b33 = m13->self->_31;
HXDLIN( 330)																	_this20->self->_01 = ((((a007 * b015) + (a017 * b14)) + (a027 * b23)) + (a037 * b33));
HXDLIN( 330)																	_this20->self->_11 = ((((a107 * b015) + (a117 * b14)) + (a127 * b23)) + (a137 * b33));
HXDLIN( 330)																	_this20->self->_21 = ((((a207 * b015) + (a217 * b14)) + (a227 * b23)) + (a237 * b33));
HXDLIN( 330)																	_this20->self->_31 = ((((a307 * b015) + (a317 * b14)) + (a327 * b23)) + (a337 * b33));
HXDLIN( 330)																	b015 = m13->self->_02;
HXDLIN( 330)																	b14 = m13->self->_12;
HXDLIN( 330)																	b23 = m13->self->_22;
HXDLIN( 330)																	b33 = m13->self->_32;
HXDLIN( 330)																	_this20->self->_02 = ((((a007 * b015) + (a017 * b14)) + (a027 * b23)) + (a037 * b33));
HXDLIN( 330)																	_this20->self->_12 = ((((a107 * b015) + (a117 * b14)) + (a127 * b23)) + (a137 * b33));
HXDLIN( 330)																	_this20->self->_22 = ((((a207 * b015) + (a217 * b14)) + (a227 * b23)) + (a237 * b33));
HXDLIN( 330)																	_this20->self->_32 = ((((a307 * b015) + (a317 * b14)) + (a327 * b23)) + (a337 * b33));
HXDLIN( 330)																	b015 = m13->self->_03;
HXDLIN( 330)																	b14 = m13->self->_13;
HXDLIN( 330)																	b23 = m13->self->_23;
HXDLIN( 330)																	b33 = m13->self->_33;
HXDLIN( 330)																	_this20->self->_03 = ((((a007 * b015) + (a017 * b14)) + (a027 * b23)) + (a037 * b33));
HXDLIN( 330)																	_this20->self->_13 = ((((a107 * b015) + (a117 * b14)) + (a127 * b23)) + (a137 * b33));
HXDLIN( 330)																	_this20->self->_23 = ((((a207 * b015) + (a217 * b14)) + (a227 * b23)) + (a237 * b33));
HXDLIN( 330)																	_this20->self->_33 = ((((a307 * b015) + (a317 * b14)) + (a327 * b23)) + (a337 * b33));
            																}
HXLINE( 331)																{
HXLINE( 331)																	 ::iron::math::Mat4 _this21 = ::iron::object::Uniforms_obj::helpMat;
HXDLIN( 331)																	 ::iron::math::Mat4 m14 = camera->P;
HXDLIN( 331)																	float a008 = _this21->self->_00;
HXDLIN( 331)																	float a018 = _this21->self->_01;
HXDLIN( 331)																	float a028 = _this21->self->_02;
HXDLIN( 331)																	float a038 = _this21->self->_03;
HXDLIN( 331)																	float a108 = _this21->self->_10;
HXDLIN( 331)																	float a118 = _this21->self->_11;
HXDLIN( 331)																	float a128 = _this21->self->_12;
HXDLIN( 331)																	float a138 = _this21->self->_13;
HXDLIN( 331)																	float a208 = _this21->self->_20;
HXDLIN( 331)																	float a218 = _this21->self->_21;
HXDLIN( 331)																	float a228 = _this21->self->_22;
HXDLIN( 331)																	float a238 = _this21->self->_23;
HXDLIN( 331)																	float a308 = _this21->self->_30;
HXDLIN( 331)																	float a318 = _this21->self->_31;
HXDLIN( 331)																	float a328 = _this21->self->_32;
HXDLIN( 331)																	float a338 = _this21->self->_33;
HXDLIN( 331)																	float b016 = m14->self->_00;
HXDLIN( 331)																	float b15 = m14->self->_10;
HXDLIN( 331)																	float b24 = m14->self->_20;
HXDLIN( 331)																	float b34 = m14->self->_30;
HXDLIN( 331)																	_this21->self->_00 = ((((a008 * b016) + (a018 * b15)) + (a028 * b24)) + (a038 * b34));
HXDLIN( 331)																	_this21->self->_10 = ((((a108 * b016) + (a118 * b15)) + (a128 * b24)) + (a138 * b34));
HXDLIN( 331)																	_this21->self->_20 = ((((a208 * b016) + (a218 * b15)) + (a228 * b24)) + (a238 * b34));
HXDLIN( 331)																	_this21->self->_30 = ((((a308 * b016) + (a318 * b15)) + (a328 * b24)) + (a338 * b34));
HXDLIN( 331)																	b016 = m14->self->_01;
HXDLIN( 331)																	b15 = m14->self->_11;
HXDLIN( 331)																	b24 = m14->self->_21;
HXDLIN( 331)																	b34 = m14->self->_31;
HXDLIN( 331)																	_this21->self->_01 = ((((a008 * b016) + (a018 * b15)) + (a028 * b24)) + (a038 * b34));
HXDLIN( 331)																	_this21->self->_11 = ((((a108 * b016) + (a118 * b15)) + (a128 * b24)) + (a138 * b34));
HXDLIN( 331)																	_this21->self->_21 = ((((a208 * b016) + (a218 * b15)) + (a228 * b24)) + (a238 * b34));
HXDLIN( 331)																	_this21->self->_31 = ((((a308 * b016) + (a318 * b15)) + (a328 * b24)) + (a338 * b34));
HXDLIN( 331)																	b016 = m14->self->_02;
HXDLIN( 331)																	b15 = m14->self->_12;
HXDLIN( 331)																	b24 = m14->self->_22;
HXDLIN( 331)																	b34 = m14->self->_32;
HXDLIN( 331)																	_this21->self->_02 = ((((a008 * b016) + (a018 * b15)) + (a028 * b24)) + (a038 * b34));
HXDLIN( 331)																	_this21->self->_12 = ((((a108 * b016) + (a118 * b15)) + (a128 * b24)) + (a138 * b34));
HXDLIN( 331)																	_this21->self->_22 = ((((a208 * b016) + (a218 * b15)) + (a228 * b24)) + (a238 * b34));
HXDLIN( 331)																	_this21->self->_32 = ((((a308 * b016) + (a318 * b15)) + (a328 * b24)) + (a338 * b34));
HXDLIN( 331)																	b016 = m14->self->_03;
HXDLIN( 331)																	b15 = m14->self->_13;
HXDLIN( 331)																	b24 = m14->self->_23;
HXDLIN( 331)																	b34 = m14->self->_33;
HXDLIN( 331)																	_this21->self->_03 = ((((a008 * b016) + (a018 * b15)) + (a028 * b24)) + (a038 * b34));
HXDLIN( 331)																	_this21->self->_13 = ((((a108 * b016) + (a118 * b15)) + (a128 * b24)) + (a138 * b34));
HXDLIN( 331)																	_this21->self->_23 = ((((a208 * b016) + (a218 * b15)) + (a228 * b24)) + (a238 * b34));
HXDLIN( 331)																	_this21->self->_33 = ((((a308 * b016) + (a318 * b15)) + (a328 * b24)) + (a338 * b34));
            																}
HXLINE( 332)																m = ::iron::object::Uniforms_obj::helpMat;
            															}
            														}
            														else {
HXLINE( 335)															if ((c->link == HX_("_skydomeMatrix",a6,4a,80,3e))) {
HXLINE( 336)																 ::iron::object::Transform tr1 = camera->transform;
HXLINE( 338)																{
HXLINE( 338)																	 ::iron::math::Vec4 _this22 = ::iron::object::Uniforms_obj::helpVec;
HXDLIN( 338)																	_this22->x = tr1->world->self->_30;
HXDLIN( 338)																	_this22->y = tr1->world->self->_31;
HXDLIN( 338)																	_this22->z = ( (float)((tr1->world->self->_32 - ((Float)3.5))) );
HXDLIN( 338)																	_this22->w = ( (float)(((Float)1.0)) );
            																}
HXLINE( 339)																Float bounds = (camera->data->raw->far_plane * ((Float)0.95));
HXLINE( 340)																{
HXLINE( 340)																	 ::iron::math::Vec4 _this23 = ::iron::object::Uniforms_obj::helpVec2;
HXDLIN( 340)																	_this23->x = ( (float)(bounds) );
HXDLIN( 340)																	_this23->y = ( (float)(bounds) );
HXDLIN( 340)																	_this23->z = ( (float)(bounds) );
HXDLIN( 340)																	_this23->w = ( (float)(((Float)1.0)) );
            																}
HXLINE( 341)																{
HXLINE( 341)																	 ::iron::math::Mat4 _this24 = ::iron::object::Uniforms_obj::helpMat;
HXDLIN( 341)																	 ::iron::math::Vec4 loc2 = ::iron::object::Uniforms_obj::helpVec;
HXDLIN( 341)																	 ::iron::math::Quat quat2 = ::iron::object::Uniforms_obj::helpQuat;
HXDLIN( 341)																	 ::iron::math::Vec4 sc2 = ::iron::object::Uniforms_obj::helpVec2;
HXDLIN( 341)																	{
HXLINE( 341)																		float x5 = quat2->x;
HXDLIN( 341)																		float y5 = quat2->y;
HXDLIN( 341)																		float z5 = quat2->z;
HXDLIN( 341)																		float w2 = quat2->w;
HXDLIN( 341)																		float x22 = (x5 + x5);
HXDLIN( 341)																		float y22 = (y5 + y5);
HXDLIN( 341)																		float z22 = (z5 + z5);
HXDLIN( 341)																		float xx2 = (x5 * x22);
HXDLIN( 341)																		float xy2 = (x5 * y22);
HXDLIN( 341)																		float xz2 = (x5 * z22);
HXDLIN( 341)																		float yy2 = (y5 * y22);
HXDLIN( 341)																		float yz2 = (y5 * z22);
HXDLIN( 341)																		float zz2 = (z5 * z22);
HXDLIN( 341)																		float wx2 = (w2 * x22);
HXDLIN( 341)																		float wy2 = (w2 * y22);
HXDLIN( 341)																		float wz2 = (w2 * z22);
HXDLIN( 341)																		_this24->self->_00 = ( (float)((((Float)1.0) - (yy2 + zz2))) );
HXDLIN( 341)																		_this24->self->_10 = (xy2 - wz2);
HXDLIN( 341)																		_this24->self->_20 = (xz2 + wy2);
HXDLIN( 341)																		_this24->self->_01 = (xy2 + wz2);
HXDLIN( 341)																		_this24->self->_11 = ( (float)((((Float)1.0) - (xx2 + zz2))) );
HXDLIN( 341)																		_this24->self->_21 = (yz2 - wx2);
HXDLIN( 341)																		_this24->self->_02 = (xz2 - wy2);
HXDLIN( 341)																		_this24->self->_12 = (yz2 + wx2);
HXDLIN( 341)																		_this24->self->_22 = ( (float)((((Float)1.0) - (xx2 + yy2))) );
HXDLIN( 341)																		_this24->self->_03 = ( (float)(((Float)0.0)) );
HXDLIN( 341)																		_this24->self->_13 = ( (float)(((Float)0.0)) );
HXDLIN( 341)																		_this24->self->_23 = ( (float)(((Float)0.0)) );
HXDLIN( 341)																		_this24->self->_30 = ( (float)(((Float)0.0)) );
HXDLIN( 341)																		_this24->self->_31 = ( (float)(((Float)0.0)) );
HXDLIN( 341)																		_this24->self->_32 = ( (float)(((Float)0.0)) );
HXDLIN( 341)																		_this24->self->_33 = ( (float)(((Float)1.0)) );
            																	}
HXDLIN( 341)																	{
HXLINE( 341)																		float x6 = sc2->x;
HXDLIN( 341)																		float y6 = sc2->y;
HXDLIN( 341)																		float z6 = sc2->z;
HXDLIN( 341)																		{
HXLINE( 341)																			 ::iron::math::Mat4 _g24 = _this24;
HXDLIN( 341)																			_g24->self->_00 = (_g24->self->_00 * x6);
            																		}
HXDLIN( 341)																		{
HXLINE( 341)																			 ::iron::math::Mat4 _g25 = _this24;
HXDLIN( 341)																			_g25->self->_01 = (_g25->self->_01 * x6);
            																		}
HXDLIN( 341)																		{
HXLINE( 341)																			 ::iron::math::Mat4 _g26 = _this24;
HXDLIN( 341)																			_g26->self->_02 = (_g26->self->_02 * x6);
            																		}
HXDLIN( 341)																		{
HXLINE( 341)																			 ::iron::math::Mat4 _g27 = _this24;
HXDLIN( 341)																			_g27->self->_03 = (_g27->self->_03 * x6);
            																		}
HXDLIN( 341)																		{
HXLINE( 341)																			 ::iron::math::Mat4 _g28 = _this24;
HXDLIN( 341)																			_g28->self->_10 = (_g28->self->_10 * y6);
            																		}
HXDLIN( 341)																		{
HXLINE( 341)																			 ::iron::math::Mat4 _g29 = _this24;
HXDLIN( 341)																			_g29->self->_11 = (_g29->self->_11 * y6);
            																		}
HXDLIN( 341)																		{
HXLINE( 341)																			 ::iron::math::Mat4 _g30 = _this24;
HXDLIN( 341)																			_g30->self->_12 = (_g30->self->_12 * y6);
            																		}
HXDLIN( 341)																		{
HXLINE( 341)																			 ::iron::math::Mat4 _g31 = _this24;
HXDLIN( 341)																			_g31->self->_13 = (_g31->self->_13 * y6);
            																		}
HXDLIN( 341)																		{
HXLINE( 341)																			 ::iron::math::Mat4 _g32 = _this24;
HXDLIN( 341)																			_g32->self->_20 = (_g32->self->_20 * z6);
            																		}
HXDLIN( 341)																		{
HXLINE( 341)																			 ::iron::math::Mat4 _g33 = _this24;
HXDLIN( 341)																			_g33->self->_21 = (_g33->self->_21 * z6);
            																		}
HXDLIN( 341)																		{
HXLINE( 341)																			 ::iron::math::Mat4 _g34 = _this24;
HXDLIN( 341)																			_g34->self->_22 = (_g34->self->_22 * z6);
            																		}
HXDLIN( 341)																		{
HXLINE( 341)																			 ::iron::math::Mat4 _g35 = _this24;
HXDLIN( 341)																			_g35->self->_23 = (_g35->self->_23 * z6);
            																		}
            																	}
HXDLIN( 341)																	{
HXLINE( 341)																		_this24->self->_30 = loc2->x;
HXDLIN( 341)																		_this24->self->_31 = loc2->y;
HXDLIN( 341)																		_this24->self->_32 = loc2->z;
            																	}
            																}
HXLINE( 342)																{
HXLINE( 342)																	 ::iron::math::Mat4 _this25 = ::iron::object::Uniforms_obj::helpMat;
HXDLIN( 342)																	 ::iron::math::Mat4 m15 = camera->V;
HXDLIN( 342)																	float a009 = _this25->self->_00;
HXDLIN( 342)																	float a019 = _this25->self->_01;
HXDLIN( 342)																	float a029 = _this25->self->_02;
HXDLIN( 342)																	float a039 = _this25->self->_03;
HXDLIN( 342)																	float a109 = _this25->self->_10;
HXDLIN( 342)																	float a119 = _this25->self->_11;
HXDLIN( 342)																	float a129 = _this25->self->_12;
HXDLIN( 342)																	float a139 = _this25->self->_13;
HXDLIN( 342)																	float a209 = _this25->self->_20;
HXDLIN( 342)																	float a219 = _this25->self->_21;
HXDLIN( 342)																	float a229 = _this25->self->_22;
HXDLIN( 342)																	float a239 = _this25->self->_23;
HXDLIN( 342)																	float a309 = _this25->self->_30;
HXDLIN( 342)																	float a319 = _this25->self->_31;
HXDLIN( 342)																	float a329 = _this25->self->_32;
HXDLIN( 342)																	float a339 = _this25->self->_33;
HXDLIN( 342)																	float b017 = m15->self->_00;
HXDLIN( 342)																	float b16 = m15->self->_10;
HXDLIN( 342)																	float b25 = m15->self->_20;
HXDLIN( 342)																	float b35 = m15->self->_30;
HXDLIN( 342)																	_this25->self->_00 = ((((a009 * b017) + (a019 * b16)) + (a029 * b25)) + (a039 * b35));
HXDLIN( 342)																	_this25->self->_10 = ((((a109 * b017) + (a119 * b16)) + (a129 * b25)) + (a139 * b35));
HXDLIN( 342)																	_this25->self->_20 = ((((a209 * b017) + (a219 * b16)) + (a229 * b25)) + (a239 * b35));
HXDLIN( 342)																	_this25->self->_30 = ((((a309 * b017) + (a319 * b16)) + (a329 * b25)) + (a339 * b35));
HXDLIN( 342)																	b017 = m15->self->_01;
HXDLIN( 342)																	b16 = m15->self->_11;
HXDLIN( 342)																	b25 = m15->self->_21;
HXDLIN( 342)																	b35 = m15->self->_31;
HXDLIN( 342)																	_this25->self->_01 = ((((a009 * b017) + (a019 * b16)) + (a029 * b25)) + (a039 * b35));
HXDLIN( 342)																	_this25->self->_11 = ((((a109 * b017) + (a119 * b16)) + (a129 * b25)) + (a139 * b35));
HXDLIN( 342)																	_this25->self->_21 = ((((a209 * b017) + (a219 * b16)) + (a229 * b25)) + (a239 * b35));
HXDLIN( 342)																	_this25->self->_31 = ((((a309 * b017) + (a319 * b16)) + (a329 * b25)) + (a339 * b35));
HXDLIN( 342)																	b017 = m15->self->_02;
HXDLIN( 342)																	b16 = m15->self->_12;
HXDLIN( 342)																	b25 = m15->self->_22;
HXDLIN( 342)																	b35 = m15->self->_32;
HXDLIN( 342)																	_this25->self->_02 = ((((a009 * b017) + (a019 * b16)) + (a029 * b25)) + (a039 * b35));
HXDLIN( 342)																	_this25->self->_12 = ((((a109 * b017) + (a119 * b16)) + (a129 * b25)) + (a139 * b35));
HXDLIN( 342)																	_this25->self->_22 = ((((a209 * b017) + (a219 * b16)) + (a229 * b25)) + (a239 * b35));
HXDLIN( 342)																	_this25->self->_32 = ((((a309 * b017) + (a319 * b16)) + (a329 * b25)) + (a339 * b35));
HXDLIN( 342)																	b017 = m15->self->_03;
HXDLIN( 342)																	b16 = m15->self->_13;
HXDLIN( 342)																	b25 = m15->self->_23;
HXDLIN( 342)																	b35 = m15->self->_33;
HXDLIN( 342)																	_this25->self->_03 = ((((a009 * b017) + (a019 * b16)) + (a029 * b25)) + (a039 * b35));
HXDLIN( 342)																	_this25->self->_13 = ((((a109 * b017) + (a119 * b16)) + (a129 * b25)) + (a139 * b35));
HXDLIN( 342)																	_this25->self->_23 = ((((a209 * b017) + (a219 * b16)) + (a229 * b25)) + (a239 * b35));
HXDLIN( 342)																	_this25->self->_33 = ((((a309 * b017) + (a319 * b16)) + (a329 * b25)) + (a339 * b35));
            																}
HXLINE( 343)																{
HXLINE( 343)																	 ::iron::math::Mat4 _this26 = ::iron::object::Uniforms_obj::helpMat;
HXDLIN( 343)																	 ::iron::math::Mat4 m16 = camera->P;
HXDLIN( 343)																	float a0010 = _this26->self->_00;
HXDLIN( 343)																	float a0110 = _this26->self->_01;
HXDLIN( 343)																	float a0210 = _this26->self->_02;
HXDLIN( 343)																	float a0310 = _this26->self->_03;
HXDLIN( 343)																	float a1010 = _this26->self->_10;
HXDLIN( 343)																	float a1110 = _this26->self->_11;
HXDLIN( 343)																	float a1210 = _this26->self->_12;
HXDLIN( 343)																	float a1310 = _this26->self->_13;
HXDLIN( 343)																	float a2010 = _this26->self->_20;
HXDLIN( 343)																	float a2110 = _this26->self->_21;
HXDLIN( 343)																	float a2210 = _this26->self->_22;
HXDLIN( 343)																	float a2310 = _this26->self->_23;
HXDLIN( 343)																	float a3010 = _this26->self->_30;
HXDLIN( 343)																	float a3110 = _this26->self->_31;
HXDLIN( 343)																	float a3210 = _this26->self->_32;
HXDLIN( 343)																	float a3310 = _this26->self->_33;
HXDLIN( 343)																	float b018 = m16->self->_00;
HXDLIN( 343)																	float b17 = m16->self->_10;
HXDLIN( 343)																	float b26 = m16->self->_20;
HXDLIN( 343)																	float b36 = m16->self->_30;
HXDLIN( 343)																	_this26->self->_00 = ((((a0010 * b018) + (a0110 * b17)) + (a0210 * b26)) + (a0310 * b36));
HXDLIN( 343)																	_this26->self->_10 = ((((a1010 * b018) + (a1110 * b17)) + (a1210 * b26)) + (a1310 * b36));
HXDLIN( 343)																	_this26->self->_20 = ((((a2010 * b018) + (a2110 * b17)) + (a2210 * b26)) + (a2310 * b36));
HXDLIN( 343)																	_this26->self->_30 = ((((a3010 * b018) + (a3110 * b17)) + (a3210 * b26)) + (a3310 * b36));
HXDLIN( 343)																	b018 = m16->self->_01;
HXDLIN( 343)																	b17 = m16->self->_11;
HXDLIN( 343)																	b26 = m16->self->_21;
HXDLIN( 343)																	b36 = m16->self->_31;
HXDLIN( 343)																	_this26->self->_01 = ((((a0010 * b018) + (a0110 * b17)) + (a0210 * b26)) + (a0310 * b36));
HXDLIN( 343)																	_this26->self->_11 = ((((a1010 * b018) + (a1110 * b17)) + (a1210 * b26)) + (a1310 * b36));
HXDLIN( 343)																	_this26->self->_21 = ((((a2010 * b018) + (a2110 * b17)) + (a2210 * b26)) + (a2310 * b36));
HXDLIN( 343)																	_this26->self->_31 = ((((a3010 * b018) + (a3110 * b17)) + (a3210 * b26)) + (a3310 * b36));
HXDLIN( 343)																	b018 = m16->self->_02;
HXDLIN( 343)																	b17 = m16->self->_12;
HXDLIN( 343)																	b26 = m16->self->_22;
HXDLIN( 343)																	b36 = m16->self->_32;
HXDLIN( 343)																	_this26->self->_02 = ((((a0010 * b018) + (a0110 * b17)) + (a0210 * b26)) + (a0310 * b36));
HXDLIN( 343)																	_this26->self->_12 = ((((a1010 * b018) + (a1110 * b17)) + (a1210 * b26)) + (a1310 * b36));
HXDLIN( 343)																	_this26->self->_22 = ((((a2010 * b018) + (a2110 * b17)) + (a2210 * b26)) + (a2310 * b36));
HXDLIN( 343)																	_this26->self->_32 = ((((a3010 * b018) + (a3110 * b17)) + (a3210 * b26)) + (a3310 * b36));
HXDLIN( 343)																	b018 = m16->self->_03;
HXDLIN( 343)																	b17 = m16->self->_13;
HXDLIN( 343)																	b26 = m16->self->_23;
HXDLIN( 343)																	b36 = m16->self->_33;
HXDLIN( 343)																	_this26->self->_03 = ((((a0010 * b018) + (a0110 * b17)) + (a0210 * b26)) + (a0310 * b36));
HXDLIN( 343)																	_this26->self->_13 = ((((a1010 * b018) + (a1110 * b17)) + (a1210 * b26)) + (a1310 * b36));
HXDLIN( 343)																	_this26->self->_23 = ((((a2010 * b018) + (a2110 * b17)) + (a2210 * b26)) + (a2310 * b36));
HXDLIN( 343)																	_this26->self->_33 = ((((a3010 * b018) + (a3110 * b17)) + (a3210 * b26)) + (a3310 * b36));
            																}
HXLINE( 344)																m = ::iron::object::Uniforms_obj::helpMat;
            															}
            															else {
HXLINE( 346)																if ((c->link == HX_("_lightViewMatrix",7d,b5,e3,bc))) {
HXLINE( 347)																	if (hx::IsNotNull( light )) {
HXLINE( 351)																		m = light->V;
            																	}
            																}
            																else {
HXLINE( 355)																	if ((c->link == HX_("_lightProjectionMatrix",67,1a,b2,0e))) {
HXLINE( 356)																		if (hx::IsNotNull( light )) {
HXLINE( 356)																			m = light->P;
            																		}
            																	}
            																}
            															}
            														}
            													}
            												}
            											}
            										}
            									}
            								}
            							}
            						}
            					}
            				}
            			}
HXLINE( 364)			if (hx::IsNotNull( m )) {
HXLINE( 365)				::kha::graphics4::Graphics_obj::setMatrix(g,location,m->self);
HXLINE( 366)				return true;
            			}
            		}
            		else {
HXLINE( 374)			if ((c->type == HX_("vec4",60,27,4c,4e))) {
HXLINE( 375)				 ::iron::math::Vec4 v = null();
HXLINE( 376)				{
HXLINE( 376)					 ::iron::math::Vec4 _this27 = ::iron::object::Uniforms_obj::helpVec;
HXDLIN( 376)					_this27->x = ( (float)(0) );
HXDLIN( 376)					_this27->y = ( (float)(0) );
HXDLIN( 376)					_this27->z = ( (float)(0) );
HXDLIN( 376)					_this27->w = ( (float)(((Float)1.0)) );
            				}
HXLINE( 384)				if (hx::IsNotNull( v )) {
HXLINE( 385)					::kha::graphics4::Graphics_obj::setFloat4(g,location,v->x,v->y,v->z,v->w);
HXLINE( 386)					return true;
            				}
            			}
            			else {
HXLINE( 389)				if ((c->type == HX_("vec3",5f,27,4c,4e))) {
HXLINE( 390)					 ::iron::math::Vec4 v1 = null();
HXLINE( 391)					{
HXLINE( 391)						 ::iron::math::Vec4 _this28 = ::iron::object::Uniforms_obj::helpVec;
HXDLIN( 391)						_this28->x = ( (float)(0) );
HXDLIN( 391)						_this28->y = ( (float)(0) );
HXDLIN( 391)						_this28->z = ( (float)(0) );
HXDLIN( 391)						_this28->w = ( (float)(((Float)1.0)) );
            					}
HXLINE( 392)					if ((c->link == HX_("_lightPosition",e0,a3,d8,d4))) {
HXLINE( 393)						if (hx::IsNotNull( light )) {
HXLINE( 398)							{
HXLINE( 398)								 ::iron::math::Vec4 _this29 = ::iron::object::Uniforms_obj::helpVec;
HXDLIN( 398)								_this29->x = light->transform->world->self->_30;
HXDLIN( 398)								_this29->y = light->transform->world->self->_31;
HXDLIN( 398)								_this29->z = light->transform->world->self->_32;
HXDLIN( 398)								_this29->w = ( (float)(((Float)1.0)) );
            							}
HXLINE( 400)							v1 = ::iron::object::Uniforms_obj::helpVec;
            						}
            					}
            					else {
HXLINE( 403)						if ((c->link == HX_("_lightDirection",28,2f,a5,a8))) {
HXLINE( 404)							if (hx::IsNotNull( light )) {
HXLINE( 405)								::iron::object::Uniforms_obj::helpVec =  ::iron::math::Vec4_obj::__alloc( HX_CTX ,light->V->self->_02,light->V->self->_12,light->V->self->_22,null());
HXLINE( 406)								v1 = ::iron::object::Uniforms_obj::helpVec;
            							}
            						}
            						else {
HXLINE( 409)							if ((c->link == HX_("_lightColor",cc,55,ec,9d))) {
HXLINE( 410)								if (hx::IsNotNull( light )) {
HXLINE( 411)									float str = light->data->raw->strength;
HXLINE( 412)									{
HXLINE( 412)										 ::iron::math::Vec4 _this30 = ::iron::object::Uniforms_obj::helpVec;
HXDLIN( 412)										float x7 = (light->data->raw->color->self.get(0) * str);
HXDLIN( 412)										float y7 = (light->data->raw->color->self.get(1) * str);
HXDLIN( 412)										float z7 = (light->data->raw->color->self.get(2) * str);
HXDLIN( 412)										_this30->x = x7;
HXDLIN( 412)										_this30->y = y7;
HXDLIN( 412)										_this30->z = z7;
HXDLIN( 412)										_this30->w = ( (float)(((Float)1.0)) );
            									}
HXLINE( 413)									v1 = ::iron::object::Uniforms_obj::helpVec;
            								}
            							}
            							else {
HXLINE( 416)								if ((c->link == HX_("_lightArea0",6c,74,15,79))) {
HXLINE( 417)									bool _hx_tmp1;
HXDLIN( 417)									if (hx::IsNotNull( light )) {
HXLINE( 417)										_hx_tmp1 = hx::IsNotNull( light->data->raw->size );
            									}
            									else {
HXLINE( 417)										_hx_tmp1 = false;
            									}
HXDLIN( 417)									if (_hx_tmp1) {
HXLINE( 418)										float f22 = ( (float)(((Float)0.5)) );
HXLINE( 419)										float sx = ( (float)((light->data->raw->size * f22)) );
HXLINE( 420)										float sy = ( (float)((light->data->raw->size_y * f22)) );
HXLINE( 421)										{
HXLINE( 421)											 ::iron::math::Vec4 _this31 = ::iron::object::Uniforms_obj::helpVec;
HXDLIN( 421)											_this31->x = -(sx);
HXDLIN( 421)											_this31->y = sy;
HXDLIN( 421)											_this31->z = ( (float)(((Float)0.0)) );
HXDLIN( 421)											_this31->w = ( (float)(((Float)1.0)) );
            										}
HXLINE( 422)										{
HXLINE( 422)											 ::iron::math::Vec4 _this32 = ::iron::object::Uniforms_obj::helpVec;
HXDLIN( 422)											 ::iron::math::Mat4 m17 = light->transform->world;
HXDLIN( 422)											float x8 = _this32->x;
HXDLIN( 422)											float y8 = _this32->y;
HXDLIN( 422)											float z8 = _this32->z;
HXDLIN( 422)											float _hx_tmp2 = (m17->self->_00 * x8);
HXDLIN( 422)											float _hx_tmp3 = (_hx_tmp2 + (m17->self->_10 * y8));
HXDLIN( 422)											_this32->x = ((_hx_tmp3 + (m17->self->_20 * z8)) + m17->self->_30);
HXDLIN( 422)											float _hx_tmp4 = (m17->self->_01 * x8);
HXDLIN( 422)											float _hx_tmp5 = (_hx_tmp4 + (m17->self->_11 * y8));
HXDLIN( 422)											_this32->y = ((_hx_tmp5 + (m17->self->_21 * z8)) + m17->self->_31);
HXDLIN( 422)											float _hx_tmp6 = (m17->self->_02 * x8);
HXDLIN( 422)											float _hx_tmp7 = (_hx_tmp6 + (m17->self->_12 * y8));
HXDLIN( 422)											_this32->z = ((_hx_tmp7 + (m17->self->_22 * z8)) + m17->self->_32);
            										}
HXLINE( 423)										v1 = ::iron::object::Uniforms_obj::helpVec;
            									}
            								}
            								else {
HXLINE( 426)									if ((c->link == HX_("_lightArea1",6d,74,15,79))) {
HXLINE( 427)										bool _hx_tmp8;
HXDLIN( 427)										if (hx::IsNotNull( light )) {
HXLINE( 427)											_hx_tmp8 = hx::IsNotNull( light->data->raw->size );
            										}
            										else {
HXLINE( 427)											_hx_tmp8 = false;
            										}
HXDLIN( 427)										if (_hx_tmp8) {
HXLINE( 428)											float f23 = ( (float)(((Float)0.5)) );
HXLINE( 429)											float sx1 = ( (float)((light->data->raw->size * f23)) );
HXLINE( 430)											float sy1 = ( (float)((light->data->raw->size_y * f23)) );
HXLINE( 431)											{
HXLINE( 431)												 ::iron::math::Vec4 _this33 = ::iron::object::Uniforms_obj::helpVec;
HXDLIN( 431)												_this33->x = sx1;
HXDLIN( 431)												_this33->y = sy1;
HXDLIN( 431)												_this33->z = ( (float)(((Float)0.0)) );
HXDLIN( 431)												_this33->w = ( (float)(((Float)1.0)) );
            											}
HXLINE( 432)											{
HXLINE( 432)												 ::iron::math::Vec4 _this34 = ::iron::object::Uniforms_obj::helpVec;
HXDLIN( 432)												 ::iron::math::Mat4 m18 = light->transform->world;
HXDLIN( 432)												float x9 = _this34->x;
HXDLIN( 432)												float y9 = _this34->y;
HXDLIN( 432)												float z9 = _this34->z;
HXDLIN( 432)												float _hx_tmp9 = (m18->self->_00 * x9);
HXDLIN( 432)												float _hx_tmp10 = (_hx_tmp9 + (m18->self->_10 * y9));
HXDLIN( 432)												_this34->x = ((_hx_tmp10 + (m18->self->_20 * z9)) + m18->self->_30);
HXDLIN( 432)												float _hx_tmp11 = (m18->self->_01 * x9);
HXDLIN( 432)												float _hx_tmp12 = (_hx_tmp11 + (m18->self->_11 * y9));
HXDLIN( 432)												_this34->y = ((_hx_tmp12 + (m18->self->_21 * z9)) + m18->self->_31);
HXDLIN( 432)												float _hx_tmp13 = (m18->self->_02 * x9);
HXDLIN( 432)												float _hx_tmp14 = (_hx_tmp13 + (m18->self->_12 * y9));
HXDLIN( 432)												_this34->z = ((_hx_tmp14 + (m18->self->_22 * z9)) + m18->self->_32);
            											}
HXLINE( 433)											v1 = ::iron::object::Uniforms_obj::helpVec;
            										}
            									}
            									else {
HXLINE( 436)										if ((c->link == HX_("_lightArea2",6e,74,15,79))) {
HXLINE( 437)											bool _hx_tmp15;
HXDLIN( 437)											if (hx::IsNotNull( light )) {
HXLINE( 437)												_hx_tmp15 = hx::IsNotNull( light->data->raw->size );
            											}
            											else {
HXLINE( 437)												_hx_tmp15 = false;
            											}
HXDLIN( 437)											if (_hx_tmp15) {
HXLINE( 438)												float f24 = ( (float)(((Float)0.5)) );
HXLINE( 439)												float sx2 = ( (float)((light->data->raw->size * f24)) );
HXLINE( 440)												float sy2 = ( (float)((light->data->raw->size_y * f24)) );
HXLINE( 441)												{
HXLINE( 441)													 ::iron::math::Vec4 _this35 = ::iron::object::Uniforms_obj::helpVec;
HXDLIN( 441)													_this35->x = sx2;
HXDLIN( 441)													_this35->y = -(sy2);
HXDLIN( 441)													_this35->z = ( (float)(((Float)0.0)) );
HXDLIN( 441)													_this35->w = ( (float)(((Float)1.0)) );
            												}
HXLINE( 442)												{
HXLINE( 442)													 ::iron::math::Vec4 _this36 = ::iron::object::Uniforms_obj::helpVec;
HXDLIN( 442)													 ::iron::math::Mat4 m19 = light->transform->world;
HXDLIN( 442)													float x10 = _this36->x;
HXDLIN( 442)													float y10 = _this36->y;
HXDLIN( 442)													float z10 = _this36->z;
HXDLIN( 442)													float _hx_tmp16 = (m19->self->_00 * x10);
HXDLIN( 442)													float _hx_tmp17 = (_hx_tmp16 + (m19->self->_10 * y10));
HXDLIN( 442)													_this36->x = ((_hx_tmp17 + (m19->self->_20 * z10)) + m19->self->_30);
HXDLIN( 442)													float _hx_tmp18 = (m19->self->_01 * x10);
HXDLIN( 442)													float _hx_tmp19 = (_hx_tmp18 + (m19->self->_11 * y10));
HXDLIN( 442)													_this36->y = ((_hx_tmp19 + (m19->self->_21 * z10)) + m19->self->_31);
HXDLIN( 442)													float _hx_tmp20 = (m19->self->_02 * x10);
HXDLIN( 442)													float _hx_tmp21 = (_hx_tmp20 + (m19->self->_12 * y10));
HXDLIN( 442)													_this36->z = ((_hx_tmp21 + (m19->self->_22 * z10)) + m19->self->_32);
            												}
HXLINE( 443)												v1 = ::iron::object::Uniforms_obj::helpVec;
            											}
            										}
            										else {
HXLINE( 446)											if ((c->link == HX_("_lightArea3",6f,74,15,79))) {
HXLINE( 447)												bool _hx_tmp22;
HXDLIN( 447)												if (hx::IsNotNull( light )) {
HXLINE( 447)													_hx_tmp22 = hx::IsNotNull( light->data->raw->size );
            												}
            												else {
HXLINE( 447)													_hx_tmp22 = false;
            												}
HXDLIN( 447)												if (_hx_tmp22) {
HXLINE( 448)													float f25 = ( (float)(((Float)0.5)) );
HXLINE( 449)													float sx3 = ( (float)((light->data->raw->size * f25)) );
HXLINE( 450)													float sy3 = ( (float)((light->data->raw->size_y * f25)) );
HXLINE( 451)													{
HXLINE( 451)														 ::iron::math::Vec4 _this37 = ::iron::object::Uniforms_obj::helpVec;
HXDLIN( 451)														_this37->x = -(sx3);
HXDLIN( 451)														_this37->y = -(sy3);
HXDLIN( 451)														_this37->z = ( (float)(((Float)0.0)) );
HXDLIN( 451)														_this37->w = ( (float)(((Float)1.0)) );
            													}
HXLINE( 452)													{
HXLINE( 452)														 ::iron::math::Vec4 _this38 = ::iron::object::Uniforms_obj::helpVec;
HXDLIN( 452)														 ::iron::math::Mat4 m20 = light->transform->world;
HXDLIN( 452)														float x11 = _this38->x;
HXDLIN( 452)														float y11 = _this38->y;
HXDLIN( 452)														float z11 = _this38->z;
HXDLIN( 452)														float _hx_tmp23 = (m20->self->_00 * x11);
HXDLIN( 452)														float _hx_tmp24 = (_hx_tmp23 + (m20->self->_10 * y11));
HXDLIN( 452)														_this38->x = ((_hx_tmp24 + (m20->self->_20 * z11)) + m20->self->_30);
HXDLIN( 452)														float _hx_tmp25 = (m20->self->_01 * x11);
HXDLIN( 452)														float _hx_tmp26 = (_hx_tmp25 + (m20->self->_11 * y11));
HXDLIN( 452)														_this38->y = ((_hx_tmp26 + (m20->self->_21 * z11)) + m20->self->_31);
HXDLIN( 452)														float _hx_tmp27 = (m20->self->_02 * x11);
HXDLIN( 452)														float _hx_tmp28 = (_hx_tmp27 + (m20->self->_12 * y11));
HXDLIN( 452)														_this38->z = ((_hx_tmp28 + (m20->self->_22 * z11)) + m20->self->_32);
            													}
HXLINE( 453)													v1 = ::iron::object::Uniforms_obj::helpVec;
            												}
            											}
            											else {
HXLINE( 456)												if ((c->link == HX_("_cameraPosition",0d,99,e7,09))) {
HXLINE( 457)													{
HXLINE( 457)														 ::iron::math::Vec4 _this39 = ::iron::object::Uniforms_obj::helpVec;
HXDLIN( 457)														_this39->x = camera->transform->world->self->_30;
HXDLIN( 457)														_this39->y = camera->transform->world->self->_31;
HXDLIN( 457)														_this39->z = camera->transform->world->self->_32;
HXDLIN( 457)														_this39->w = ( (float)(((Float)1.0)) );
            													}
HXLINE( 458)													v1 = ::iron::object::Uniforms_obj::helpVec;
            												}
            												else {
HXLINE( 460)													if ((c->link == HX_("_cameraLook",c3,9c,5f,80))) {
HXLINE( 461)														::iron::object::Uniforms_obj::helpVec =  ::iron::math::Vec4_obj::__alloc( HX_CTX ,-(camera->transform->world->self->_20),-(camera->transform->world->self->_21),-(camera->transform->world->self->_22),null());
HXLINE( 462)														v1 = ::iron::object::Uniforms_obj::helpVec;
            													}
            													else {
HXLINE( 464)														if ((c->link == HX_("_cameraUp",bf,3b,bd,2f))) {
HXLINE( 465)															::iron::object::Uniforms_obj::helpVec =  ::iron::math::Vec4_obj::__alloc( HX_CTX ,camera->transform->world->self->_10,camera->transform->world->self->_11,camera->transform->world->self->_12,null());
HXLINE( 466)															v1 = ::iron::object::Uniforms_obj::helpVec;
            														}
            														else {
HXLINE( 468)															if ((c->link == HX_("_cameraRight",f8,ac,b3,43))) {
HXLINE( 469)																::iron::object::Uniforms_obj::helpVec =  ::iron::math::Vec4_obj::__alloc( HX_CTX ,camera->transform->world->self->_00,camera->transform->world->self->_01,camera->transform->world->self->_02,null());
HXLINE( 470)																v1 = ::iron::object::Uniforms_obj::helpVec;
            															}
            															else {
HXLINE( 472)																if ((c->link == HX_("_backgroundCol",33,3d,36,d0))) {
HXLINE( 473)																	if (hx::IsNotNull( camera->data->raw->clear_color )) {
HXLINE( 473)																		 ::iron::math::Vec4 _this40 = ::iron::object::Uniforms_obj::helpVec;
HXDLIN( 473)																		float x12 = camera->data->raw->clear_color->self.get(0);
HXDLIN( 473)																		float y12 = camera->data->raw->clear_color->self.get(1);
HXDLIN( 473)																		float z12 = camera->data->raw->clear_color->self.get(2);
HXDLIN( 473)																		_this40->x = x12;
HXDLIN( 473)																		_this40->y = y12;
HXDLIN( 473)																		_this40->z = z12;
HXDLIN( 473)																		_this40->w = ( (float)(((Float)1.0)) );
            																	}
HXLINE( 474)																	v1 = ::iron::object::Uniforms_obj::helpVec;
            																}
            																else {
HXLINE( 476)																	if ((c->link == HX_("_sunDirection",f2,99,26,a3))) {
HXLINE( 477)																		 ::iron::data::WorldData w3 = ::iron::Scene_obj::active->world;
HXLINE( 478)																		if (hx::IsNotNull( w3 )) {
HXLINE( 479)																			{
HXLINE( 479)																				 ::iron::math::Vec4 _this41 = ::iron::object::Uniforms_obj::helpVec;
HXDLIN( 479)																				float x13 = w3->raw->sun_direction->self.get(0);
HXDLIN( 479)																				float y13 = w3->raw->sun_direction->self.get(1);
HXDLIN( 479)																				float z13 = w3->raw->sun_direction->self.get(2);
HXDLIN( 479)																				_this41->x = x13;
HXDLIN( 479)																				_this41->y = y13;
HXDLIN( 479)																				_this41->z = z13;
HXDLIN( 479)																				_this41->w = ( (float)(((Float)1.0)) );
            																			}
HXLINE( 480)																			v1 = ::iron::object::Uniforms_obj::helpVec;
            																		}
            																	}
            																}
            															}
            														}
            													}
            												}
            											}
            										}
            									}
            								}
            							}
            						}
            					}
HXLINE( 484)					if (hx::IsNotNull( v1 )) {
HXLINE( 485)						::kha::graphics4::Graphics_obj::setFloat3(g,location,v1->x,v1->y,v1->z);
HXLINE( 486)						return true;
            					}
            				}
            				else {
HXLINE( 489)					if ((c->type == HX_("vec2",5e,27,4c,4e))) {
HXLINE( 490)						 ::iron::math::Vec4 v2 = null();
HXLINE( 491)						{
HXLINE( 491)							 ::iron::math::Vec4 _this42 = ::iron::object::Uniforms_obj::helpVec;
HXDLIN( 491)							_this42->x = ( (float)(0) );
HXDLIN( 491)							_this42->y = ( (float)(0) );
HXDLIN( 491)							_this42->z = ( (float)(0) );
HXDLIN( 491)							_this42->w = ( (float)(((Float)1.0)) );
            						}
HXLINE( 492)						if ((c->link == HX_("_vec2x",9b,92,3d,30))) {
HXLINE( 493)							v2 = ::iron::object::Uniforms_obj::helpVec;
HXLINE( 494)							v2->x = ( (float)(((Float)1.0)) );
HXLINE( 495)							v2->y = ( (float)(((Float)0.0)) );
            						}
            						else {
HXLINE( 497)							if ((c->link == HX_("_vec2xInv",16,85,b5,bb))) {
HXLINE( 498)								v2 = ::iron::object::Uniforms_obj::helpVec;
HXLINE( 499)								v2->x = ( (float)((((Float)1.0) / ( (Float)(::iron::RenderPath_obj::active->currentW) ))) );
HXLINE( 500)								v2->y = ( (float)(((Float)0.0)) );
            							}
            							else {
HXLINE( 502)								if ((c->link == HX_("_vec2x2",37,b5,a2,05))) {
HXLINE( 503)									v2 = ::iron::object::Uniforms_obj::helpVec;
HXLINE( 504)									v2->x = ( (float)(((Float)2.0)) );
HXLINE( 505)									v2->y = ( (float)(((Float)0.0)) );
            								}
            								else {
HXLINE( 507)									if ((c->link == HX_("_vec2x2Inv",fa,eb,ce,73))) {
HXLINE( 508)										v2 = ::iron::object::Uniforms_obj::helpVec;
HXLINE( 509)										v2->x = ( (float)((((Float)2.0) / ( (Float)(::iron::RenderPath_obj::active->currentW) ))) );
HXLINE( 510)										v2->y = ( (float)(((Float)0.0)) );
            									}
            									else {
HXLINE( 512)										if ((c->link == HX_("_vec2y",9c,92,3d,30))) {
HXLINE( 513)											v2 = ::iron::object::Uniforms_obj::helpVec;
HXLINE( 514)											v2->x = ( (float)(((Float)0.0)) );
HXLINE( 515)											v2->y = ( (float)(((Float)1.0)) );
            										}
            										else {
HXLINE( 517)											if ((c->link == HX_("_vec2yInv",b5,bb,5e,bc))) {
HXLINE( 518)												v2 = ::iron::object::Uniforms_obj::helpVec;
HXLINE( 519)												v2->x = ( (float)(((Float)0.0)) );
HXLINE( 520)												v2->y = ( (float)((((Float)1.0) / ( (Float)(::iron::RenderPath_obj::active->currentH) ))) );
            											}
            											else {
HXLINE( 522)												if ((c->link == HX_("_vec2y2",16,b6,a2,05))) {
HXLINE( 523)													v2 = ::iron::object::Uniforms_obj::helpVec;
HXLINE( 524)													v2->x = ( (float)(((Float)0.0)) );
HXLINE( 525)													v2->y = ( (float)(((Float)2.0)) );
            												}
            												else {
HXLINE( 527)													if ((c->link == HX_("_vec2y2Inv",7b,80,35,07))) {
HXLINE( 528)														v2 = ::iron::object::Uniforms_obj::helpVec;
HXLINE( 529)														v2->x = ( (float)(((Float)0.0)) );
HXLINE( 530)														v2->y = ( (float)((((Float)2.0) / ( (Float)(::iron::RenderPath_obj::active->currentH) ))) );
            													}
            													else {
HXLINE( 532)														if ((c->link == HX_("_vec2y3",17,b6,a2,05))) {
HXLINE( 533)															v2 = ::iron::object::Uniforms_obj::helpVec;
HXLINE( 534)															v2->x = ( (float)(((Float)0.0)) );
HXLINE( 535)															v2->y = ( (float)(((Float)3.0)) );
            														}
            														else {
HXLINE( 537)															if ((c->link == HX_("_vec2y3Inv",1a,b7,de,07))) {
HXLINE( 538)																v2 = ::iron::object::Uniforms_obj::helpVec;
HXLINE( 539)																v2->x = ( (float)(((Float)0.0)) );
HXLINE( 540)																v2->y = ( (float)((((Float)3.0) / ( (Float)(::iron::RenderPath_obj::active->currentH) ))) );
            															}
            															else {
HXLINE( 542)																if ((c->link == HX_("_windowSize",f0,e5,b3,a9))) {
HXLINE( 543)																	v2 = ::iron::object::Uniforms_obj::helpVec;
HXLINE( 544)																	v2->x = ( (float)(::kha::System_obj::windowWidth(null())) );
HXLINE( 545)																	v2->y = ( (float)(::kha::System_obj::windowHeight(null())) );
            																}
            																else {
HXLINE( 547)																	if ((c->link == HX_("_windowSizeInv",e1,34,e4,24))) {
HXLINE( 548)																		v2 = ::iron::object::Uniforms_obj::helpVec;
HXLINE( 549)																		v2->x = ( (float)((((Float)1.0) / ( (Float)(::kha::System_obj::windowWidth(null())) ))) );
HXLINE( 550)																		v2->y = ( (float)((((Float)1.0) / ( (Float)(::kha::System_obj::windowHeight(null())) ))) );
            																	}
            																	else {
HXLINE( 552)																		if ((c->link == HX_("_screenSize",6c,fb,13,97))) {
HXLINE( 553)																			v2 = ::iron::object::Uniforms_obj::helpVec;
HXLINE( 554)																			v2->x = ( (float)(::iron::RenderPath_obj::active->currentW) );
HXLINE( 555)																			v2->y = ( (float)(::iron::RenderPath_obj::active->currentH) );
            																		}
            																		else {
HXLINE( 557)																			if ((c->link == HX_("_screenSizeInv",e5,b4,f5,06))) {
HXLINE( 558)																				v2 = ::iron::object::Uniforms_obj::helpVec;
HXLINE( 559)																				v2->x = ( (float)((((Float)1.0) / ( (Float)(::iron::RenderPath_obj::active->currentW) ))) );
HXLINE( 560)																				v2->y = ( (float)((((Float)1.0) / ( (Float)(::iron::RenderPath_obj::active->currentH) ))) );
            																			}
            																			else {
HXLINE( 562)																				if ((c->link == HX_("_aspectRatio",14,8e,cd,63))) {
HXLINE( 563)																					v2 = ::iron::object::Uniforms_obj::helpVec;
HXLINE( 564)																					v2->x = ( (float)((( (Float)(::iron::RenderPath_obj::active->currentH) ) / ( (Float)(::iron::RenderPath_obj::active->currentW) ))) );
HXLINE( 565)																					v2->y = ( (float)((( (Float)(::iron::RenderPath_obj::active->currentW) ) / ( (Float)(::iron::RenderPath_obj::active->currentH) ))) );
HXLINE( 566)																					float _hx_tmp29;
HXDLIN( 566)																					if ((v2->x > ((Float)1.0))) {
HXLINE( 566)																						_hx_tmp29 = ( (float)(((Float)1.0)) );
            																					}
            																					else {
HXLINE( 566)																						_hx_tmp29 = v2->x;
            																					}
HXDLIN( 566)																					v2->x = _hx_tmp29;
HXLINE( 567)																					float _hx_tmp30;
HXDLIN( 567)																					if ((v2->y > ((Float)1.0))) {
HXLINE( 567)																						_hx_tmp30 = ( (float)(((Float)1.0)) );
            																					}
            																					else {
HXLINE( 567)																						_hx_tmp30 = v2->y;
            																					}
HXDLIN( 567)																					v2->y = _hx_tmp30;
            																				}
            																				else {
HXLINE( 569)																					if ((c->link == HX_("_cameraPlane",78,9f,dd,1e))) {
HXLINE( 570)																						v2 = ::iron::object::Uniforms_obj::helpVec;
HXLINE( 571)																						v2->x = camera->data->raw->near_plane;
HXLINE( 572)																						v2->y = camera->data->raw->far_plane;
            																					}
            																					else {
HXLINE( 574)																						if ((c->link == HX_("_cameraPlaneProj",35,af,e6,54))) {
HXLINE( 575)																							float _hx_near = camera->data->raw->near_plane;
HXLINE( 576)																							float _hx_far = camera->data->raw->far_plane;
HXLINE( 577)																							v2 = ::iron::object::Uniforms_obj::helpVec;
HXLINE( 578)																							v2->x = ( (float)((( (Float)(_hx_far) ) / ( (Float)((_hx_far - _hx_near)) ))) );
HXLINE( 579)																							v2->y = ( (float)((( (Float)((-(_hx_far) * _hx_near)) ) / ( (Float)((_hx_far - _hx_near)) ))) );
            																						}
            																						else {
HXLINE( 581)																							if ((c->link == HX_("_lightPlane",c5,e2,1d,18))) {
HXLINE( 582)																								if (hx::IsNotNull( light )) {
HXLINE( 583)																									v2 = ::iron::object::Uniforms_obj::helpVec;
HXLINE( 584)																									v2->x = ( (float)(light->data->raw->near_plane) );
HXLINE( 585)																									v2->y = ( (float)(light->data->raw->far_plane) );
            																								}
            																							}
            																							else {
HXLINE( 588)																								if ((c->link == HX_("_lightPlaneProj",02,1d,df,1c))) {
HXLINE( 589)																									if (hx::IsNotNull( light )) {
HXLINE( 590)																										float near1 = ( (float)(light->data->raw->near_plane) );
HXLINE( 591)																										float far1 = ( (float)(light->data->raw->far_plane) );
HXLINE( 592)																										float a = (far1 + near1);
HXLINE( 593)																										float b = (far1 - near1);
HXLINE( 594)																										float f26 = ( (float)(((Float)2.0)) );
HXLINE( 595)																										float c1 = ((f26 * far1) * near1);
HXLINE( 596)																										v2 = ::iron::object::Uniforms_obj::helpVec;
HXLINE( 597)																										v2->x = ( (float)((( (Float)(a) ) / ( (Float)(b) ))) );
HXLINE( 598)																										v2->y = ( (float)((( (Float)(c1) ) / ( (Float)(b) ))) );
            																									}
            																								}
            																								else {
HXLINE( 601)																									if ((c->link == HX_("_spotlightData",1f,4f,3a,15))) {
HXLINE( 603)																										if (hx::IsNotNull( light )) {
HXLINE( 604)																											v2 = ::iron::object::Uniforms_obj::helpVec;
HXLINE( 605)																											v2->x = ( (float)(light->data->raw->spot_size) );
HXLINE( 606)																											v2->y = (v2->x - light->data->raw->spot_blend);
            																										}
            																									}
            																								}
            																							}
            																						}
            																					}
            																				}
            																			}
            																		}
            																	}
            																}
            															}
            														}
            													}
            												}
            											}
            										}
            									}
            								}
            							}
            						}
HXLINE( 610)						if (hx::IsNotNull( v2 )) {
HXLINE( 611)							::kha::graphics4::Graphics_obj::setFloat2(g,location,v2->x,v2->y);
HXLINE( 612)							return true;
            						}
            					}
            					else {
HXLINE( 615)						if ((c->type == HX_("float",9c,c5,96,02))) {
HXLINE( 616)							 ::Dynamic f3 = null();
HXLINE( 617)							if ((c->link == HX_("_time",ec,e7,0d,00))) {
HXLINE( 618)								f3 = ::kha::Scheduler_obj::time();
            							}
            							else {
HXLINE( 620)								if ((c->link == HX_("_deltaTime",e6,b7,fe,50))) {
HXLINE( 621)									f3 = (((Float)0.016666666666666666) * ::iron::_hx_system::Time_obj::scale);
            								}
            								else {
HXLINE( 623)									if ((c->link == HX_("_lightRadius",c9,c7,4e,7b))) {
HXLINE( 624)										if (hx::IsNull( light )) {
HXLINE( 624)											f3 = ((Float)0.0);
            										}
            										else {
HXLINE( 624)											f3 = light->data->raw->far_plane;
            										}
            									}
            									else {
HXLINE( 626)										if ((c->link == HX_("_lightShadowsBias",d5,11,84,5b))) {
HXLINE( 627)											if (hx::IsNull( light )) {
HXLINE( 627)												f3 = ((Float)0.0);
            											}
            											else {
HXLINE( 627)												f3 = light->data->raw->shadows_bias;
            											}
            										}
            										else {
HXLINE( 629)											if ((c->link == HX_("_lightSize",78,fc,13,21))) {
HXLINE( 630)												bool _hx_tmp31;
HXDLIN( 630)												if (hx::IsNotNull( light )) {
HXLINE( 630)													_hx_tmp31 = hx::IsNotNull( light->data->raw->light_size );
            												}
            												else {
HXLINE( 630)													_hx_tmp31 = false;
            												}
HXDLIN( 630)												if (_hx_tmp31) {
HXLINE( 630)													f3 = light->data->raw->light_size;
            												}
            											}
            											else {
HXLINE( 635)												if ((c->link == HX_("_envmapStrength",0f,37,7e,cb))) {
HXLINE( 636)													if (hx::IsNull( ::iron::Scene_obj::active->world )) {
HXLINE( 636)														f3 = ((Float)0.0);
            													}
            													else {
HXLINE( 636)														f3 = ::iron::Scene_obj::active->world->getGlobalProbe()->raw->strength;
            													}
            												}
            												else {
HXLINE( 638)													if ((c->link == HX_("_aspectRatioF",b2,c3,0e,f0))) {
HXLINE( 639)														f3 = (( (Float)(::iron::RenderPath_obj::active->currentW) ) / ( (Float)(::iron::RenderPath_obj::active->currentH) ));
            													}
            													else {
HXLINE( 641)														if ((c->link == HX_("_aspectRatioWindowF",a2,22,d7,88))) {
HXLINE( 642)															int f4 = ::kha::System_obj::windowWidth(null());
HXDLIN( 642)															f3 = (( (Float)(f4) ) / ( (Float)(::kha::System_obj::windowHeight(null())) ));
            														}
            														else {
HXLINE( 644)															if ((c->link == HX_("_frameScale",3c,d0,7e,2e))) {
HXLINE( 645)																Float f5 = ::iron::RenderPath_obj::active->frameTime;
HXDLIN( 645)																f3 = (f5 / (((Float)0.016666666666666666) * ::iron::_hx_system::Time_obj::scale));
            															}
            														}
            													}
            												}
            											}
            										}
            									}
            								}
            							}
HXLINE( 659)							if (hx::IsNotNull( f3 )) {
HXLINE( 660)								::kha::graphics4::Graphics_obj::setFloat(g,location,f3);
HXLINE( 661)								return true;
            							}
            						}
            						else {
HXLINE( 664)							if ((c->type == HX_("floats",57,23,56,41))) {
HXLINE( 665)								 ::kha::arrays::Float32ArrayPrivate fa = null();
HXLINE( 666)								if ((c->link == HX_("_envmapIrradiance",ba,60,55,9c))) {
HXLINE( 667)									if (hx::IsNull( ::iron::Scene_obj::active->world )) {
HXLINE( 667)										fa = ::iron::data::WorldData_obj::getEmptyIrradiance();
            									}
            									else {
HXLINE( 667)										fa = ::iron::Scene_obj::active->world->getSHIrradiance();
            									}
            								}
HXLINE( 675)								if (hx::IsNotNull( fa )) {
HXLINE( 676)									::kha::graphics4::Graphics_obj::setFloats(g,location,fa);
HXLINE( 677)									return true;
            								}
            							}
            							else {
HXLINE( 680)								if ((c->type == HX_("int",ef,0c,50,00))) {
HXLINE( 681)									 ::Dynamic i = null();
HXLINE( 682)									if ((c->link == HX_("_lightType",71,4e,c9,21))) {
HXLINE( 683)										if (hx::IsNull( light )) {
HXLINE( 683)											i = 0;
            										}
            										else {
HXLINE( 683)											 ::Dynamic i1;
HXDLIN( 683)											::String _hx_switch_0 = light->data->raw->type;
            											if (  (_hx_switch_0==HX_("area",8d,8b,74,40)) ){
HXLINE( 683)												i1 = 3;
HXDLIN( 683)												goto _hx_goto_10;
            											}
            											if (  (_hx_switch_0==HX_("point",50,b4,8f,c6)) ){
HXLINE( 683)												i1 = 1;
HXDLIN( 683)												goto _hx_goto_10;
            											}
            											if (  (_hx_switch_0==HX_("spot",02,e7,58,4c)) ){
HXLINE( 683)												i1 = 2;
HXDLIN( 683)												goto _hx_goto_10;
            											}
            											if (  (_hx_switch_0==HX_("sun",8c,a9,57,00)) ){
HXLINE( 683)												i1 = 0;
HXDLIN( 683)												goto _hx_goto_10;
            											}
            											/* default */{
HXLINE( 683)												i1 = 0;
            											}
            											_hx_goto_10:;
HXDLIN( 683)											i = ( (int)(i1) );
            										}
            									}
            									else {
HXLINE( 685)										if ((c->link == HX_("_lightIndex",7b,7f,a4,11))) {
HXLINE( 686)											i = ::iron::RenderPath_obj::active->currentLightIndex;
            										}
            										else {
HXLINE( 688)											if ((c->link == HX_("_lightCastShadow",f6,f2,2b,e5))) {
HXLINE( 689)												bool _hx_tmp32;
HXDLIN( 689)												if (hx::IsNotNull( light )) {
HXLINE( 689)													_hx_tmp32 = ( (bool)(light->data->raw->cast_shadow) );
            												}
            												else {
HXLINE( 689)													_hx_tmp32 = false;
            												}
HXDLIN( 689)												if (_hx_tmp32) {
HXLINE( 690)													if (( (bool)(light->data->raw->shadowmap_cube) )) {
HXLINE( 690)														i = 2;
            													}
            													else {
HXLINE( 690)														i = 1;
            													}
            												}
            												else {
HXLINE( 692)													i = 0;
            												}
            											}
            											else {
HXLINE( 694)												if ((c->link == HX_("_envmapNumMipmaps",53,0c,70,88))) {
HXLINE( 695)													 ::iron::data::WorldData w4 = ::iron::Scene_obj::active->world;
HXLINE( 696)													if (hx::IsNotNull( w4 )) {
HXLINE( 696)														i = ((w4->getGlobalProbe()->raw->radiance_mipmaps + 1) - 2);
            													}
            													else {
HXLINE( 696)														i = 1;
            													}
            												}
            											}
            										}
            									}
HXLINE( 699)									if (hx::IsNotNull( i )) {
HXLINE( 700)										::kha::graphics4::Graphics_obj::setInt(g,location,i);
HXLINE( 701)										return true;
            									}
            								}
            							}
            						}
            					}
            				}
            			}
            		}
HXLINE( 704)		return false;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC5(Uniforms_obj,setContextConstant,return )

void Uniforms_obj::setObjectConstant(::Dynamic g, ::iron::object::Object object, ::iron::object::CameraObject camera, ::iron::object::LightObject light,::Dynamic location, ::iron::data::TShaderConstant c){
            	HX_STACKFRAME(&_hx_pos_ed3d8b453cef9f5d_708_setObjectConstant)
HXLINE( 709)		if (hx::IsNull( c->link )) {
HXLINE( 709)			return;
            		}
HXLINE( 711)		if ((c->type == HX_("mat4",94,41,56,48))) {
HXLINE( 712)			 ::iron::math::Mat4 m = null();
HXLINE( 713)			if ((c->link == HX_("_worldMatrix",34,78,3f,ed))) {
HXLINE( 717)				m = object->transform->world;
            			}
            			else {
HXLINE( 720)				if ((c->link == HX_("_inverseWorldMatrix",82,d8,aa,a9))) {
HXLINE( 724)					{
HXLINE( 724)						 ::iron::math::Mat4 _this = ::iron::object::Uniforms_obj::helpMat;
HXDLIN( 724)						 ::iron::math::Mat4 m1 = object->transform->world;
HXDLIN( 724)						float a00 = m1->self->_00;
HXDLIN( 724)						float a01 = m1->self->_01;
HXDLIN( 724)						float a02 = m1->self->_02;
HXDLIN( 724)						float a03 = m1->self->_03;
HXDLIN( 724)						float a10 = m1->self->_10;
HXDLIN( 724)						float a11 = m1->self->_11;
HXDLIN( 724)						float a12 = m1->self->_12;
HXDLIN( 724)						float a13 = m1->self->_13;
HXDLIN( 724)						float a20 = m1->self->_20;
HXDLIN( 724)						float a21 = m1->self->_21;
HXDLIN( 724)						float a22 = m1->self->_22;
HXDLIN( 724)						float a23 = m1->self->_23;
HXDLIN( 724)						float a30 = m1->self->_30;
HXDLIN( 724)						float a31 = m1->self->_31;
HXDLIN( 724)						float a32 = m1->self->_32;
HXDLIN( 724)						float a33 = m1->self->_33;
HXDLIN( 724)						float b00 = ((a00 * a11) - (a01 * a10));
HXDLIN( 724)						float b01 = ((a00 * a12) - (a02 * a10));
HXDLIN( 724)						float b02 = ((a00 * a13) - (a03 * a10));
HXDLIN( 724)						float b03 = ((a01 * a12) - (a02 * a11));
HXDLIN( 724)						float b04 = ((a01 * a13) - (a03 * a11));
HXDLIN( 724)						float b05 = ((a02 * a13) - (a03 * a12));
HXDLIN( 724)						float b06 = ((a20 * a31) - (a21 * a30));
HXDLIN( 724)						float b07 = ((a20 * a32) - (a22 * a30));
HXDLIN( 724)						float b08 = ((a20 * a33) - (a23 * a30));
HXDLIN( 724)						float b09 = ((a21 * a32) - (a22 * a31));
HXDLIN( 724)						float b10 = ((a21 * a33) - (a23 * a31));
HXDLIN( 724)						float b11 = ((a22 * a33) - (a23 * a32));
HXDLIN( 724)						float det = ((((((b00 * b11) - (b01 * b10)) + (b02 * b09)) + (b03 * b08)) - (b04 * b07)) + (b05 * b06));
HXDLIN( 724)						if ((det == ((Float)0.0))) {
HXLINE( 724)							_this->self->_00 = ( (float)(((Float)1.0)) );
HXDLIN( 724)							_this->self->_01 = ( (float)(((Float)0.0)) );
HXDLIN( 724)							_this->self->_02 = ( (float)(((Float)0.0)) );
HXDLIN( 724)							_this->self->_03 = ( (float)(((Float)0.0)) );
HXDLIN( 724)							_this->self->_10 = ( (float)(((Float)0.0)) );
HXDLIN( 724)							_this->self->_11 = ( (float)(((Float)1.0)) );
HXDLIN( 724)							_this->self->_12 = ( (float)(((Float)0.0)) );
HXDLIN( 724)							_this->self->_13 = ( (float)(((Float)0.0)) );
HXDLIN( 724)							_this->self->_20 = ( (float)(((Float)0.0)) );
HXDLIN( 724)							_this->self->_21 = ( (float)(((Float)0.0)) );
HXDLIN( 724)							_this->self->_22 = ( (float)(((Float)1.0)) );
HXDLIN( 724)							_this->self->_23 = ( (float)(((Float)0.0)) );
HXDLIN( 724)							_this->self->_30 = ( (float)(((Float)0.0)) );
HXDLIN( 724)							_this->self->_31 = ( (float)(((Float)0.0)) );
HXDLIN( 724)							_this->self->_32 = ( (float)(((Float)0.0)) );
HXDLIN( 724)							_this->self->_33 = ( (float)(((Float)1.0)) );
            						}
            						else {
HXLINE( 724)							det = ( (float)((((Float)1.0) / ( (Float)(det) ))) );
HXDLIN( 724)							_this->self->_00 = ((((a11 * b11) - (a12 * b10)) + (a13 * b09)) * det);
HXDLIN( 724)							_this->self->_01 = ((((a02 * b10) - (a01 * b11)) - (a03 * b09)) * det);
HXDLIN( 724)							_this->self->_02 = ((((a31 * b05) - (a32 * b04)) + (a33 * b03)) * det);
HXDLIN( 724)							_this->self->_03 = ((((a22 * b04) - (a21 * b05)) - (a23 * b03)) * det);
HXDLIN( 724)							_this->self->_10 = ((((a12 * b08) - (a10 * b11)) - (a13 * b07)) * det);
HXDLIN( 724)							_this->self->_11 = ((((a00 * b11) - (a02 * b08)) + (a03 * b07)) * det);
HXDLIN( 724)							_this->self->_12 = ((((a32 * b02) - (a30 * b05)) - (a33 * b01)) * det);
HXDLIN( 724)							_this->self->_13 = ((((a20 * b05) - (a22 * b02)) + (a23 * b01)) * det);
HXDLIN( 724)							_this->self->_20 = ((((a10 * b10) - (a11 * b08)) + (a13 * b06)) * det);
HXDLIN( 724)							_this->self->_21 = ((((a01 * b08) - (a00 * b10)) - (a03 * b06)) * det);
HXDLIN( 724)							_this->self->_22 = ((((a30 * b04) - (a31 * b02)) + (a33 * b00)) * det);
HXDLIN( 724)							_this->self->_23 = ((((a21 * b02) - (a20 * b04)) - (a23 * b00)) * det);
HXDLIN( 724)							_this->self->_30 = ((((a11 * b07) - (a10 * b09)) - (a12 * b06)) * det);
HXDLIN( 724)							_this->self->_31 = ((((a00 * b09) - (a01 * b07)) + (a02 * b06)) * det);
HXDLIN( 724)							_this->self->_32 = ((((a31 * b01) - (a30 * b03)) - (a32 * b00)) * det);
HXDLIN( 724)							_this->self->_33 = ((((a20 * b03) - (a21 * b01)) + (a22 * b00)) * det);
            						}
            					}
HXLINE( 726)					m = ::iron::object::Uniforms_obj::helpMat;
            				}
            				else {
HXLINE( 728)					if ((c->link == HX_("_worldViewProjectionMatrix",e8,15,5b,d2))) {
HXLINE( 729)						{
HXLINE( 729)							 ::iron::math::Mat4 _this1 = ::iron::object::Uniforms_obj::helpMat;
HXDLIN( 729)							 ::iron::math::Mat4 m2 = object->transform->world;
HXDLIN( 729)							_this1->self->_00 = m2->self->_00;
HXDLIN( 729)							_this1->self->_01 = m2->self->_01;
HXDLIN( 729)							_this1->self->_02 = m2->self->_02;
HXDLIN( 729)							_this1->self->_03 = m2->self->_03;
HXDLIN( 729)							_this1->self->_10 = m2->self->_10;
HXDLIN( 729)							_this1->self->_11 = m2->self->_11;
HXDLIN( 729)							_this1->self->_12 = m2->self->_12;
HXDLIN( 729)							_this1->self->_13 = m2->self->_13;
HXDLIN( 729)							_this1->self->_20 = m2->self->_20;
HXDLIN( 729)							_this1->self->_21 = m2->self->_21;
HXDLIN( 729)							_this1->self->_22 = m2->self->_22;
HXDLIN( 729)							_this1->self->_23 = m2->self->_23;
HXDLIN( 729)							_this1->self->_30 = m2->self->_30;
HXDLIN( 729)							_this1->self->_31 = m2->self->_31;
HXDLIN( 729)							_this1->self->_32 = m2->self->_32;
HXDLIN( 729)							_this1->self->_33 = m2->self->_33;
            						}
HXLINE( 730)						{
HXLINE( 730)							 ::iron::math::Mat4 _this2 = ::iron::object::Uniforms_obj::helpMat;
HXDLIN( 730)							 ::iron::math::Mat4 m3 = camera->V;
HXDLIN( 730)							float a001 = _this2->self->_00;
HXDLIN( 730)							float a011 = _this2->self->_01;
HXDLIN( 730)							float a021 = _this2->self->_02;
HXDLIN( 730)							float a031 = _this2->self->_03;
HXDLIN( 730)							float a101 = _this2->self->_10;
HXDLIN( 730)							float a111 = _this2->self->_11;
HXDLIN( 730)							float a121 = _this2->self->_12;
HXDLIN( 730)							float a131 = _this2->self->_13;
HXDLIN( 730)							float a201 = _this2->self->_20;
HXDLIN( 730)							float a211 = _this2->self->_21;
HXDLIN( 730)							float a221 = _this2->self->_22;
HXDLIN( 730)							float a231 = _this2->self->_23;
HXDLIN( 730)							float a301 = _this2->self->_30;
HXDLIN( 730)							float a311 = _this2->self->_31;
HXDLIN( 730)							float a321 = _this2->self->_32;
HXDLIN( 730)							float a331 = _this2->self->_33;
HXDLIN( 730)							float b0 = m3->self->_00;
HXDLIN( 730)							float b1 = m3->self->_10;
HXDLIN( 730)							float b2 = m3->self->_20;
HXDLIN( 730)							float b3 = m3->self->_30;
HXDLIN( 730)							_this2->self->_00 = ((((a001 * b0) + (a011 * b1)) + (a021 * b2)) + (a031 * b3));
HXDLIN( 730)							_this2->self->_10 = ((((a101 * b0) + (a111 * b1)) + (a121 * b2)) + (a131 * b3));
HXDLIN( 730)							_this2->self->_20 = ((((a201 * b0) + (a211 * b1)) + (a221 * b2)) + (a231 * b3));
HXDLIN( 730)							_this2->self->_30 = ((((a301 * b0) + (a311 * b1)) + (a321 * b2)) + (a331 * b3));
HXDLIN( 730)							b0 = m3->self->_01;
HXDLIN( 730)							b1 = m3->self->_11;
HXDLIN( 730)							b2 = m3->self->_21;
HXDLIN( 730)							b3 = m3->self->_31;
HXDLIN( 730)							_this2->self->_01 = ((((a001 * b0) + (a011 * b1)) + (a021 * b2)) + (a031 * b3));
HXDLIN( 730)							_this2->self->_11 = ((((a101 * b0) + (a111 * b1)) + (a121 * b2)) + (a131 * b3));
HXDLIN( 730)							_this2->self->_21 = ((((a201 * b0) + (a211 * b1)) + (a221 * b2)) + (a231 * b3));
HXDLIN( 730)							_this2->self->_31 = ((((a301 * b0) + (a311 * b1)) + (a321 * b2)) + (a331 * b3));
HXDLIN( 730)							b0 = m3->self->_02;
HXDLIN( 730)							b1 = m3->self->_12;
HXDLIN( 730)							b2 = m3->self->_22;
HXDLIN( 730)							b3 = m3->self->_32;
HXDLIN( 730)							_this2->self->_02 = ((((a001 * b0) + (a011 * b1)) + (a021 * b2)) + (a031 * b3));
HXDLIN( 730)							_this2->self->_12 = ((((a101 * b0) + (a111 * b1)) + (a121 * b2)) + (a131 * b3));
HXDLIN( 730)							_this2->self->_22 = ((((a201 * b0) + (a211 * b1)) + (a221 * b2)) + (a231 * b3));
HXDLIN( 730)							_this2->self->_32 = ((((a301 * b0) + (a311 * b1)) + (a321 * b2)) + (a331 * b3));
HXDLIN( 730)							b0 = m3->self->_03;
HXDLIN( 730)							b1 = m3->self->_13;
HXDLIN( 730)							b2 = m3->self->_23;
HXDLIN( 730)							b3 = m3->self->_33;
HXDLIN( 730)							_this2->self->_03 = ((((a001 * b0) + (a011 * b1)) + (a021 * b2)) + (a031 * b3));
HXDLIN( 730)							_this2->self->_13 = ((((a101 * b0) + (a111 * b1)) + (a121 * b2)) + (a131 * b3));
HXDLIN( 730)							_this2->self->_23 = ((((a201 * b0) + (a211 * b1)) + (a221 * b2)) + (a231 * b3));
HXDLIN( 730)							_this2->self->_33 = ((((a301 * b0) + (a311 * b1)) + (a321 * b2)) + (a331 * b3));
            						}
HXLINE( 731)						{
HXLINE( 731)							 ::iron::math::Mat4 _this3 = ::iron::object::Uniforms_obj::helpMat;
HXDLIN( 731)							 ::iron::math::Mat4 m4 = camera->P;
HXDLIN( 731)							float a002 = _this3->self->_00;
HXDLIN( 731)							float a012 = _this3->self->_01;
HXDLIN( 731)							float a022 = _this3->self->_02;
HXDLIN( 731)							float a032 = _this3->self->_03;
HXDLIN( 731)							float a102 = _this3->self->_10;
HXDLIN( 731)							float a112 = _this3->self->_11;
HXDLIN( 731)							float a122 = _this3->self->_12;
HXDLIN( 731)							float a132 = _this3->self->_13;
HXDLIN( 731)							float a202 = _this3->self->_20;
HXDLIN( 731)							float a212 = _this3->self->_21;
HXDLIN( 731)							float a222 = _this3->self->_22;
HXDLIN( 731)							float a232 = _this3->self->_23;
HXDLIN( 731)							float a302 = _this3->self->_30;
HXDLIN( 731)							float a312 = _this3->self->_31;
HXDLIN( 731)							float a322 = _this3->self->_32;
HXDLIN( 731)							float a332 = _this3->self->_33;
HXDLIN( 731)							float b010 = m4->self->_00;
HXDLIN( 731)							float b12 = m4->self->_10;
HXDLIN( 731)							float b21 = m4->self->_20;
HXDLIN( 731)							float b31 = m4->self->_30;
HXDLIN( 731)							_this3->self->_00 = ((((a002 * b010) + (a012 * b12)) + (a022 * b21)) + (a032 * b31));
HXDLIN( 731)							_this3->self->_10 = ((((a102 * b010) + (a112 * b12)) + (a122 * b21)) + (a132 * b31));
HXDLIN( 731)							_this3->self->_20 = ((((a202 * b010) + (a212 * b12)) + (a222 * b21)) + (a232 * b31));
HXDLIN( 731)							_this3->self->_30 = ((((a302 * b010) + (a312 * b12)) + (a322 * b21)) + (a332 * b31));
HXDLIN( 731)							b010 = m4->self->_01;
HXDLIN( 731)							b12 = m4->self->_11;
HXDLIN( 731)							b21 = m4->self->_21;
HXDLIN( 731)							b31 = m4->self->_31;
HXDLIN( 731)							_this3->self->_01 = ((((a002 * b010) + (a012 * b12)) + (a022 * b21)) + (a032 * b31));
HXDLIN( 731)							_this3->self->_11 = ((((a102 * b010) + (a112 * b12)) + (a122 * b21)) + (a132 * b31));
HXDLIN( 731)							_this3->self->_21 = ((((a202 * b010) + (a212 * b12)) + (a222 * b21)) + (a232 * b31));
HXDLIN( 731)							_this3->self->_31 = ((((a302 * b010) + (a312 * b12)) + (a322 * b21)) + (a332 * b31));
HXDLIN( 731)							b010 = m4->self->_02;
HXDLIN( 731)							b12 = m4->self->_12;
HXDLIN( 731)							b21 = m4->self->_22;
HXDLIN( 731)							b31 = m4->self->_32;
HXDLIN( 731)							_this3->self->_02 = ((((a002 * b010) + (a012 * b12)) + (a022 * b21)) + (a032 * b31));
HXDLIN( 731)							_this3->self->_12 = ((((a102 * b010) + (a112 * b12)) + (a122 * b21)) + (a132 * b31));
HXDLIN( 731)							_this3->self->_22 = ((((a202 * b010) + (a212 * b12)) + (a222 * b21)) + (a232 * b31));
HXDLIN( 731)							_this3->self->_32 = ((((a302 * b010) + (a312 * b12)) + (a322 * b21)) + (a332 * b31));
HXDLIN( 731)							b010 = m4->self->_03;
HXDLIN( 731)							b12 = m4->self->_13;
HXDLIN( 731)							b21 = m4->self->_23;
HXDLIN( 731)							b31 = m4->self->_33;
HXDLIN( 731)							_this3->self->_03 = ((((a002 * b010) + (a012 * b12)) + (a022 * b21)) + (a032 * b31));
HXDLIN( 731)							_this3->self->_13 = ((((a102 * b010) + (a112 * b12)) + (a122 * b21)) + (a132 * b31));
HXDLIN( 731)							_this3->self->_23 = ((((a202 * b010) + (a212 * b12)) + (a222 * b21)) + (a232 * b31));
HXDLIN( 731)							_this3->self->_33 = ((((a302 * b010) + (a312 * b12)) + (a322 * b21)) + (a332 * b31));
            						}
HXLINE( 732)						m = ::iron::object::Uniforms_obj::helpMat;
            					}
            					else {
HXLINE( 734)						if ((c->link == HX_("_worldViewProjectionMatrixSphere",15,97,57,6c))) {
HXLINE( 735)							{
HXLINE( 735)								 ::iron::math::Mat4 _this4 = ::iron::object::Uniforms_obj::helpMat;
HXDLIN( 735)								 ::iron::math::Mat4 m5 = object->transform->world;
HXDLIN( 735)								_this4->self->_00 = m5->self->_00;
HXDLIN( 735)								_this4->self->_01 = m5->self->_01;
HXDLIN( 735)								_this4->self->_02 = m5->self->_02;
HXDLIN( 735)								_this4->self->_03 = m5->self->_03;
HXDLIN( 735)								_this4->self->_10 = m5->self->_10;
HXDLIN( 735)								_this4->self->_11 = m5->self->_11;
HXDLIN( 735)								_this4->self->_12 = m5->self->_12;
HXDLIN( 735)								_this4->self->_13 = m5->self->_13;
HXDLIN( 735)								_this4->self->_20 = m5->self->_20;
HXDLIN( 735)								_this4->self->_21 = m5->self->_21;
HXDLIN( 735)								_this4->self->_22 = m5->self->_22;
HXDLIN( 735)								_this4->self->_23 = m5->self->_23;
HXDLIN( 735)								_this4->self->_30 = m5->self->_30;
HXDLIN( 735)								_this4->self->_31 = m5->self->_31;
HXDLIN( 735)								_this4->self->_32 = m5->self->_32;
HXDLIN( 735)								_this4->self->_33 = m5->self->_33;
            							}
HXLINE( 736)							{
HXLINE( 736)								 ::iron::math::Mat4 _this5 = ::iron::object::Uniforms_obj::helpMat;
HXDLIN( 736)								 ::iron::math::Mat4 m6 = camera->V;
HXDLIN( 736)								float a003 = _this5->self->_00;
HXDLIN( 736)								float a013 = _this5->self->_01;
HXDLIN( 736)								float a023 = _this5->self->_02;
HXDLIN( 736)								float a033 = _this5->self->_03;
HXDLIN( 736)								float a103 = _this5->self->_10;
HXDLIN( 736)								float a113 = _this5->self->_11;
HXDLIN( 736)								float a123 = _this5->self->_12;
HXDLIN( 736)								float a133 = _this5->self->_13;
HXDLIN( 736)								float a203 = _this5->self->_20;
HXDLIN( 736)								float a213 = _this5->self->_21;
HXDLIN( 736)								float a223 = _this5->self->_22;
HXDLIN( 736)								float a233 = _this5->self->_23;
HXDLIN( 736)								float a303 = _this5->self->_30;
HXDLIN( 736)								float a313 = _this5->self->_31;
HXDLIN( 736)								float a323 = _this5->self->_32;
HXDLIN( 736)								float a333 = _this5->self->_33;
HXDLIN( 736)								float b011 = m6->self->_00;
HXDLIN( 736)								float b13 = m6->self->_10;
HXDLIN( 736)								float b22 = m6->self->_20;
HXDLIN( 736)								float b32 = m6->self->_30;
HXDLIN( 736)								_this5->self->_00 = ((((a003 * b011) + (a013 * b13)) + (a023 * b22)) + (a033 * b32));
HXDLIN( 736)								_this5->self->_10 = ((((a103 * b011) + (a113 * b13)) + (a123 * b22)) + (a133 * b32));
HXDLIN( 736)								_this5->self->_20 = ((((a203 * b011) + (a213 * b13)) + (a223 * b22)) + (a233 * b32));
HXDLIN( 736)								_this5->self->_30 = ((((a303 * b011) + (a313 * b13)) + (a323 * b22)) + (a333 * b32));
HXDLIN( 736)								b011 = m6->self->_01;
HXDLIN( 736)								b13 = m6->self->_11;
HXDLIN( 736)								b22 = m6->self->_21;
HXDLIN( 736)								b32 = m6->self->_31;
HXDLIN( 736)								_this5->self->_01 = ((((a003 * b011) + (a013 * b13)) + (a023 * b22)) + (a033 * b32));
HXDLIN( 736)								_this5->self->_11 = ((((a103 * b011) + (a113 * b13)) + (a123 * b22)) + (a133 * b32));
HXDLIN( 736)								_this5->self->_21 = ((((a203 * b011) + (a213 * b13)) + (a223 * b22)) + (a233 * b32));
HXDLIN( 736)								_this5->self->_31 = ((((a303 * b011) + (a313 * b13)) + (a323 * b22)) + (a333 * b32));
HXDLIN( 736)								b011 = m6->self->_02;
HXDLIN( 736)								b13 = m6->self->_12;
HXDLIN( 736)								b22 = m6->self->_22;
HXDLIN( 736)								b32 = m6->self->_32;
HXDLIN( 736)								_this5->self->_02 = ((((a003 * b011) + (a013 * b13)) + (a023 * b22)) + (a033 * b32));
HXDLIN( 736)								_this5->self->_12 = ((((a103 * b011) + (a113 * b13)) + (a123 * b22)) + (a133 * b32));
HXDLIN( 736)								_this5->self->_22 = ((((a203 * b011) + (a213 * b13)) + (a223 * b22)) + (a233 * b32));
HXDLIN( 736)								_this5->self->_32 = ((((a303 * b011) + (a313 * b13)) + (a323 * b22)) + (a333 * b32));
HXDLIN( 736)								b011 = m6->self->_03;
HXDLIN( 736)								b13 = m6->self->_13;
HXDLIN( 736)								b22 = m6->self->_23;
HXDLIN( 736)								b32 = m6->self->_33;
HXDLIN( 736)								_this5->self->_03 = ((((a003 * b011) + (a013 * b13)) + (a023 * b22)) + (a033 * b32));
HXDLIN( 736)								_this5->self->_13 = ((((a103 * b011) + (a113 * b13)) + (a123 * b22)) + (a133 * b32));
HXDLIN( 736)								_this5->self->_23 = ((((a203 * b011) + (a213 * b13)) + (a223 * b22)) + (a233 * b32));
HXDLIN( 736)								_this5->self->_33 = ((((a303 * b011) + (a313 * b13)) + (a323 * b22)) + (a333 * b32));
            							}
HXLINE( 737)							::iron::object::Uniforms_obj::helpMat->self->_00 = ( (float)(((Float)1.0)) );
HXDLIN( 737)							::iron::object::Uniforms_obj::helpMat->self->_10 = ( (float)(((Float)0.0)) );
HXDLIN( 737)							::iron::object::Uniforms_obj::helpMat->self->_20 = ( (float)(((Float)0.0)) );
HXLINE( 738)							::iron::object::Uniforms_obj::helpMat->self->_01 = ( (float)(((Float)0.0)) );
HXDLIN( 738)							::iron::object::Uniforms_obj::helpMat->self->_11 = ( (float)(((Float)1.0)) );
HXDLIN( 738)							::iron::object::Uniforms_obj::helpMat->self->_21 = ( (float)(((Float)0.0)) );
HXLINE( 739)							::iron::object::Uniforms_obj::helpMat->self->_02 = ( (float)(((Float)0.0)) );
HXDLIN( 739)							::iron::object::Uniforms_obj::helpMat->self->_12 = ( (float)(((Float)0.0)) );
HXDLIN( 739)							::iron::object::Uniforms_obj::helpMat->self->_22 = ( (float)(((Float)1.0)) );
HXLINE( 740)							{
HXLINE( 740)								 ::iron::math::Mat4 _this6 = ::iron::object::Uniforms_obj::helpMat;
HXDLIN( 740)								 ::iron::math::Mat4 m7 = camera->P;
HXDLIN( 740)								float a004 = _this6->self->_00;
HXDLIN( 740)								float a014 = _this6->self->_01;
HXDLIN( 740)								float a024 = _this6->self->_02;
HXDLIN( 740)								float a034 = _this6->self->_03;
HXDLIN( 740)								float a104 = _this6->self->_10;
HXDLIN( 740)								float a114 = _this6->self->_11;
HXDLIN( 740)								float a124 = _this6->self->_12;
HXDLIN( 740)								float a134 = _this6->self->_13;
HXDLIN( 740)								float a204 = _this6->self->_20;
HXDLIN( 740)								float a214 = _this6->self->_21;
HXDLIN( 740)								float a224 = _this6->self->_22;
HXDLIN( 740)								float a234 = _this6->self->_23;
HXDLIN( 740)								float a304 = _this6->self->_30;
HXDLIN( 740)								float a314 = _this6->self->_31;
HXDLIN( 740)								float a324 = _this6->self->_32;
HXDLIN( 740)								float a334 = _this6->self->_33;
HXDLIN( 740)								float b012 = m7->self->_00;
HXDLIN( 740)								float b14 = m7->self->_10;
HXDLIN( 740)								float b23 = m7->self->_20;
HXDLIN( 740)								float b33 = m7->self->_30;
HXDLIN( 740)								_this6->self->_00 = ((((a004 * b012) + (a014 * b14)) + (a024 * b23)) + (a034 * b33));
HXDLIN( 740)								_this6->self->_10 = ((((a104 * b012) + (a114 * b14)) + (a124 * b23)) + (a134 * b33));
HXDLIN( 740)								_this6->self->_20 = ((((a204 * b012) + (a214 * b14)) + (a224 * b23)) + (a234 * b33));
HXDLIN( 740)								_this6->self->_30 = ((((a304 * b012) + (a314 * b14)) + (a324 * b23)) + (a334 * b33));
HXDLIN( 740)								b012 = m7->self->_01;
HXDLIN( 740)								b14 = m7->self->_11;
HXDLIN( 740)								b23 = m7->self->_21;
HXDLIN( 740)								b33 = m7->self->_31;
HXDLIN( 740)								_this6->self->_01 = ((((a004 * b012) + (a014 * b14)) + (a024 * b23)) + (a034 * b33));
HXDLIN( 740)								_this6->self->_11 = ((((a104 * b012) + (a114 * b14)) + (a124 * b23)) + (a134 * b33));
HXDLIN( 740)								_this6->self->_21 = ((((a204 * b012) + (a214 * b14)) + (a224 * b23)) + (a234 * b33));
HXDLIN( 740)								_this6->self->_31 = ((((a304 * b012) + (a314 * b14)) + (a324 * b23)) + (a334 * b33));
HXDLIN( 740)								b012 = m7->self->_02;
HXDLIN( 740)								b14 = m7->self->_12;
HXDLIN( 740)								b23 = m7->self->_22;
HXDLIN( 740)								b33 = m7->self->_32;
HXDLIN( 740)								_this6->self->_02 = ((((a004 * b012) + (a014 * b14)) + (a024 * b23)) + (a034 * b33));
HXDLIN( 740)								_this6->self->_12 = ((((a104 * b012) + (a114 * b14)) + (a124 * b23)) + (a134 * b33));
HXDLIN( 740)								_this6->self->_22 = ((((a204 * b012) + (a214 * b14)) + (a224 * b23)) + (a234 * b33));
HXDLIN( 740)								_this6->self->_32 = ((((a304 * b012) + (a314 * b14)) + (a324 * b23)) + (a334 * b33));
HXDLIN( 740)								b012 = m7->self->_03;
HXDLIN( 740)								b14 = m7->self->_13;
HXDLIN( 740)								b23 = m7->self->_23;
HXDLIN( 740)								b33 = m7->self->_33;
HXDLIN( 740)								_this6->self->_03 = ((((a004 * b012) + (a014 * b14)) + (a024 * b23)) + (a034 * b33));
HXDLIN( 740)								_this6->self->_13 = ((((a104 * b012) + (a114 * b14)) + (a124 * b23)) + (a134 * b33));
HXDLIN( 740)								_this6->self->_23 = ((((a204 * b012) + (a214 * b14)) + (a224 * b23)) + (a234 * b33));
HXDLIN( 740)								_this6->self->_33 = ((((a304 * b012) + (a314 * b14)) + (a324 * b23)) + (a334 * b33));
            							}
HXLINE( 741)							m = ::iron::object::Uniforms_obj::helpMat;
            						}
            						else {
HXLINE( 743)							if ((c->link == HX_("_worldViewProjectionMatrixCylinder",5e,d0,37,aa))) {
HXLINE( 744)								{
HXLINE( 744)									 ::iron::math::Mat4 _this7 = ::iron::object::Uniforms_obj::helpMat;
HXDLIN( 744)									 ::iron::math::Mat4 m8 = object->transform->world;
HXDLIN( 744)									_this7->self->_00 = m8->self->_00;
HXDLIN( 744)									_this7->self->_01 = m8->self->_01;
HXDLIN( 744)									_this7->self->_02 = m8->self->_02;
HXDLIN( 744)									_this7->self->_03 = m8->self->_03;
HXDLIN( 744)									_this7->self->_10 = m8->self->_10;
HXDLIN( 744)									_this7->self->_11 = m8->self->_11;
HXDLIN( 744)									_this7->self->_12 = m8->self->_12;
HXDLIN( 744)									_this7->self->_13 = m8->self->_13;
HXDLIN( 744)									_this7->self->_20 = m8->self->_20;
HXDLIN( 744)									_this7->self->_21 = m8->self->_21;
HXDLIN( 744)									_this7->self->_22 = m8->self->_22;
HXDLIN( 744)									_this7->self->_23 = m8->self->_23;
HXDLIN( 744)									_this7->self->_30 = m8->self->_30;
HXDLIN( 744)									_this7->self->_31 = m8->self->_31;
HXDLIN( 744)									_this7->self->_32 = m8->self->_32;
HXDLIN( 744)									_this7->self->_33 = m8->self->_33;
            								}
HXLINE( 745)								{
HXLINE( 745)									 ::iron::math::Mat4 _this8 = ::iron::object::Uniforms_obj::helpMat;
HXDLIN( 745)									 ::iron::math::Mat4 m9 = camera->V;
HXDLIN( 745)									float a005 = _this8->self->_00;
HXDLIN( 745)									float a015 = _this8->self->_01;
HXDLIN( 745)									float a025 = _this8->self->_02;
HXDLIN( 745)									float a035 = _this8->self->_03;
HXDLIN( 745)									float a105 = _this8->self->_10;
HXDLIN( 745)									float a115 = _this8->self->_11;
HXDLIN( 745)									float a125 = _this8->self->_12;
HXDLIN( 745)									float a135 = _this8->self->_13;
HXDLIN( 745)									float a205 = _this8->self->_20;
HXDLIN( 745)									float a215 = _this8->self->_21;
HXDLIN( 745)									float a225 = _this8->self->_22;
HXDLIN( 745)									float a235 = _this8->self->_23;
HXDLIN( 745)									float a305 = _this8->self->_30;
HXDLIN( 745)									float a315 = _this8->self->_31;
HXDLIN( 745)									float a325 = _this8->self->_32;
HXDLIN( 745)									float a335 = _this8->self->_33;
HXDLIN( 745)									float b013 = m9->self->_00;
HXDLIN( 745)									float b15 = m9->self->_10;
HXDLIN( 745)									float b24 = m9->self->_20;
HXDLIN( 745)									float b34 = m9->self->_30;
HXDLIN( 745)									_this8->self->_00 = ((((a005 * b013) + (a015 * b15)) + (a025 * b24)) + (a035 * b34));
HXDLIN( 745)									_this8->self->_10 = ((((a105 * b013) + (a115 * b15)) + (a125 * b24)) + (a135 * b34));
HXDLIN( 745)									_this8->self->_20 = ((((a205 * b013) + (a215 * b15)) + (a225 * b24)) + (a235 * b34));
HXDLIN( 745)									_this8->self->_30 = ((((a305 * b013) + (a315 * b15)) + (a325 * b24)) + (a335 * b34));
HXDLIN( 745)									b013 = m9->self->_01;
HXDLIN( 745)									b15 = m9->self->_11;
HXDLIN( 745)									b24 = m9->self->_21;
HXDLIN( 745)									b34 = m9->self->_31;
HXDLIN( 745)									_this8->self->_01 = ((((a005 * b013) + (a015 * b15)) + (a025 * b24)) + (a035 * b34));
HXDLIN( 745)									_this8->self->_11 = ((((a105 * b013) + (a115 * b15)) + (a125 * b24)) + (a135 * b34));
HXDLIN( 745)									_this8->self->_21 = ((((a205 * b013) + (a215 * b15)) + (a225 * b24)) + (a235 * b34));
HXDLIN( 745)									_this8->self->_31 = ((((a305 * b013) + (a315 * b15)) + (a325 * b24)) + (a335 * b34));
HXDLIN( 745)									b013 = m9->self->_02;
HXDLIN( 745)									b15 = m9->self->_12;
HXDLIN( 745)									b24 = m9->self->_22;
HXDLIN( 745)									b34 = m9->self->_32;
HXDLIN( 745)									_this8->self->_02 = ((((a005 * b013) + (a015 * b15)) + (a025 * b24)) + (a035 * b34));
HXDLIN( 745)									_this8->self->_12 = ((((a105 * b013) + (a115 * b15)) + (a125 * b24)) + (a135 * b34));
HXDLIN( 745)									_this8->self->_22 = ((((a205 * b013) + (a215 * b15)) + (a225 * b24)) + (a235 * b34));
HXDLIN( 745)									_this8->self->_32 = ((((a305 * b013) + (a315 * b15)) + (a325 * b24)) + (a335 * b34));
HXDLIN( 745)									b013 = m9->self->_03;
HXDLIN( 745)									b15 = m9->self->_13;
HXDLIN( 745)									b24 = m9->self->_23;
HXDLIN( 745)									b34 = m9->self->_33;
HXDLIN( 745)									_this8->self->_03 = ((((a005 * b013) + (a015 * b15)) + (a025 * b24)) + (a035 * b34));
HXDLIN( 745)									_this8->self->_13 = ((((a105 * b013) + (a115 * b15)) + (a125 * b24)) + (a135 * b34));
HXDLIN( 745)									_this8->self->_23 = ((((a205 * b013) + (a215 * b15)) + (a225 * b24)) + (a235 * b34));
HXDLIN( 745)									_this8->self->_33 = ((((a305 * b013) + (a315 * b15)) + (a325 * b24)) + (a335 * b34));
            								}
HXLINE( 746)								::iron::object::Uniforms_obj::helpMat->self->_00 = ( (float)(((Float)1.0)) );
HXDLIN( 746)								::iron::object::Uniforms_obj::helpMat->self->_20 = ( (float)(((Float)0.0)) );
HXLINE( 747)								::iron::object::Uniforms_obj::helpMat->self->_01 = ( (float)(((Float)0.0)) );
HXDLIN( 747)								::iron::object::Uniforms_obj::helpMat->self->_21 = ( (float)(((Float)0.0)) );
HXLINE( 748)								::iron::object::Uniforms_obj::helpMat->self->_02 = ( (float)(((Float)0.0)) );
HXDLIN( 748)								::iron::object::Uniforms_obj::helpMat->self->_22 = ( (float)(((Float)1.0)) );
HXLINE( 749)								{
HXLINE( 749)									 ::iron::math::Mat4 _this9 = ::iron::object::Uniforms_obj::helpMat;
HXDLIN( 749)									 ::iron::math::Mat4 m10 = camera->P;
HXDLIN( 749)									float a006 = _this9->self->_00;
HXDLIN( 749)									float a016 = _this9->self->_01;
HXDLIN( 749)									float a026 = _this9->self->_02;
HXDLIN( 749)									float a036 = _this9->self->_03;
HXDLIN( 749)									float a106 = _this9->self->_10;
HXDLIN( 749)									float a116 = _this9->self->_11;
HXDLIN( 749)									float a126 = _this9->self->_12;
HXDLIN( 749)									float a136 = _this9->self->_13;
HXDLIN( 749)									float a206 = _this9->self->_20;
HXDLIN( 749)									float a216 = _this9->self->_21;
HXDLIN( 749)									float a226 = _this9->self->_22;
HXDLIN( 749)									float a236 = _this9->self->_23;
HXDLIN( 749)									float a306 = _this9->self->_30;
HXDLIN( 749)									float a316 = _this9->self->_31;
HXDLIN( 749)									float a326 = _this9->self->_32;
HXDLIN( 749)									float a336 = _this9->self->_33;
HXDLIN( 749)									float b014 = m10->self->_00;
HXDLIN( 749)									float b16 = m10->self->_10;
HXDLIN( 749)									float b25 = m10->self->_20;
HXDLIN( 749)									float b35 = m10->self->_30;
HXDLIN( 749)									_this9->self->_00 = ((((a006 * b014) + (a016 * b16)) + (a026 * b25)) + (a036 * b35));
HXDLIN( 749)									_this9->self->_10 = ((((a106 * b014) + (a116 * b16)) + (a126 * b25)) + (a136 * b35));
HXDLIN( 749)									_this9->self->_20 = ((((a206 * b014) + (a216 * b16)) + (a226 * b25)) + (a236 * b35));
HXDLIN( 749)									_this9->self->_30 = ((((a306 * b014) + (a316 * b16)) + (a326 * b25)) + (a336 * b35));
HXDLIN( 749)									b014 = m10->self->_01;
HXDLIN( 749)									b16 = m10->self->_11;
HXDLIN( 749)									b25 = m10->self->_21;
HXDLIN( 749)									b35 = m10->self->_31;
HXDLIN( 749)									_this9->self->_01 = ((((a006 * b014) + (a016 * b16)) + (a026 * b25)) + (a036 * b35));
HXDLIN( 749)									_this9->self->_11 = ((((a106 * b014) + (a116 * b16)) + (a126 * b25)) + (a136 * b35));
HXDLIN( 749)									_this9->self->_21 = ((((a206 * b014) + (a216 * b16)) + (a226 * b25)) + (a236 * b35));
HXDLIN( 749)									_this9->self->_31 = ((((a306 * b014) + (a316 * b16)) + (a326 * b25)) + (a336 * b35));
HXDLIN( 749)									b014 = m10->self->_02;
HXDLIN( 749)									b16 = m10->self->_12;
HXDLIN( 749)									b25 = m10->self->_22;
HXDLIN( 749)									b35 = m10->self->_32;
HXDLIN( 749)									_this9->self->_02 = ((((a006 * b014) + (a016 * b16)) + (a026 * b25)) + (a036 * b35));
HXDLIN( 749)									_this9->self->_12 = ((((a106 * b014) + (a116 * b16)) + (a126 * b25)) + (a136 * b35));
HXDLIN( 749)									_this9->self->_22 = ((((a206 * b014) + (a216 * b16)) + (a226 * b25)) + (a236 * b35));
HXDLIN( 749)									_this9->self->_32 = ((((a306 * b014) + (a316 * b16)) + (a326 * b25)) + (a336 * b35));
HXDLIN( 749)									b014 = m10->self->_03;
HXDLIN( 749)									b16 = m10->self->_13;
HXDLIN( 749)									b25 = m10->self->_23;
HXDLIN( 749)									b35 = m10->self->_33;
HXDLIN( 749)									_this9->self->_03 = ((((a006 * b014) + (a016 * b16)) + (a026 * b25)) + (a036 * b35));
HXDLIN( 749)									_this9->self->_13 = ((((a106 * b014) + (a116 * b16)) + (a126 * b25)) + (a136 * b35));
HXDLIN( 749)									_this9->self->_23 = ((((a206 * b014) + (a216 * b16)) + (a226 * b25)) + (a236 * b35));
HXDLIN( 749)									_this9->self->_33 = ((((a306 * b014) + (a316 * b16)) + (a326 * b25)) + (a336 * b35));
            								}
HXLINE( 750)								m = ::iron::object::Uniforms_obj::helpMat;
            							}
            							else {
HXLINE( 752)								if ((c->link == HX_("_worldViewMatrix",f9,ed,1f,ac))) {
HXLINE( 753)									{
HXLINE( 753)										 ::iron::math::Mat4 _this10 = ::iron::object::Uniforms_obj::helpMat;
HXDLIN( 753)										 ::iron::math::Mat4 m11 = object->transform->world;
HXDLIN( 753)										_this10->self->_00 = m11->self->_00;
HXDLIN( 753)										_this10->self->_01 = m11->self->_01;
HXDLIN( 753)										_this10->self->_02 = m11->self->_02;
HXDLIN( 753)										_this10->self->_03 = m11->self->_03;
HXDLIN( 753)										_this10->self->_10 = m11->self->_10;
HXDLIN( 753)										_this10->self->_11 = m11->self->_11;
HXDLIN( 753)										_this10->self->_12 = m11->self->_12;
HXDLIN( 753)										_this10->self->_13 = m11->self->_13;
HXDLIN( 753)										_this10->self->_20 = m11->self->_20;
HXDLIN( 753)										_this10->self->_21 = m11->self->_21;
HXDLIN( 753)										_this10->self->_22 = m11->self->_22;
HXDLIN( 753)										_this10->self->_23 = m11->self->_23;
HXDLIN( 753)										_this10->self->_30 = m11->self->_30;
HXDLIN( 753)										_this10->self->_31 = m11->self->_31;
HXDLIN( 753)										_this10->self->_32 = m11->self->_32;
HXDLIN( 753)										_this10->self->_33 = m11->self->_33;
            									}
HXLINE( 754)									{
HXLINE( 754)										 ::iron::math::Mat4 _this11 = ::iron::object::Uniforms_obj::helpMat;
HXDLIN( 754)										 ::iron::math::Mat4 m12 = camera->V;
HXDLIN( 754)										float a007 = _this11->self->_00;
HXDLIN( 754)										float a017 = _this11->self->_01;
HXDLIN( 754)										float a027 = _this11->self->_02;
HXDLIN( 754)										float a037 = _this11->self->_03;
HXDLIN( 754)										float a107 = _this11->self->_10;
HXDLIN( 754)										float a117 = _this11->self->_11;
HXDLIN( 754)										float a127 = _this11->self->_12;
HXDLIN( 754)										float a137 = _this11->self->_13;
HXDLIN( 754)										float a207 = _this11->self->_20;
HXDLIN( 754)										float a217 = _this11->self->_21;
HXDLIN( 754)										float a227 = _this11->self->_22;
HXDLIN( 754)										float a237 = _this11->self->_23;
HXDLIN( 754)										float a307 = _this11->self->_30;
HXDLIN( 754)										float a317 = _this11->self->_31;
HXDLIN( 754)										float a327 = _this11->self->_32;
HXDLIN( 754)										float a337 = _this11->self->_33;
HXDLIN( 754)										float b015 = m12->self->_00;
HXDLIN( 754)										float b17 = m12->self->_10;
HXDLIN( 754)										float b26 = m12->self->_20;
HXDLIN( 754)										float b36 = m12->self->_30;
HXDLIN( 754)										_this11->self->_00 = ((((a007 * b015) + (a017 * b17)) + (a027 * b26)) + (a037 * b36));
HXDLIN( 754)										_this11->self->_10 = ((((a107 * b015) + (a117 * b17)) + (a127 * b26)) + (a137 * b36));
HXDLIN( 754)										_this11->self->_20 = ((((a207 * b015) + (a217 * b17)) + (a227 * b26)) + (a237 * b36));
HXDLIN( 754)										_this11->self->_30 = ((((a307 * b015) + (a317 * b17)) + (a327 * b26)) + (a337 * b36));
HXDLIN( 754)										b015 = m12->self->_01;
HXDLIN( 754)										b17 = m12->self->_11;
HXDLIN( 754)										b26 = m12->self->_21;
HXDLIN( 754)										b36 = m12->self->_31;
HXDLIN( 754)										_this11->self->_01 = ((((a007 * b015) + (a017 * b17)) + (a027 * b26)) + (a037 * b36));
HXDLIN( 754)										_this11->self->_11 = ((((a107 * b015) + (a117 * b17)) + (a127 * b26)) + (a137 * b36));
HXDLIN( 754)										_this11->self->_21 = ((((a207 * b015) + (a217 * b17)) + (a227 * b26)) + (a237 * b36));
HXDLIN( 754)										_this11->self->_31 = ((((a307 * b015) + (a317 * b17)) + (a327 * b26)) + (a337 * b36));
HXDLIN( 754)										b015 = m12->self->_02;
HXDLIN( 754)										b17 = m12->self->_12;
HXDLIN( 754)										b26 = m12->self->_22;
HXDLIN( 754)										b36 = m12->self->_32;
HXDLIN( 754)										_this11->self->_02 = ((((a007 * b015) + (a017 * b17)) + (a027 * b26)) + (a037 * b36));
HXDLIN( 754)										_this11->self->_12 = ((((a107 * b015) + (a117 * b17)) + (a127 * b26)) + (a137 * b36));
HXDLIN( 754)										_this11->self->_22 = ((((a207 * b015) + (a217 * b17)) + (a227 * b26)) + (a237 * b36));
HXDLIN( 754)										_this11->self->_32 = ((((a307 * b015) + (a317 * b17)) + (a327 * b26)) + (a337 * b36));
HXDLIN( 754)										b015 = m12->self->_03;
HXDLIN( 754)										b17 = m12->self->_13;
HXDLIN( 754)										b26 = m12->self->_23;
HXDLIN( 754)										b36 = m12->self->_33;
HXDLIN( 754)										_this11->self->_03 = ((((a007 * b015) + (a017 * b17)) + (a027 * b26)) + (a037 * b36));
HXDLIN( 754)										_this11->self->_13 = ((((a107 * b015) + (a117 * b17)) + (a127 * b26)) + (a137 * b36));
HXDLIN( 754)										_this11->self->_23 = ((((a207 * b015) + (a217 * b17)) + (a227 * b26)) + (a237 * b36));
HXDLIN( 754)										_this11->self->_33 = ((((a307 * b015) + (a317 * b17)) + (a327 * b26)) + (a337 * b36));
            									}
HXLINE( 755)									m = ::iron::object::Uniforms_obj::helpMat;
            								}
            								else {
HXLINE( 769)									if ((c->link == HX_("_lightWorldViewProjectionMatrix",10,37,a8,ce))) {
HXLINE( 770)										if (hx::IsNotNull( light )) {
HXLINE( 772)											if (hx::IsNull( object )) {
HXLINE( 772)												 ::iron::math::Mat4 _this12 = ::iron::object::Uniforms_obj::helpMat;
HXDLIN( 772)												_this12->self->_00 = ( (float)(((Float)1.0)) );
HXDLIN( 772)												_this12->self->_01 = ( (float)(((Float)0.0)) );
HXDLIN( 772)												_this12->self->_02 = ( (float)(((Float)0.0)) );
HXDLIN( 772)												_this12->self->_03 = ( (float)(((Float)0.0)) );
HXDLIN( 772)												_this12->self->_10 = ( (float)(((Float)0.0)) );
HXDLIN( 772)												_this12->self->_11 = ( (float)(((Float)1.0)) );
HXDLIN( 772)												_this12->self->_12 = ( (float)(((Float)0.0)) );
HXDLIN( 772)												_this12->self->_13 = ( (float)(((Float)0.0)) );
HXDLIN( 772)												_this12->self->_20 = ( (float)(((Float)0.0)) );
HXDLIN( 772)												_this12->self->_21 = ( (float)(((Float)0.0)) );
HXDLIN( 772)												_this12->self->_22 = ( (float)(((Float)1.0)) );
HXDLIN( 772)												_this12->self->_23 = ( (float)(((Float)0.0)) );
HXDLIN( 772)												_this12->self->_30 = ( (float)(((Float)0.0)) );
HXDLIN( 772)												_this12->self->_31 = ( (float)(((Float)0.0)) );
HXDLIN( 772)												_this12->self->_32 = ( (float)(((Float)0.0)) );
HXDLIN( 772)												_this12->self->_33 = ( (float)(((Float)1.0)) );
            											}
            											else {
HXLINE( 772)												 ::iron::math::Mat4 _this13 = ::iron::object::Uniforms_obj::helpMat;
HXDLIN( 772)												 ::iron::math::Mat4 m13 = object->transform->world;
HXDLIN( 772)												_this13->self->_00 = m13->self->_00;
HXDLIN( 772)												_this13->self->_01 = m13->self->_01;
HXDLIN( 772)												_this13->self->_02 = m13->self->_02;
HXDLIN( 772)												_this13->self->_03 = m13->self->_03;
HXDLIN( 772)												_this13->self->_10 = m13->self->_10;
HXDLIN( 772)												_this13->self->_11 = m13->self->_11;
HXDLIN( 772)												_this13->self->_12 = m13->self->_12;
HXDLIN( 772)												_this13->self->_13 = m13->self->_13;
HXDLIN( 772)												_this13->self->_20 = m13->self->_20;
HXDLIN( 772)												_this13->self->_21 = m13->self->_21;
HXDLIN( 772)												_this13->self->_22 = m13->self->_22;
HXDLIN( 772)												_this13->self->_23 = m13->self->_23;
HXDLIN( 772)												_this13->self->_30 = m13->self->_30;
HXDLIN( 772)												_this13->self->_31 = m13->self->_31;
HXDLIN( 772)												_this13->self->_32 = m13->self->_32;
HXDLIN( 772)												_this13->self->_33 = m13->self->_33;
            											}
HXLINE( 773)											{
HXLINE( 773)												 ::iron::math::Mat4 _this14 = ::iron::object::Uniforms_obj::helpMat;
HXDLIN( 773)												 ::iron::math::Mat4 m14 = light->VP;
HXDLIN( 773)												float a008 = _this14->self->_00;
HXDLIN( 773)												float a018 = _this14->self->_01;
HXDLIN( 773)												float a028 = _this14->self->_02;
HXDLIN( 773)												float a038 = _this14->self->_03;
HXDLIN( 773)												float a108 = _this14->self->_10;
HXDLIN( 773)												float a118 = _this14->self->_11;
HXDLIN( 773)												float a128 = _this14->self->_12;
HXDLIN( 773)												float a138 = _this14->self->_13;
HXDLIN( 773)												float a208 = _this14->self->_20;
HXDLIN( 773)												float a218 = _this14->self->_21;
HXDLIN( 773)												float a228 = _this14->self->_22;
HXDLIN( 773)												float a238 = _this14->self->_23;
HXDLIN( 773)												float a308 = _this14->self->_30;
HXDLIN( 773)												float a318 = _this14->self->_31;
HXDLIN( 773)												float a328 = _this14->self->_32;
HXDLIN( 773)												float a338 = _this14->self->_33;
HXDLIN( 773)												float b016 = m14->self->_00;
HXDLIN( 773)												float b18 = m14->self->_10;
HXDLIN( 773)												float b27 = m14->self->_20;
HXDLIN( 773)												float b37 = m14->self->_30;
HXDLIN( 773)												_this14->self->_00 = ((((a008 * b016) + (a018 * b18)) + (a028 * b27)) + (a038 * b37));
HXDLIN( 773)												_this14->self->_10 = ((((a108 * b016) + (a118 * b18)) + (a128 * b27)) + (a138 * b37));
HXDLIN( 773)												_this14->self->_20 = ((((a208 * b016) + (a218 * b18)) + (a228 * b27)) + (a238 * b37));
HXDLIN( 773)												_this14->self->_30 = ((((a308 * b016) + (a318 * b18)) + (a328 * b27)) + (a338 * b37));
HXDLIN( 773)												b016 = m14->self->_01;
HXDLIN( 773)												b18 = m14->self->_11;
HXDLIN( 773)												b27 = m14->self->_21;
HXDLIN( 773)												b37 = m14->self->_31;
HXDLIN( 773)												_this14->self->_01 = ((((a008 * b016) + (a018 * b18)) + (a028 * b27)) + (a038 * b37));
HXDLIN( 773)												_this14->self->_11 = ((((a108 * b016) + (a118 * b18)) + (a128 * b27)) + (a138 * b37));
HXDLIN( 773)												_this14->self->_21 = ((((a208 * b016) + (a218 * b18)) + (a228 * b27)) + (a238 * b37));
HXDLIN( 773)												_this14->self->_31 = ((((a308 * b016) + (a318 * b18)) + (a328 * b27)) + (a338 * b37));
HXDLIN( 773)												b016 = m14->self->_02;
HXDLIN( 773)												b18 = m14->self->_12;
HXDLIN( 773)												b27 = m14->self->_22;
HXDLIN( 773)												b37 = m14->self->_32;
HXDLIN( 773)												_this14->self->_02 = ((((a008 * b016) + (a018 * b18)) + (a028 * b27)) + (a038 * b37));
HXDLIN( 773)												_this14->self->_12 = ((((a108 * b016) + (a118 * b18)) + (a128 * b27)) + (a138 * b37));
HXDLIN( 773)												_this14->self->_22 = ((((a208 * b016) + (a218 * b18)) + (a228 * b27)) + (a238 * b37));
HXDLIN( 773)												_this14->self->_32 = ((((a308 * b016) + (a318 * b18)) + (a328 * b27)) + (a338 * b37));
HXDLIN( 773)												b016 = m14->self->_03;
HXDLIN( 773)												b18 = m14->self->_13;
HXDLIN( 773)												b27 = m14->self->_23;
HXDLIN( 773)												b37 = m14->self->_33;
HXDLIN( 773)												_this14->self->_03 = ((((a008 * b016) + (a018 * b18)) + (a028 * b27)) + (a038 * b37));
HXDLIN( 773)												_this14->self->_13 = ((((a108 * b016) + (a118 * b18)) + (a128 * b27)) + (a138 * b37));
HXDLIN( 773)												_this14->self->_23 = ((((a208 * b016) + (a218 * b18)) + (a228 * b27)) + (a238 * b37));
HXDLIN( 773)												_this14->self->_33 = ((((a308 * b016) + (a318 * b18)) + (a328 * b27)) + (a338 * b37));
            											}
HXLINE( 774)											m = ::iron::object::Uniforms_obj::helpMat;
            										}
            									}
            									else {
HXLINE( 777)										if ((c->link == HX_("_lightWorldViewProjectionMatrixSphere",3d,06,0e,e4))) {
HXLINE( 778)											if (hx::IsNotNull( light )) {
HXLINE( 779)												{
HXLINE( 779)													 ::iron::math::Mat4 _this15 = ::iron::object::Uniforms_obj::helpMat;
HXDLIN( 779)													 ::iron::math::Mat4 m15 = object->transform->world;
HXDLIN( 779)													_this15->self->_00 = m15->self->_00;
HXDLIN( 779)													_this15->self->_01 = m15->self->_01;
HXDLIN( 779)													_this15->self->_02 = m15->self->_02;
HXDLIN( 779)													_this15->self->_03 = m15->self->_03;
HXDLIN( 779)													_this15->self->_10 = m15->self->_10;
HXDLIN( 779)													_this15->self->_11 = m15->self->_11;
HXDLIN( 779)													_this15->self->_12 = m15->self->_12;
HXDLIN( 779)													_this15->self->_13 = m15->self->_13;
HXDLIN( 779)													_this15->self->_20 = m15->self->_20;
HXDLIN( 779)													_this15->self->_21 = m15->self->_21;
HXDLIN( 779)													_this15->self->_22 = m15->self->_22;
HXDLIN( 779)													_this15->self->_23 = m15->self->_23;
HXDLIN( 779)													_this15->self->_30 = m15->self->_30;
HXDLIN( 779)													_this15->self->_31 = m15->self->_31;
HXDLIN( 779)													_this15->self->_32 = m15->self->_32;
HXDLIN( 779)													_this15->self->_33 = m15->self->_33;
            												}
HXLINE( 782)												{
HXLINE( 782)													 ::iron::math::Mat4 _this16 = ::iron::object::Uniforms_obj::helpMat;
HXDLIN( 782)													 ::iron::math::Mat4 m16 = camera->V;
HXDLIN( 782)													float a009 = _this16->self->_00;
HXDLIN( 782)													float a019 = _this16->self->_01;
HXDLIN( 782)													float a029 = _this16->self->_02;
HXDLIN( 782)													float a039 = _this16->self->_03;
HXDLIN( 782)													float a109 = _this16->self->_10;
HXDLIN( 782)													float a119 = _this16->self->_11;
HXDLIN( 782)													float a129 = _this16->self->_12;
HXDLIN( 782)													float a139 = _this16->self->_13;
HXDLIN( 782)													float a209 = _this16->self->_20;
HXDLIN( 782)													float a219 = _this16->self->_21;
HXDLIN( 782)													float a229 = _this16->self->_22;
HXDLIN( 782)													float a239 = _this16->self->_23;
HXDLIN( 782)													float a309 = _this16->self->_30;
HXDLIN( 782)													float a319 = _this16->self->_31;
HXDLIN( 782)													float a329 = _this16->self->_32;
HXDLIN( 782)													float a339 = _this16->self->_33;
HXDLIN( 782)													float b017 = m16->self->_00;
HXDLIN( 782)													float b19 = m16->self->_10;
HXDLIN( 782)													float b28 = m16->self->_20;
HXDLIN( 782)													float b38 = m16->self->_30;
HXDLIN( 782)													_this16->self->_00 = ((((a009 * b017) + (a019 * b19)) + (a029 * b28)) + (a039 * b38));
HXDLIN( 782)													_this16->self->_10 = ((((a109 * b017) + (a119 * b19)) + (a129 * b28)) + (a139 * b38));
HXDLIN( 782)													_this16->self->_20 = ((((a209 * b017) + (a219 * b19)) + (a229 * b28)) + (a239 * b38));
HXDLIN( 782)													_this16->self->_30 = ((((a309 * b017) + (a319 * b19)) + (a329 * b28)) + (a339 * b38));
HXDLIN( 782)													b017 = m16->self->_01;
HXDLIN( 782)													b19 = m16->self->_11;
HXDLIN( 782)													b28 = m16->self->_21;
HXDLIN( 782)													b38 = m16->self->_31;
HXDLIN( 782)													_this16->self->_01 = ((((a009 * b017) + (a019 * b19)) + (a029 * b28)) + (a039 * b38));
HXDLIN( 782)													_this16->self->_11 = ((((a109 * b017) + (a119 * b19)) + (a129 * b28)) + (a139 * b38));
HXDLIN( 782)													_this16->self->_21 = ((((a209 * b017) + (a219 * b19)) + (a229 * b28)) + (a239 * b38));
HXDLIN( 782)													_this16->self->_31 = ((((a309 * b017) + (a319 * b19)) + (a329 * b28)) + (a339 * b38));
HXDLIN( 782)													b017 = m16->self->_02;
HXDLIN( 782)													b19 = m16->self->_12;
HXDLIN( 782)													b28 = m16->self->_22;
HXDLIN( 782)													b38 = m16->self->_32;
HXDLIN( 782)													_this16->self->_02 = ((((a009 * b017) + (a019 * b19)) + (a029 * b28)) + (a039 * b38));
HXDLIN( 782)													_this16->self->_12 = ((((a109 * b017) + (a119 * b19)) + (a129 * b28)) + (a139 * b38));
HXDLIN( 782)													_this16->self->_22 = ((((a209 * b017) + (a219 * b19)) + (a229 * b28)) + (a239 * b38));
HXDLIN( 782)													_this16->self->_32 = ((((a309 * b017) + (a319 * b19)) + (a329 * b28)) + (a339 * b38));
HXDLIN( 782)													b017 = m16->self->_03;
HXDLIN( 782)													b19 = m16->self->_13;
HXDLIN( 782)													b28 = m16->self->_23;
HXDLIN( 782)													b38 = m16->self->_33;
HXDLIN( 782)													_this16->self->_03 = ((((a009 * b017) + (a019 * b19)) + (a029 * b28)) + (a039 * b38));
HXDLIN( 782)													_this16->self->_13 = ((((a109 * b017) + (a119 * b19)) + (a129 * b28)) + (a139 * b38));
HXDLIN( 782)													_this16->self->_23 = ((((a209 * b017) + (a219 * b19)) + (a229 * b28)) + (a239 * b38));
HXDLIN( 782)													_this16->self->_33 = ((((a309 * b017) + (a319 * b19)) + (a329 * b28)) + (a339 * b38));
            												}
HXLINE( 783)												::iron::object::Uniforms_obj::helpMat->self->_00 = ( (float)(((Float)1.0)) );
HXDLIN( 783)												::iron::object::Uniforms_obj::helpMat->self->_10 = ( (float)(((Float)0.0)) );
HXDLIN( 783)												::iron::object::Uniforms_obj::helpMat->self->_20 = ( (float)(((Float)0.0)) );
HXLINE( 784)												::iron::object::Uniforms_obj::helpMat->self->_01 = ( (float)(((Float)0.0)) );
HXDLIN( 784)												::iron::object::Uniforms_obj::helpMat->self->_11 = ( (float)(((Float)1.0)) );
HXDLIN( 784)												::iron::object::Uniforms_obj::helpMat->self->_21 = ( (float)(((Float)0.0)) );
HXLINE( 785)												::iron::object::Uniforms_obj::helpMat->self->_02 = ( (float)(((Float)0.0)) );
HXDLIN( 785)												::iron::object::Uniforms_obj::helpMat->self->_12 = ( (float)(((Float)0.0)) );
HXDLIN( 785)												::iron::object::Uniforms_obj::helpMat->self->_22 = ( (float)(((Float)1.0)) );
HXLINE( 786)												{
HXLINE( 786)													 ::iron::math::Mat4 _this17 = ::iron::object::Uniforms_obj::helpMat2;
HXDLIN( 786)													 ::iron::math::Mat4 m17 = camera->V;
HXDLIN( 786)													float a0010 = m17->self->_00;
HXDLIN( 786)													float a0110 = m17->self->_01;
HXDLIN( 786)													float a0210 = m17->self->_02;
HXDLIN( 786)													float a0310 = m17->self->_03;
HXDLIN( 786)													float a1010 = m17->self->_10;
HXDLIN( 786)													float a1110 = m17->self->_11;
HXDLIN( 786)													float a1210 = m17->self->_12;
HXDLIN( 786)													float a1310 = m17->self->_13;
HXDLIN( 786)													float a2010 = m17->self->_20;
HXDLIN( 786)													float a2110 = m17->self->_21;
HXDLIN( 786)													float a2210 = m17->self->_22;
HXDLIN( 786)													float a2310 = m17->self->_23;
HXDLIN( 786)													float a3010 = m17->self->_30;
HXDLIN( 786)													float a3110 = m17->self->_31;
HXDLIN( 786)													float a3210 = m17->self->_32;
HXDLIN( 786)													float a3310 = m17->self->_33;
HXDLIN( 786)													float b001 = ((a0010 * a1110) - (a0110 * a1010));
HXDLIN( 786)													float b018 = ((a0010 * a1210) - (a0210 * a1010));
HXDLIN( 786)													float b021 = ((a0010 * a1310) - (a0310 * a1010));
HXDLIN( 786)													float b031 = ((a0110 * a1210) - (a0210 * a1110));
HXDLIN( 786)													float b041 = ((a0110 * a1310) - (a0310 * a1110));
HXDLIN( 786)													float b051 = ((a0210 * a1310) - (a0310 * a1210));
HXDLIN( 786)													float b061 = ((a2010 * a3110) - (a2110 * a3010));
HXDLIN( 786)													float b071 = ((a2010 * a3210) - (a2210 * a3010));
HXDLIN( 786)													float b081 = ((a2010 * a3310) - (a2310 * a3010));
HXDLIN( 786)													float b091 = ((a2110 * a3210) - (a2210 * a3110));
HXDLIN( 786)													float b101 = ((a2110 * a3310) - (a2310 * a3110));
HXDLIN( 786)													float b111 = ((a2210 * a3310) - (a2310 * a3210));
HXDLIN( 786)													float det1 = ((((((b001 * b111) - (b018 * b101)) + (b021 * b091)) + (b031 * b081)) - (b041 * b071)) + (b051 * b061));
HXDLIN( 786)													if ((det1 == ((Float)0.0))) {
HXLINE( 786)														_this17->self->_00 = ( (float)(((Float)1.0)) );
HXDLIN( 786)														_this17->self->_01 = ( (float)(((Float)0.0)) );
HXDLIN( 786)														_this17->self->_02 = ( (float)(((Float)0.0)) );
HXDLIN( 786)														_this17->self->_03 = ( (float)(((Float)0.0)) );
HXDLIN( 786)														_this17->self->_10 = ( (float)(((Float)0.0)) );
HXDLIN( 786)														_this17->self->_11 = ( (float)(((Float)1.0)) );
HXDLIN( 786)														_this17->self->_12 = ( (float)(((Float)0.0)) );
HXDLIN( 786)														_this17->self->_13 = ( (float)(((Float)0.0)) );
HXDLIN( 786)														_this17->self->_20 = ( (float)(((Float)0.0)) );
HXDLIN( 786)														_this17->self->_21 = ( (float)(((Float)0.0)) );
HXDLIN( 786)														_this17->self->_22 = ( (float)(((Float)1.0)) );
HXDLIN( 786)														_this17->self->_23 = ( (float)(((Float)0.0)) );
HXDLIN( 786)														_this17->self->_30 = ( (float)(((Float)0.0)) );
HXDLIN( 786)														_this17->self->_31 = ( (float)(((Float)0.0)) );
HXDLIN( 786)														_this17->self->_32 = ( (float)(((Float)0.0)) );
HXDLIN( 786)														_this17->self->_33 = ( (float)(((Float)1.0)) );
            													}
            													else {
HXLINE( 786)														det1 = ( (float)((((Float)1.0) / ( (Float)(det1) ))) );
HXDLIN( 786)														_this17->self->_00 = ((((a1110 * b111) - (a1210 * b101)) + (a1310 * b091)) * det1);
HXDLIN( 786)														_this17->self->_01 = ((((a0210 * b101) - (a0110 * b111)) - (a0310 * b091)) * det1);
HXDLIN( 786)														_this17->self->_02 = ((((a3110 * b051) - (a3210 * b041)) + (a3310 * b031)) * det1);
HXDLIN( 786)														_this17->self->_03 = ((((a2210 * b041) - (a2110 * b051)) - (a2310 * b031)) * det1);
HXDLIN( 786)														_this17->self->_10 = ((((a1210 * b081) - (a1010 * b111)) - (a1310 * b071)) * det1);
HXDLIN( 786)														_this17->self->_11 = ((((a0010 * b111) - (a0210 * b081)) + (a0310 * b071)) * det1);
HXDLIN( 786)														_this17->self->_12 = ((((a3210 * b021) - (a3010 * b051)) - (a3310 * b018)) * det1);
HXDLIN( 786)														_this17->self->_13 = ((((a2010 * b051) - (a2210 * b021)) + (a2310 * b018)) * det1);
HXDLIN( 786)														_this17->self->_20 = ((((a1010 * b101) - (a1110 * b081)) + (a1310 * b061)) * det1);
HXDLIN( 786)														_this17->self->_21 = ((((a0110 * b081) - (a0010 * b101)) - (a0310 * b061)) * det1);
HXDLIN( 786)														_this17->self->_22 = ((((a3010 * b041) - (a3110 * b021)) + (a3310 * b001)) * det1);
HXDLIN( 786)														_this17->self->_23 = ((((a2110 * b021) - (a2010 * b041)) - (a2310 * b001)) * det1);
HXDLIN( 786)														_this17->self->_30 = ((((a1110 * b071) - (a1010 * b091)) - (a1210 * b061)) * det1);
HXDLIN( 786)														_this17->self->_31 = ((((a0010 * b091) - (a0110 * b071)) + (a0210 * b061)) * det1);
HXDLIN( 786)														_this17->self->_32 = ((((a3110 * b018) - (a3010 * b031)) - (a3210 * b001)) * det1);
HXDLIN( 786)														_this17->self->_33 = ((((a2010 * b031) - (a2110 * b018)) + (a2210 * b001)) * det1);
            													}
            												}
HXLINE( 787)												{
HXLINE( 787)													 ::iron::math::Mat4 _this18 = ::iron::object::Uniforms_obj::helpMat;
HXDLIN( 787)													 ::iron::math::Mat4 m18 = ::iron::object::Uniforms_obj::helpMat2;
HXDLIN( 787)													float a0011 = _this18->self->_00;
HXDLIN( 787)													float a0111 = _this18->self->_01;
HXDLIN( 787)													float a0211 = _this18->self->_02;
HXDLIN( 787)													float a0311 = _this18->self->_03;
HXDLIN( 787)													float a1011 = _this18->self->_10;
HXDLIN( 787)													float a1111 = _this18->self->_11;
HXDLIN( 787)													float a1211 = _this18->self->_12;
HXDLIN( 787)													float a1311 = _this18->self->_13;
HXDLIN( 787)													float a2011 = _this18->self->_20;
HXDLIN( 787)													float a2111 = _this18->self->_21;
HXDLIN( 787)													float a2211 = _this18->self->_22;
HXDLIN( 787)													float a2311 = _this18->self->_23;
HXDLIN( 787)													float a3011 = _this18->self->_30;
HXDLIN( 787)													float a3111 = _this18->self->_31;
HXDLIN( 787)													float a3211 = _this18->self->_32;
HXDLIN( 787)													float a3311 = _this18->self->_33;
HXDLIN( 787)													float b019 = m18->self->_00;
HXDLIN( 787)													float b110 = m18->self->_10;
HXDLIN( 787)													float b29 = m18->self->_20;
HXDLIN( 787)													float b39 = m18->self->_30;
HXDLIN( 787)													_this18->self->_00 = ((((a0011 * b019) + (a0111 * b110)) + (a0211 * b29)) + (a0311 * b39));
HXDLIN( 787)													_this18->self->_10 = ((((a1011 * b019) + (a1111 * b110)) + (a1211 * b29)) + (a1311 * b39));
HXDLIN( 787)													_this18->self->_20 = ((((a2011 * b019) + (a2111 * b110)) + (a2211 * b29)) + (a2311 * b39));
HXDLIN( 787)													_this18->self->_30 = ((((a3011 * b019) + (a3111 * b110)) + (a3211 * b29)) + (a3311 * b39));
HXDLIN( 787)													b019 = m18->self->_01;
HXDLIN( 787)													b110 = m18->self->_11;
HXDLIN( 787)													b29 = m18->self->_21;
HXDLIN( 787)													b39 = m18->self->_31;
HXDLIN( 787)													_this18->self->_01 = ((((a0011 * b019) + (a0111 * b110)) + (a0211 * b29)) + (a0311 * b39));
HXDLIN( 787)													_this18->self->_11 = ((((a1011 * b019) + (a1111 * b110)) + (a1211 * b29)) + (a1311 * b39));
HXDLIN( 787)													_this18->self->_21 = ((((a2011 * b019) + (a2111 * b110)) + (a2211 * b29)) + (a2311 * b39));
HXDLIN( 787)													_this18->self->_31 = ((((a3011 * b019) + (a3111 * b110)) + (a3211 * b29)) + (a3311 * b39));
HXDLIN( 787)													b019 = m18->self->_02;
HXDLIN( 787)													b110 = m18->self->_12;
HXDLIN( 787)													b29 = m18->self->_22;
HXDLIN( 787)													b39 = m18->self->_32;
HXDLIN( 787)													_this18->self->_02 = ((((a0011 * b019) + (a0111 * b110)) + (a0211 * b29)) + (a0311 * b39));
HXDLIN( 787)													_this18->self->_12 = ((((a1011 * b019) + (a1111 * b110)) + (a1211 * b29)) + (a1311 * b39));
HXDLIN( 787)													_this18->self->_22 = ((((a2011 * b019) + (a2111 * b110)) + (a2211 * b29)) + (a2311 * b39));
HXDLIN( 787)													_this18->self->_32 = ((((a3011 * b019) + (a3111 * b110)) + (a3211 * b29)) + (a3311 * b39));
HXDLIN( 787)													b019 = m18->self->_03;
HXDLIN( 787)													b110 = m18->self->_13;
HXDLIN( 787)													b29 = m18->self->_23;
HXDLIN( 787)													b39 = m18->self->_33;
HXDLIN( 787)													_this18->self->_03 = ((((a0011 * b019) + (a0111 * b110)) + (a0211 * b29)) + (a0311 * b39));
HXDLIN( 787)													_this18->self->_13 = ((((a1011 * b019) + (a1111 * b110)) + (a1211 * b29)) + (a1311 * b39));
HXDLIN( 787)													_this18->self->_23 = ((((a2011 * b019) + (a2111 * b110)) + (a2211 * b29)) + (a2311 * b39));
HXDLIN( 787)													_this18->self->_33 = ((((a3011 * b019) + (a3111 * b110)) + (a3211 * b29)) + (a3311 * b39));
            												}
HXLINE( 789)												{
HXLINE( 789)													 ::iron::math::Mat4 _this19 = ::iron::object::Uniforms_obj::helpMat;
HXDLIN( 789)													 ::iron::math::Mat4 m19 = light->VP;
HXDLIN( 789)													float a0012 = _this19->self->_00;
HXDLIN( 789)													float a0112 = _this19->self->_01;
HXDLIN( 789)													float a0212 = _this19->self->_02;
HXDLIN( 789)													float a0312 = _this19->self->_03;
HXDLIN( 789)													float a1012 = _this19->self->_10;
HXDLIN( 789)													float a1112 = _this19->self->_11;
HXDLIN( 789)													float a1212 = _this19->self->_12;
HXDLIN( 789)													float a1312 = _this19->self->_13;
HXDLIN( 789)													float a2012 = _this19->self->_20;
HXDLIN( 789)													float a2112 = _this19->self->_21;
HXDLIN( 789)													float a2212 = _this19->self->_22;
HXDLIN( 789)													float a2312 = _this19->self->_23;
HXDLIN( 789)													float a3012 = _this19->self->_30;
HXDLIN( 789)													float a3112 = _this19->self->_31;
HXDLIN( 789)													float a3212 = _this19->self->_32;
HXDLIN( 789)													float a3312 = _this19->self->_33;
HXDLIN( 789)													float b020 = m19->self->_00;
HXDLIN( 789)													float b112 = m19->self->_10;
HXDLIN( 789)													float b210 = m19->self->_20;
HXDLIN( 789)													float b310 = m19->self->_30;
HXDLIN( 789)													_this19->self->_00 = ((((a0012 * b020) + (a0112 * b112)) + (a0212 * b210)) + (a0312 * b310));
HXDLIN( 789)													_this19->self->_10 = ((((a1012 * b020) + (a1112 * b112)) + (a1212 * b210)) + (a1312 * b310));
HXDLIN( 789)													_this19->self->_20 = ((((a2012 * b020) + (a2112 * b112)) + (a2212 * b210)) + (a2312 * b310));
HXDLIN( 789)													_this19->self->_30 = ((((a3012 * b020) + (a3112 * b112)) + (a3212 * b210)) + (a3312 * b310));
HXDLIN( 789)													b020 = m19->self->_01;
HXDLIN( 789)													b112 = m19->self->_11;
HXDLIN( 789)													b210 = m19->self->_21;
HXDLIN( 789)													b310 = m19->self->_31;
HXDLIN( 789)													_this19->self->_01 = ((((a0012 * b020) + (a0112 * b112)) + (a0212 * b210)) + (a0312 * b310));
HXDLIN( 789)													_this19->self->_11 = ((((a1012 * b020) + (a1112 * b112)) + (a1212 * b210)) + (a1312 * b310));
HXDLIN( 789)													_this19->self->_21 = ((((a2012 * b020) + (a2112 * b112)) + (a2212 * b210)) + (a2312 * b310));
HXDLIN( 789)													_this19->self->_31 = ((((a3012 * b020) + (a3112 * b112)) + (a3212 * b210)) + (a3312 * b310));
HXDLIN( 789)													b020 = m19->self->_02;
HXDLIN( 789)													b112 = m19->self->_12;
HXDLIN( 789)													b210 = m19->self->_22;
HXDLIN( 789)													b310 = m19->self->_32;
HXDLIN( 789)													_this19->self->_02 = ((((a0012 * b020) + (a0112 * b112)) + (a0212 * b210)) + (a0312 * b310));
HXDLIN( 789)													_this19->self->_12 = ((((a1012 * b020) + (a1112 * b112)) + (a1212 * b210)) + (a1312 * b310));
HXDLIN( 789)													_this19->self->_22 = ((((a2012 * b020) + (a2112 * b112)) + (a2212 * b210)) + (a2312 * b310));
HXDLIN( 789)													_this19->self->_32 = ((((a3012 * b020) + (a3112 * b112)) + (a3212 * b210)) + (a3312 * b310));
HXDLIN( 789)													b020 = m19->self->_03;
HXDLIN( 789)													b112 = m19->self->_13;
HXDLIN( 789)													b210 = m19->self->_23;
HXDLIN( 789)													b310 = m19->self->_33;
HXDLIN( 789)													_this19->self->_03 = ((((a0012 * b020) + (a0112 * b112)) + (a0212 * b210)) + (a0312 * b310));
HXDLIN( 789)													_this19->self->_13 = ((((a1012 * b020) + (a1112 * b112)) + (a1212 * b210)) + (a1312 * b310));
HXDLIN( 789)													_this19->self->_23 = ((((a2012 * b020) + (a2112 * b112)) + (a2212 * b210)) + (a2312 * b310));
HXDLIN( 789)													_this19->self->_33 = ((((a3012 * b020) + (a3112 * b112)) + (a3212 * b210)) + (a3312 * b310));
            												}
HXLINE( 790)												m = ::iron::object::Uniforms_obj::helpMat;
            											}
            										}
            										else {
HXLINE( 793)											if ((c->link == HX_("_lightWorldViewProjectionMatrixCylinder",86,59,c6,4f))) {
HXLINE( 794)												if (hx::IsNotNull( light )) {
HXLINE( 795)													{
HXLINE( 795)														 ::iron::math::Mat4 _this20 = ::iron::object::Uniforms_obj::helpMat;
HXDLIN( 795)														 ::iron::math::Mat4 m20 = object->transform->world;
HXDLIN( 795)														_this20->self->_00 = m20->self->_00;
HXDLIN( 795)														_this20->self->_01 = m20->self->_01;
HXDLIN( 795)														_this20->self->_02 = m20->self->_02;
HXDLIN( 795)														_this20->self->_03 = m20->self->_03;
HXDLIN( 795)														_this20->self->_10 = m20->self->_10;
HXDLIN( 795)														_this20->self->_11 = m20->self->_11;
HXDLIN( 795)														_this20->self->_12 = m20->self->_12;
HXDLIN( 795)														_this20->self->_13 = m20->self->_13;
HXDLIN( 795)														_this20->self->_20 = m20->self->_20;
HXDLIN( 795)														_this20->self->_21 = m20->self->_21;
HXDLIN( 795)														_this20->self->_22 = m20->self->_22;
HXDLIN( 795)														_this20->self->_23 = m20->self->_23;
HXDLIN( 795)														_this20->self->_30 = m20->self->_30;
HXDLIN( 795)														_this20->self->_31 = m20->self->_31;
HXDLIN( 795)														_this20->self->_32 = m20->self->_32;
HXDLIN( 795)														_this20->self->_33 = m20->self->_33;
            													}
HXLINE( 798)													{
HXLINE( 798)														 ::iron::math::Mat4 _this21 = ::iron::object::Uniforms_obj::helpMat;
HXDLIN( 798)														 ::iron::math::Mat4 m21 = camera->V;
HXDLIN( 798)														float a0013 = _this21->self->_00;
HXDLIN( 798)														float a0113 = _this21->self->_01;
HXDLIN( 798)														float a0213 = _this21->self->_02;
HXDLIN( 798)														float a0313 = _this21->self->_03;
HXDLIN( 798)														float a1013 = _this21->self->_10;
HXDLIN( 798)														float a1113 = _this21->self->_11;
HXDLIN( 798)														float a1213 = _this21->self->_12;
HXDLIN( 798)														float a1313 = _this21->self->_13;
HXDLIN( 798)														float a2013 = _this21->self->_20;
HXDLIN( 798)														float a2113 = _this21->self->_21;
HXDLIN( 798)														float a2213 = _this21->self->_22;
HXDLIN( 798)														float a2313 = _this21->self->_23;
HXDLIN( 798)														float a3013 = _this21->self->_30;
HXDLIN( 798)														float a3113 = _this21->self->_31;
HXDLIN( 798)														float a3213 = _this21->self->_32;
HXDLIN( 798)														float a3313 = _this21->self->_33;
HXDLIN( 798)														float b022 = m21->self->_00;
HXDLIN( 798)														float b113 = m21->self->_10;
HXDLIN( 798)														float b211 = m21->self->_20;
HXDLIN( 798)														float b311 = m21->self->_30;
HXDLIN( 798)														_this21->self->_00 = ((((a0013 * b022) + (a0113 * b113)) + (a0213 * b211)) + (a0313 * b311));
HXDLIN( 798)														_this21->self->_10 = ((((a1013 * b022) + (a1113 * b113)) + (a1213 * b211)) + (a1313 * b311));
HXDLIN( 798)														_this21->self->_20 = ((((a2013 * b022) + (a2113 * b113)) + (a2213 * b211)) + (a2313 * b311));
HXDLIN( 798)														_this21->self->_30 = ((((a3013 * b022) + (a3113 * b113)) + (a3213 * b211)) + (a3313 * b311));
HXDLIN( 798)														b022 = m21->self->_01;
HXDLIN( 798)														b113 = m21->self->_11;
HXDLIN( 798)														b211 = m21->self->_21;
HXDLIN( 798)														b311 = m21->self->_31;
HXDLIN( 798)														_this21->self->_01 = ((((a0013 * b022) + (a0113 * b113)) + (a0213 * b211)) + (a0313 * b311));
HXDLIN( 798)														_this21->self->_11 = ((((a1013 * b022) + (a1113 * b113)) + (a1213 * b211)) + (a1313 * b311));
HXDLIN( 798)														_this21->self->_21 = ((((a2013 * b022) + (a2113 * b113)) + (a2213 * b211)) + (a2313 * b311));
HXDLIN( 798)														_this21->self->_31 = ((((a3013 * b022) + (a3113 * b113)) + (a3213 * b211)) + (a3313 * b311));
HXDLIN( 798)														b022 = m21->self->_02;
HXDLIN( 798)														b113 = m21->self->_12;
HXDLIN( 798)														b211 = m21->self->_22;
HXDLIN( 798)														b311 = m21->self->_32;
HXDLIN( 798)														_this21->self->_02 = ((((a0013 * b022) + (a0113 * b113)) + (a0213 * b211)) + (a0313 * b311));
HXDLIN( 798)														_this21->self->_12 = ((((a1013 * b022) + (a1113 * b113)) + (a1213 * b211)) + (a1313 * b311));
HXDLIN( 798)														_this21->self->_22 = ((((a2013 * b022) + (a2113 * b113)) + (a2213 * b211)) + (a2313 * b311));
HXDLIN( 798)														_this21->self->_32 = ((((a3013 * b022) + (a3113 * b113)) + (a3213 * b211)) + (a3313 * b311));
HXDLIN( 798)														b022 = m21->self->_03;
HXDLIN( 798)														b113 = m21->self->_13;
HXDLIN( 798)														b211 = m21->self->_23;
HXDLIN( 798)														b311 = m21->self->_33;
HXDLIN( 798)														_this21->self->_03 = ((((a0013 * b022) + (a0113 * b113)) + (a0213 * b211)) + (a0313 * b311));
HXDLIN( 798)														_this21->self->_13 = ((((a1013 * b022) + (a1113 * b113)) + (a1213 * b211)) + (a1313 * b311));
HXDLIN( 798)														_this21->self->_23 = ((((a2013 * b022) + (a2113 * b113)) + (a2213 * b211)) + (a2313 * b311));
HXDLIN( 798)														_this21->self->_33 = ((((a3013 * b022) + (a3113 * b113)) + (a3213 * b211)) + (a3313 * b311));
            													}
HXLINE( 799)													::iron::object::Uniforms_obj::helpMat->self->_00 = ( (float)(((Float)1.0)) );
HXDLIN( 799)													::iron::object::Uniforms_obj::helpMat->self->_20 = ( (float)(((Float)0.0)) );
HXLINE( 800)													::iron::object::Uniforms_obj::helpMat->self->_01 = ( (float)(((Float)0.0)) );
HXDLIN( 800)													::iron::object::Uniforms_obj::helpMat->self->_21 = ( (float)(((Float)0.0)) );
HXLINE( 801)													::iron::object::Uniforms_obj::helpMat->self->_02 = ( (float)(((Float)0.0)) );
HXDLIN( 801)													::iron::object::Uniforms_obj::helpMat->self->_22 = ( (float)(((Float)1.0)) );
HXLINE( 802)													{
HXLINE( 802)														 ::iron::math::Mat4 _this22 = ::iron::object::Uniforms_obj::helpMat2;
HXDLIN( 802)														 ::iron::math::Mat4 m22 = camera->V;
HXDLIN( 802)														float a0014 = m22->self->_00;
HXDLIN( 802)														float a0114 = m22->self->_01;
HXDLIN( 802)														float a0214 = m22->self->_02;
HXDLIN( 802)														float a0314 = m22->self->_03;
HXDLIN( 802)														float a1014 = m22->self->_10;
HXDLIN( 802)														float a1114 = m22->self->_11;
HXDLIN( 802)														float a1214 = m22->self->_12;
HXDLIN( 802)														float a1314 = m22->self->_13;
HXDLIN( 802)														float a2014 = m22->self->_20;
HXDLIN( 802)														float a2114 = m22->self->_21;
HXDLIN( 802)														float a2214 = m22->self->_22;
HXDLIN( 802)														float a2314 = m22->self->_23;
HXDLIN( 802)														float a3014 = m22->self->_30;
HXDLIN( 802)														float a3114 = m22->self->_31;
HXDLIN( 802)														float a3214 = m22->self->_32;
HXDLIN( 802)														float a3314 = m22->self->_33;
HXDLIN( 802)														float b002 = ((a0014 * a1114) - (a0114 * a1014));
HXDLIN( 802)														float b0110 = ((a0014 * a1214) - (a0214 * a1014));
HXDLIN( 802)														float b023 = ((a0014 * a1314) - (a0314 * a1014));
HXDLIN( 802)														float b032 = ((a0114 * a1214) - (a0214 * a1114));
HXDLIN( 802)														float b042 = ((a0114 * a1314) - (a0314 * a1114));
HXDLIN( 802)														float b052 = ((a0214 * a1314) - (a0314 * a1214));
HXDLIN( 802)														float b062 = ((a2014 * a3114) - (a2114 * a3014));
HXDLIN( 802)														float b072 = ((a2014 * a3214) - (a2214 * a3014));
HXDLIN( 802)														float b082 = ((a2014 * a3314) - (a2314 * a3014));
HXDLIN( 802)														float b092 = ((a2114 * a3214) - (a2214 * a3114));
HXDLIN( 802)														float b102 = ((a2114 * a3314) - (a2314 * a3114));
HXDLIN( 802)														float b114 = ((a2214 * a3314) - (a2314 * a3214));
HXDLIN( 802)														float det2 = ((((((b002 * b114) - (b0110 * b102)) + (b023 * b092)) + (b032 * b082)) - (b042 * b072)) + (b052 * b062));
HXDLIN( 802)														if ((det2 == ((Float)0.0))) {
HXLINE( 802)															_this22->self->_00 = ( (float)(((Float)1.0)) );
HXDLIN( 802)															_this22->self->_01 = ( (float)(((Float)0.0)) );
HXDLIN( 802)															_this22->self->_02 = ( (float)(((Float)0.0)) );
HXDLIN( 802)															_this22->self->_03 = ( (float)(((Float)0.0)) );
HXDLIN( 802)															_this22->self->_10 = ( (float)(((Float)0.0)) );
HXDLIN( 802)															_this22->self->_11 = ( (float)(((Float)1.0)) );
HXDLIN( 802)															_this22->self->_12 = ( (float)(((Float)0.0)) );
HXDLIN( 802)															_this22->self->_13 = ( (float)(((Float)0.0)) );
HXDLIN( 802)															_this22->self->_20 = ( (float)(((Float)0.0)) );
HXDLIN( 802)															_this22->self->_21 = ( (float)(((Float)0.0)) );
HXDLIN( 802)															_this22->self->_22 = ( (float)(((Float)1.0)) );
HXDLIN( 802)															_this22->self->_23 = ( (float)(((Float)0.0)) );
HXDLIN( 802)															_this22->self->_30 = ( (float)(((Float)0.0)) );
HXDLIN( 802)															_this22->self->_31 = ( (float)(((Float)0.0)) );
HXDLIN( 802)															_this22->self->_32 = ( (float)(((Float)0.0)) );
HXDLIN( 802)															_this22->self->_33 = ( (float)(((Float)1.0)) );
            														}
            														else {
HXLINE( 802)															det2 = ( (float)((((Float)1.0) / ( (Float)(det2) ))) );
HXDLIN( 802)															_this22->self->_00 = ((((a1114 * b114) - (a1214 * b102)) + (a1314 * b092)) * det2);
HXDLIN( 802)															_this22->self->_01 = ((((a0214 * b102) - (a0114 * b114)) - (a0314 * b092)) * det2);
HXDLIN( 802)															_this22->self->_02 = ((((a3114 * b052) - (a3214 * b042)) + (a3314 * b032)) * det2);
HXDLIN( 802)															_this22->self->_03 = ((((a2214 * b042) - (a2114 * b052)) - (a2314 * b032)) * det2);
HXDLIN( 802)															_this22->self->_10 = ((((a1214 * b082) - (a1014 * b114)) - (a1314 * b072)) * det2);
HXDLIN( 802)															_this22->self->_11 = ((((a0014 * b114) - (a0214 * b082)) + (a0314 * b072)) * det2);
HXDLIN( 802)															_this22->self->_12 = ((((a3214 * b023) - (a3014 * b052)) - (a3314 * b0110)) * det2);
HXDLIN( 802)															_this22->self->_13 = ((((a2014 * b052) - (a2214 * b023)) + (a2314 * b0110)) * det2);
HXDLIN( 802)															_this22->self->_20 = ((((a1014 * b102) - (a1114 * b082)) + (a1314 * b062)) * det2);
HXDLIN( 802)															_this22->self->_21 = ((((a0114 * b082) - (a0014 * b102)) - (a0314 * b062)) * det2);
HXDLIN( 802)															_this22->self->_22 = ((((a3014 * b042) - (a3114 * b023)) + (a3314 * b002)) * det2);
HXDLIN( 802)															_this22->self->_23 = ((((a2114 * b023) - (a2014 * b042)) - (a2314 * b002)) * det2);
HXDLIN( 802)															_this22->self->_30 = ((((a1114 * b072) - (a1014 * b092)) - (a1214 * b062)) * det2);
HXDLIN( 802)															_this22->self->_31 = ((((a0014 * b092) - (a0114 * b072)) + (a0214 * b062)) * det2);
HXDLIN( 802)															_this22->self->_32 = ((((a3114 * b0110) - (a3014 * b032)) - (a3214 * b002)) * det2);
HXDLIN( 802)															_this22->self->_33 = ((((a2014 * b032) - (a2114 * b0110)) + (a2214 * b002)) * det2);
            														}
            													}
HXLINE( 803)													{
HXLINE( 803)														 ::iron::math::Mat4 _this23 = ::iron::object::Uniforms_obj::helpMat;
HXDLIN( 803)														 ::iron::math::Mat4 m23 = ::iron::object::Uniforms_obj::helpMat2;
HXDLIN( 803)														float a0015 = _this23->self->_00;
HXDLIN( 803)														float a0115 = _this23->self->_01;
HXDLIN( 803)														float a0215 = _this23->self->_02;
HXDLIN( 803)														float a0315 = _this23->self->_03;
HXDLIN( 803)														float a1015 = _this23->self->_10;
HXDLIN( 803)														float a1115 = _this23->self->_11;
HXDLIN( 803)														float a1215 = _this23->self->_12;
HXDLIN( 803)														float a1315 = _this23->self->_13;
HXDLIN( 803)														float a2015 = _this23->self->_20;
HXDLIN( 803)														float a2115 = _this23->self->_21;
HXDLIN( 803)														float a2215 = _this23->self->_22;
HXDLIN( 803)														float a2315 = _this23->self->_23;
HXDLIN( 803)														float a3015 = _this23->self->_30;
HXDLIN( 803)														float a3115 = _this23->self->_31;
HXDLIN( 803)														float a3215 = _this23->self->_32;
HXDLIN( 803)														float a3315 = _this23->self->_33;
HXDLIN( 803)														float b024 = m23->self->_00;
HXDLIN( 803)														float b115 = m23->self->_10;
HXDLIN( 803)														float b212 = m23->self->_20;
HXDLIN( 803)														float b312 = m23->self->_30;
HXDLIN( 803)														_this23->self->_00 = ((((a0015 * b024) + (a0115 * b115)) + (a0215 * b212)) + (a0315 * b312));
HXDLIN( 803)														_this23->self->_10 = ((((a1015 * b024) + (a1115 * b115)) + (a1215 * b212)) + (a1315 * b312));
HXDLIN( 803)														_this23->self->_20 = ((((a2015 * b024) + (a2115 * b115)) + (a2215 * b212)) + (a2315 * b312));
HXDLIN( 803)														_this23->self->_30 = ((((a3015 * b024) + (a3115 * b115)) + (a3215 * b212)) + (a3315 * b312));
HXDLIN( 803)														b024 = m23->self->_01;
HXDLIN( 803)														b115 = m23->self->_11;
HXDLIN( 803)														b212 = m23->self->_21;
HXDLIN( 803)														b312 = m23->self->_31;
HXDLIN( 803)														_this23->self->_01 = ((((a0015 * b024) + (a0115 * b115)) + (a0215 * b212)) + (a0315 * b312));
HXDLIN( 803)														_this23->self->_11 = ((((a1015 * b024) + (a1115 * b115)) + (a1215 * b212)) + (a1315 * b312));
HXDLIN( 803)														_this23->self->_21 = ((((a2015 * b024) + (a2115 * b115)) + (a2215 * b212)) + (a2315 * b312));
HXDLIN( 803)														_this23->self->_31 = ((((a3015 * b024) + (a3115 * b115)) + (a3215 * b212)) + (a3315 * b312));
HXDLIN( 803)														b024 = m23->self->_02;
HXDLIN( 803)														b115 = m23->self->_12;
HXDLIN( 803)														b212 = m23->self->_22;
HXDLIN( 803)														b312 = m23->self->_32;
HXDLIN( 803)														_this23->self->_02 = ((((a0015 * b024) + (a0115 * b115)) + (a0215 * b212)) + (a0315 * b312));
HXDLIN( 803)														_this23->self->_12 = ((((a1015 * b024) + (a1115 * b115)) + (a1215 * b212)) + (a1315 * b312));
HXDLIN( 803)														_this23->self->_22 = ((((a2015 * b024) + (a2115 * b115)) + (a2215 * b212)) + (a2315 * b312));
HXDLIN( 803)														_this23->self->_32 = ((((a3015 * b024) + (a3115 * b115)) + (a3215 * b212)) + (a3315 * b312));
HXDLIN( 803)														b024 = m23->self->_03;
HXDLIN( 803)														b115 = m23->self->_13;
HXDLIN( 803)														b212 = m23->self->_23;
HXDLIN( 803)														b312 = m23->self->_33;
HXDLIN( 803)														_this23->self->_03 = ((((a0015 * b024) + (a0115 * b115)) + (a0215 * b212)) + (a0315 * b312));
HXDLIN( 803)														_this23->self->_13 = ((((a1015 * b024) + (a1115 * b115)) + (a1215 * b212)) + (a1315 * b312));
HXDLIN( 803)														_this23->self->_23 = ((((a2015 * b024) + (a2115 * b115)) + (a2215 * b212)) + (a2315 * b312));
HXDLIN( 803)														_this23->self->_33 = ((((a3015 * b024) + (a3115 * b115)) + (a3215 * b212)) + (a3315 * b312));
            													}
HXLINE( 805)													{
HXLINE( 805)														 ::iron::math::Mat4 _this24 = ::iron::object::Uniforms_obj::helpMat;
HXDLIN( 805)														 ::iron::math::Mat4 m24 = light->VP;
HXDLIN( 805)														float a0016 = _this24->self->_00;
HXDLIN( 805)														float a0116 = _this24->self->_01;
HXDLIN( 805)														float a0216 = _this24->self->_02;
HXDLIN( 805)														float a0316 = _this24->self->_03;
HXDLIN( 805)														float a1016 = _this24->self->_10;
HXDLIN( 805)														float a1116 = _this24->self->_11;
HXDLIN( 805)														float a1216 = _this24->self->_12;
HXDLIN( 805)														float a1316 = _this24->self->_13;
HXDLIN( 805)														float a2016 = _this24->self->_20;
HXDLIN( 805)														float a2116 = _this24->self->_21;
HXDLIN( 805)														float a2216 = _this24->self->_22;
HXDLIN( 805)														float a2316 = _this24->self->_23;
HXDLIN( 805)														float a3016 = _this24->self->_30;
HXDLIN( 805)														float a3116 = _this24->self->_31;
HXDLIN( 805)														float a3216 = _this24->self->_32;
HXDLIN( 805)														float a3316 = _this24->self->_33;
HXDLIN( 805)														float b025 = m24->self->_00;
HXDLIN( 805)														float b116 = m24->self->_10;
HXDLIN( 805)														float b213 = m24->self->_20;
HXDLIN( 805)														float b313 = m24->self->_30;
HXDLIN( 805)														_this24->self->_00 = ((((a0016 * b025) + (a0116 * b116)) + (a0216 * b213)) + (a0316 * b313));
HXDLIN( 805)														_this24->self->_10 = ((((a1016 * b025) + (a1116 * b116)) + (a1216 * b213)) + (a1316 * b313));
HXDLIN( 805)														_this24->self->_20 = ((((a2016 * b025) + (a2116 * b116)) + (a2216 * b213)) + (a2316 * b313));
HXDLIN( 805)														_this24->self->_30 = ((((a3016 * b025) + (a3116 * b116)) + (a3216 * b213)) + (a3316 * b313));
HXDLIN( 805)														b025 = m24->self->_01;
HXDLIN( 805)														b116 = m24->self->_11;
HXDLIN( 805)														b213 = m24->self->_21;
HXDLIN( 805)														b313 = m24->self->_31;
HXDLIN( 805)														_this24->self->_01 = ((((a0016 * b025) + (a0116 * b116)) + (a0216 * b213)) + (a0316 * b313));
HXDLIN( 805)														_this24->self->_11 = ((((a1016 * b025) + (a1116 * b116)) + (a1216 * b213)) + (a1316 * b313));
HXDLIN( 805)														_this24->self->_21 = ((((a2016 * b025) + (a2116 * b116)) + (a2216 * b213)) + (a2316 * b313));
HXDLIN( 805)														_this24->self->_31 = ((((a3016 * b025) + (a3116 * b116)) + (a3216 * b213)) + (a3316 * b313));
HXDLIN( 805)														b025 = m24->self->_02;
HXDLIN( 805)														b116 = m24->self->_12;
HXDLIN( 805)														b213 = m24->self->_22;
HXDLIN( 805)														b313 = m24->self->_32;
HXDLIN( 805)														_this24->self->_02 = ((((a0016 * b025) + (a0116 * b116)) + (a0216 * b213)) + (a0316 * b313));
HXDLIN( 805)														_this24->self->_12 = ((((a1016 * b025) + (a1116 * b116)) + (a1216 * b213)) + (a1316 * b313));
HXDLIN( 805)														_this24->self->_22 = ((((a2016 * b025) + (a2116 * b116)) + (a2216 * b213)) + (a2316 * b313));
HXDLIN( 805)														_this24->self->_32 = ((((a3016 * b025) + (a3116 * b116)) + (a3216 * b213)) + (a3316 * b313));
HXDLIN( 805)														b025 = m24->self->_03;
HXDLIN( 805)														b116 = m24->self->_13;
HXDLIN( 805)														b213 = m24->self->_23;
HXDLIN( 805)														b313 = m24->self->_33;
HXDLIN( 805)														_this24->self->_03 = ((((a0016 * b025) + (a0116 * b116)) + (a0216 * b213)) + (a0316 * b313));
HXDLIN( 805)														_this24->self->_13 = ((((a1016 * b025) + (a1116 * b116)) + (a1216 * b213)) + (a1316 * b313));
HXDLIN( 805)														_this24->self->_23 = ((((a2016 * b025) + (a2116 * b116)) + (a2216 * b213)) + (a2316 * b313));
HXDLIN( 805)														_this24->self->_33 = ((((a3016 * b025) + (a3116 * b116)) + (a3216 * b213)) + (a3316 * b313));
            													}
HXLINE( 806)													m = ::iron::object::Uniforms_obj::helpMat;
            												}
            											}
            											else {
HXLINE( 809)												if ((c->link == HX_("_biasLightWorldViewProjectionMatrix",e9,f4,15,25))) {
HXLINE( 810)													if (hx::IsNotNull( light )) {
HXLINE( 812)														if (hx::IsNull( object )) {
HXLINE( 812)															 ::iron::math::Mat4 _this25 = ::iron::object::Uniforms_obj::helpMat;
HXDLIN( 812)															_this25->self->_00 = ( (float)(((Float)1.0)) );
HXDLIN( 812)															_this25->self->_01 = ( (float)(((Float)0.0)) );
HXDLIN( 812)															_this25->self->_02 = ( (float)(((Float)0.0)) );
HXDLIN( 812)															_this25->self->_03 = ( (float)(((Float)0.0)) );
HXDLIN( 812)															_this25->self->_10 = ( (float)(((Float)0.0)) );
HXDLIN( 812)															_this25->self->_11 = ( (float)(((Float)1.0)) );
HXDLIN( 812)															_this25->self->_12 = ( (float)(((Float)0.0)) );
HXDLIN( 812)															_this25->self->_13 = ( (float)(((Float)0.0)) );
HXDLIN( 812)															_this25->self->_20 = ( (float)(((Float)0.0)) );
HXDLIN( 812)															_this25->self->_21 = ( (float)(((Float)0.0)) );
HXDLIN( 812)															_this25->self->_22 = ( (float)(((Float)1.0)) );
HXDLIN( 812)															_this25->self->_23 = ( (float)(((Float)0.0)) );
HXDLIN( 812)															_this25->self->_30 = ( (float)(((Float)0.0)) );
HXDLIN( 812)															_this25->self->_31 = ( (float)(((Float)0.0)) );
HXDLIN( 812)															_this25->self->_32 = ( (float)(((Float)0.0)) );
HXDLIN( 812)															_this25->self->_33 = ( (float)(((Float)1.0)) );
            														}
            														else {
HXLINE( 812)															 ::iron::math::Mat4 _this26 = ::iron::object::Uniforms_obj::helpMat;
HXDLIN( 812)															 ::iron::math::Mat4 m25 = object->transform->world;
HXDLIN( 812)															_this26->self->_00 = m25->self->_00;
HXDLIN( 812)															_this26->self->_01 = m25->self->_01;
HXDLIN( 812)															_this26->self->_02 = m25->self->_02;
HXDLIN( 812)															_this26->self->_03 = m25->self->_03;
HXDLIN( 812)															_this26->self->_10 = m25->self->_10;
HXDLIN( 812)															_this26->self->_11 = m25->self->_11;
HXDLIN( 812)															_this26->self->_12 = m25->self->_12;
HXDLIN( 812)															_this26->self->_13 = m25->self->_13;
HXDLIN( 812)															_this26->self->_20 = m25->self->_20;
HXDLIN( 812)															_this26->self->_21 = m25->self->_21;
HXDLIN( 812)															_this26->self->_22 = m25->self->_22;
HXDLIN( 812)															_this26->self->_23 = m25->self->_23;
HXDLIN( 812)															_this26->self->_30 = m25->self->_30;
HXDLIN( 812)															_this26->self->_31 = m25->self->_31;
HXDLIN( 812)															_this26->self->_32 = m25->self->_32;
HXDLIN( 812)															_this26->self->_33 = m25->self->_33;
            														}
HXLINE( 813)														{
HXLINE( 813)															 ::iron::math::Mat4 _this27 = ::iron::object::Uniforms_obj::helpMat;
HXDLIN( 813)															 ::iron::math::Mat4 m26 = light->VP;
HXDLIN( 813)															float a0017 = _this27->self->_00;
HXDLIN( 813)															float a0117 = _this27->self->_01;
HXDLIN( 813)															float a0217 = _this27->self->_02;
HXDLIN( 813)															float a0317 = _this27->self->_03;
HXDLIN( 813)															float a1017 = _this27->self->_10;
HXDLIN( 813)															float a1117 = _this27->self->_11;
HXDLIN( 813)															float a1217 = _this27->self->_12;
HXDLIN( 813)															float a1317 = _this27->self->_13;
HXDLIN( 813)															float a2017 = _this27->self->_20;
HXDLIN( 813)															float a2117 = _this27->self->_21;
HXDLIN( 813)															float a2217 = _this27->self->_22;
HXDLIN( 813)															float a2317 = _this27->self->_23;
HXDLIN( 813)															float a3017 = _this27->self->_30;
HXDLIN( 813)															float a3117 = _this27->self->_31;
HXDLIN( 813)															float a3217 = _this27->self->_32;
HXDLIN( 813)															float a3317 = _this27->self->_33;
HXDLIN( 813)															float b026 = m26->self->_00;
HXDLIN( 813)															float b117 = m26->self->_10;
HXDLIN( 813)															float b214 = m26->self->_20;
HXDLIN( 813)															float b314 = m26->self->_30;
HXDLIN( 813)															_this27->self->_00 = ((((a0017 * b026) + (a0117 * b117)) + (a0217 * b214)) + (a0317 * b314));
HXDLIN( 813)															_this27->self->_10 = ((((a1017 * b026) + (a1117 * b117)) + (a1217 * b214)) + (a1317 * b314));
HXDLIN( 813)															_this27->self->_20 = ((((a2017 * b026) + (a2117 * b117)) + (a2217 * b214)) + (a2317 * b314));
HXDLIN( 813)															_this27->self->_30 = ((((a3017 * b026) + (a3117 * b117)) + (a3217 * b214)) + (a3317 * b314));
HXDLIN( 813)															b026 = m26->self->_01;
HXDLIN( 813)															b117 = m26->self->_11;
HXDLIN( 813)															b214 = m26->self->_21;
HXDLIN( 813)															b314 = m26->self->_31;
HXDLIN( 813)															_this27->self->_01 = ((((a0017 * b026) + (a0117 * b117)) + (a0217 * b214)) + (a0317 * b314));
HXDLIN( 813)															_this27->self->_11 = ((((a1017 * b026) + (a1117 * b117)) + (a1217 * b214)) + (a1317 * b314));
HXDLIN( 813)															_this27->self->_21 = ((((a2017 * b026) + (a2117 * b117)) + (a2217 * b214)) + (a2317 * b314));
HXDLIN( 813)															_this27->self->_31 = ((((a3017 * b026) + (a3117 * b117)) + (a3217 * b214)) + (a3317 * b314));
HXDLIN( 813)															b026 = m26->self->_02;
HXDLIN( 813)															b117 = m26->self->_12;
HXDLIN( 813)															b214 = m26->self->_22;
HXDLIN( 813)															b314 = m26->self->_32;
HXDLIN( 813)															_this27->self->_02 = ((((a0017 * b026) + (a0117 * b117)) + (a0217 * b214)) + (a0317 * b314));
HXDLIN( 813)															_this27->self->_12 = ((((a1017 * b026) + (a1117 * b117)) + (a1217 * b214)) + (a1317 * b314));
HXDLIN( 813)															_this27->self->_22 = ((((a2017 * b026) + (a2117 * b117)) + (a2217 * b214)) + (a2317 * b314));
HXDLIN( 813)															_this27->self->_32 = ((((a3017 * b026) + (a3117 * b117)) + (a3217 * b214)) + (a3317 * b314));
HXDLIN( 813)															b026 = m26->self->_03;
HXDLIN( 813)															b117 = m26->self->_13;
HXDLIN( 813)															b214 = m26->self->_23;
HXDLIN( 813)															b314 = m26->self->_33;
HXDLIN( 813)															_this27->self->_03 = ((((a0017 * b026) + (a0117 * b117)) + (a0217 * b214)) + (a0317 * b314));
HXDLIN( 813)															_this27->self->_13 = ((((a1017 * b026) + (a1117 * b117)) + (a1217 * b214)) + (a1317 * b314));
HXDLIN( 813)															_this27->self->_23 = ((((a2017 * b026) + (a2117 * b117)) + (a2217 * b214)) + (a2317 * b314));
HXDLIN( 813)															_this27->self->_33 = ((((a3017 * b026) + (a3117 * b117)) + (a3217 * b214)) + (a3317 * b314));
            														}
HXLINE( 814)														{
HXLINE( 814)															 ::iron::math::Mat4 _this28 = ::iron::object::Uniforms_obj::helpMat;
HXDLIN( 814)															 ::iron::math::Mat4 m27 = ::iron::object::Uniforms_obj::biasMat;
HXDLIN( 814)															float a0018 = _this28->self->_00;
HXDLIN( 814)															float a0118 = _this28->self->_01;
HXDLIN( 814)															float a0218 = _this28->self->_02;
HXDLIN( 814)															float a0318 = _this28->self->_03;
HXDLIN( 814)															float a1018 = _this28->self->_10;
HXDLIN( 814)															float a1118 = _this28->self->_11;
HXDLIN( 814)															float a1218 = _this28->self->_12;
HXDLIN( 814)															float a1318 = _this28->self->_13;
HXDLIN( 814)															float a2018 = _this28->self->_20;
HXDLIN( 814)															float a2118 = _this28->self->_21;
HXDLIN( 814)															float a2218 = _this28->self->_22;
HXDLIN( 814)															float a2318 = _this28->self->_23;
HXDLIN( 814)															float a3018 = _this28->self->_30;
HXDLIN( 814)															float a3118 = _this28->self->_31;
HXDLIN( 814)															float a3218 = _this28->self->_32;
HXDLIN( 814)															float a3318 = _this28->self->_33;
HXDLIN( 814)															float b027 = m27->self->_00;
HXDLIN( 814)															float b118 = m27->self->_10;
HXDLIN( 814)															float b215 = m27->self->_20;
HXDLIN( 814)															float b315 = m27->self->_30;
HXDLIN( 814)															_this28->self->_00 = ((((a0018 * b027) + (a0118 * b118)) + (a0218 * b215)) + (a0318 * b315));
HXDLIN( 814)															_this28->self->_10 = ((((a1018 * b027) + (a1118 * b118)) + (a1218 * b215)) + (a1318 * b315));
HXDLIN( 814)															_this28->self->_20 = ((((a2018 * b027) + (a2118 * b118)) + (a2218 * b215)) + (a2318 * b315));
HXDLIN( 814)															_this28->self->_30 = ((((a3018 * b027) + (a3118 * b118)) + (a3218 * b215)) + (a3318 * b315));
HXDLIN( 814)															b027 = m27->self->_01;
HXDLIN( 814)															b118 = m27->self->_11;
HXDLIN( 814)															b215 = m27->self->_21;
HXDLIN( 814)															b315 = m27->self->_31;
HXDLIN( 814)															_this28->self->_01 = ((((a0018 * b027) + (a0118 * b118)) + (a0218 * b215)) + (a0318 * b315));
HXDLIN( 814)															_this28->self->_11 = ((((a1018 * b027) + (a1118 * b118)) + (a1218 * b215)) + (a1318 * b315));
HXDLIN( 814)															_this28->self->_21 = ((((a2018 * b027) + (a2118 * b118)) + (a2218 * b215)) + (a2318 * b315));
HXDLIN( 814)															_this28->self->_31 = ((((a3018 * b027) + (a3118 * b118)) + (a3218 * b215)) + (a3318 * b315));
HXDLIN( 814)															b027 = m27->self->_02;
HXDLIN( 814)															b118 = m27->self->_12;
HXDLIN( 814)															b215 = m27->self->_22;
HXDLIN( 814)															b315 = m27->self->_32;
HXDLIN( 814)															_this28->self->_02 = ((((a0018 * b027) + (a0118 * b118)) + (a0218 * b215)) + (a0318 * b315));
HXDLIN( 814)															_this28->self->_12 = ((((a1018 * b027) + (a1118 * b118)) + (a1218 * b215)) + (a1318 * b315));
HXDLIN( 814)															_this28->self->_22 = ((((a2018 * b027) + (a2118 * b118)) + (a2218 * b215)) + (a2318 * b315));
HXDLIN( 814)															_this28->self->_32 = ((((a3018 * b027) + (a3118 * b118)) + (a3218 * b215)) + (a3318 * b315));
HXDLIN( 814)															b027 = m27->self->_03;
HXDLIN( 814)															b118 = m27->self->_13;
HXDLIN( 814)															b215 = m27->self->_23;
HXDLIN( 814)															b315 = m27->self->_33;
HXDLIN( 814)															_this28->self->_03 = ((((a0018 * b027) + (a0118 * b118)) + (a0218 * b215)) + (a0318 * b315));
HXDLIN( 814)															_this28->self->_13 = ((((a1018 * b027) + (a1118 * b118)) + (a1218 * b215)) + (a1318 * b315));
HXDLIN( 814)															_this28->self->_23 = ((((a2018 * b027) + (a2118 * b118)) + (a2218 * b215)) + (a2318 * b315));
HXDLIN( 814)															_this28->self->_33 = ((((a3018 * b027) + (a3118 * b118)) + (a3218 * b215)) + (a3318 * b315));
            														}
HXLINE( 815)														m = ::iron::object::Uniforms_obj::helpMat;
            													}
            												}
            												else {
HXLINE( 819)													if ((c->link == HX_("_particleData",6f,ee,bf,be))) {
HXLINE( 820)														 ::iron::object::MeshObject mo = hx::TCast<  ::iron::object::MeshObject >::cast(object);
HXLINE( 821)														bool _hx_tmp;
HXDLIN( 821)														if (hx::IsNotNull( mo->particleOwner )) {
HXLINE( 821)															_hx_tmp = hx::IsNotNull( mo->particleOwner->particleSystems );
            														}
            														else {
HXLINE( 821)															_hx_tmp = false;
            														}
HXDLIN( 821)														if (_hx_tmp) {
HXLINE( 822)															m = mo->particleOwner->particleSystems->__get(mo->particleIndex).StaticCast<  ::iron::object::ParticleSystem >()->getData();
            														}
            													}
            													else {
HXLINE( 827)														if (hx::IsNotNull( ::iron::object::Uniforms_obj::externalMat4Links )) {
HXLINE( 828)															int _g = 0;
HXDLIN( 828)															::Array< ::Dynamic> _g1 = ::iron::object::Uniforms_obj::externalMat4Links;
HXDLIN( 828)															while((_g < _g1->length)){
HXLINE( 828)																 ::Dynamic fn = _g1->__get(_g);
HXDLIN( 828)																_g = (_g + 1);
HXLINE( 829)																 ::iron::data::MaterialData m28 = ::iron::object::Uniforms_obj::currentMat(object);
HXDLIN( 829)																m = ( ( ::iron::math::Mat4)(fn(object,m28,c->link)) );
HXLINE( 830)																if (hx::IsNotNull( m )) {
HXLINE( 830)																	goto _hx_goto_12;
            																}
            															}
            															_hx_goto_12:;
            														}
            													}
            												}
            											}
            										}
            									}
            								}
            							}
            						}
            					}
            				}
            			}
HXLINE( 834)			if (hx::IsNull( m )) {
HXLINE( 834)				return;
            			}
HXLINE( 835)			::kha::graphics4::Graphics_obj::setMatrix(g,location,m->self);
            		}
            		else {
HXLINE( 837)			if ((c->type == HX_("mat3",93,41,56,48))) {
HXLINE( 838)				 ::iron::math::Mat3 m29 = null();
HXLINE( 839)				if ((c->link == HX_("_normalMatrix",a7,46,9b,9c))) {
HXLINE( 840)					{
HXLINE( 840)						 ::iron::math::Mat4 _this29 = ::iron::object::Uniforms_obj::helpMat;
HXDLIN( 840)						 ::iron::math::Mat4 m30 = object->transform->world;
HXDLIN( 840)						_this29->self->_00 = m30->self->_00;
HXDLIN( 840)						_this29->self->_01 = m30->self->_01;
HXDLIN( 840)						_this29->self->_02 = m30->self->_02;
HXDLIN( 840)						_this29->self->_03 = m30->self->_03;
HXDLIN( 840)						_this29->self->_10 = m30->self->_10;
HXDLIN( 840)						_this29->self->_11 = m30->self->_11;
HXDLIN( 840)						_this29->self->_12 = m30->self->_12;
HXDLIN( 840)						_this29->self->_13 = m30->self->_13;
HXDLIN( 840)						_this29->self->_20 = m30->self->_20;
HXDLIN( 840)						_this29->self->_21 = m30->self->_21;
HXDLIN( 840)						_this29->self->_22 = m30->self->_22;
HXDLIN( 840)						_this29->self->_23 = m30->self->_23;
HXDLIN( 840)						_this29->self->_30 = m30->self->_30;
HXDLIN( 840)						_this29->self->_31 = m30->self->_31;
HXDLIN( 840)						_this29->self->_32 = m30->self->_32;
HXDLIN( 840)						_this29->self->_33 = m30->self->_33;
            					}
HXLINE( 843)					{
HXLINE( 843)						 ::iron::math::Mat4 _this30 = ::iron::object::Uniforms_obj::helpMat;
HXDLIN( 843)						 ::iron::math::Mat4 m31 = ::iron::object::Uniforms_obj::helpMat;
HXDLIN( 843)						float a0019 = m31->self->_00;
HXDLIN( 843)						float a0119 = m31->self->_01;
HXDLIN( 843)						float a0219 = m31->self->_02;
HXDLIN( 843)						float a0319 = m31->self->_03;
HXDLIN( 843)						float a1019 = m31->self->_10;
HXDLIN( 843)						float a1119 = m31->self->_11;
HXDLIN( 843)						float a1219 = m31->self->_12;
HXDLIN( 843)						float a1319 = m31->self->_13;
HXDLIN( 843)						float a2019 = m31->self->_20;
HXDLIN( 843)						float a2119 = m31->self->_21;
HXDLIN( 843)						float a2219 = m31->self->_22;
HXDLIN( 843)						float a2319 = m31->self->_23;
HXDLIN( 843)						float a3019 = m31->self->_30;
HXDLIN( 843)						float a3119 = m31->self->_31;
HXDLIN( 843)						float a3219 = m31->self->_32;
HXDLIN( 843)						float a3319 = m31->self->_33;
HXDLIN( 843)						float b003 = ((a0019 * a1119) - (a0119 * a1019));
HXDLIN( 843)						float b0111 = ((a0019 * a1219) - (a0219 * a1019));
HXDLIN( 843)						float b028 = ((a0019 * a1319) - (a0319 * a1019));
HXDLIN( 843)						float b033 = ((a0119 * a1219) - (a0219 * a1119));
HXDLIN( 843)						float b043 = ((a0119 * a1319) - (a0319 * a1119));
HXDLIN( 843)						float b053 = ((a0219 * a1319) - (a0319 * a1219));
HXDLIN( 843)						float b063 = ((a2019 * a3119) - (a2119 * a3019));
HXDLIN( 843)						float b073 = ((a2019 * a3219) - (a2219 * a3019));
HXDLIN( 843)						float b083 = ((a2019 * a3319) - (a2319 * a3019));
HXDLIN( 843)						float b093 = ((a2119 * a3219) - (a2219 * a3119));
HXDLIN( 843)						float b103 = ((a2119 * a3319) - (a2319 * a3119));
HXDLIN( 843)						float b119 = ((a2219 * a3319) - (a2319 * a3219));
HXDLIN( 843)						float det3 = ((((((b003 * b119) - (b0111 * b103)) + (b028 * b093)) + (b033 * b083)) - (b043 * b073)) + (b053 * b063));
HXDLIN( 843)						if ((det3 == ((Float)0.0))) {
HXLINE( 843)							_this30->self->_00 = ( (float)(((Float)1.0)) );
HXDLIN( 843)							_this30->self->_01 = ( (float)(((Float)0.0)) );
HXDLIN( 843)							_this30->self->_02 = ( (float)(((Float)0.0)) );
HXDLIN( 843)							_this30->self->_03 = ( (float)(((Float)0.0)) );
HXDLIN( 843)							_this30->self->_10 = ( (float)(((Float)0.0)) );
HXDLIN( 843)							_this30->self->_11 = ( (float)(((Float)1.0)) );
HXDLIN( 843)							_this30->self->_12 = ( (float)(((Float)0.0)) );
HXDLIN( 843)							_this30->self->_13 = ( (float)(((Float)0.0)) );
HXDLIN( 843)							_this30->self->_20 = ( (float)(((Float)0.0)) );
HXDLIN( 843)							_this30->self->_21 = ( (float)(((Float)0.0)) );
HXDLIN( 843)							_this30->self->_22 = ( (float)(((Float)1.0)) );
HXDLIN( 843)							_this30->self->_23 = ( (float)(((Float)0.0)) );
HXDLIN( 843)							_this30->self->_30 = ( (float)(((Float)0.0)) );
HXDLIN( 843)							_this30->self->_31 = ( (float)(((Float)0.0)) );
HXDLIN( 843)							_this30->self->_32 = ( (float)(((Float)0.0)) );
HXDLIN( 843)							_this30->self->_33 = ( (float)(((Float)1.0)) );
            						}
            						else {
HXLINE( 843)							det3 = ( (float)((((Float)1.0) / ( (Float)(det3) ))) );
HXDLIN( 843)							_this30->self->_00 = ((((a1119 * b119) - (a1219 * b103)) + (a1319 * b093)) * det3);
HXDLIN( 843)							_this30->self->_01 = ((((a0219 * b103) - (a0119 * b119)) - (a0319 * b093)) * det3);
HXDLIN( 843)							_this30->self->_02 = ((((a3119 * b053) - (a3219 * b043)) + (a3319 * b033)) * det3);
HXDLIN( 843)							_this30->self->_03 = ((((a2219 * b043) - (a2119 * b053)) - (a2319 * b033)) * det3);
HXDLIN( 843)							_this30->self->_10 = ((((a1219 * b083) - (a1019 * b119)) - (a1319 * b073)) * det3);
HXDLIN( 843)							_this30->self->_11 = ((((a0019 * b119) - (a0219 * b083)) + (a0319 * b073)) * det3);
HXDLIN( 843)							_this30->self->_12 = ((((a3219 * b028) - (a3019 * b053)) - (a3319 * b0111)) * det3);
HXDLIN( 843)							_this30->self->_13 = ((((a2019 * b053) - (a2219 * b028)) + (a2319 * b0111)) * det3);
HXDLIN( 843)							_this30->self->_20 = ((((a1019 * b103) - (a1119 * b083)) + (a1319 * b063)) * det3);
HXDLIN( 843)							_this30->self->_21 = ((((a0119 * b083) - (a0019 * b103)) - (a0319 * b063)) * det3);
HXDLIN( 843)							_this30->self->_22 = ((((a3019 * b043) - (a3119 * b028)) + (a3319 * b003)) * det3);
HXDLIN( 843)							_this30->self->_23 = ((((a2119 * b028) - (a2019 * b043)) - (a2319 * b003)) * det3);
HXDLIN( 843)							_this30->self->_30 = ((((a1119 * b073) - (a1019 * b093)) - (a1219 * b063)) * det3);
HXDLIN( 843)							_this30->self->_31 = ((((a0019 * b093) - (a0119 * b073)) + (a0219 * b063)) * det3);
HXDLIN( 843)							_this30->self->_32 = ((((a3119 * b0111) - (a3019 * b033)) - (a3219 * b003)) * det3);
HXDLIN( 843)							_this30->self->_33 = ((((a2019 * b033) - (a2119 * b0111)) + (a2219 * b003)) * det3);
            						}
            					}
HXLINE( 844)					{
HXLINE( 844)						 ::iron::math::Mat4 _this31 = ::iron::object::Uniforms_obj::helpMat;
HXDLIN( 844)						float f = _this31->self->_01;
HXDLIN( 844)						_this31->self->_01 = _this31->self->_10;
HXDLIN( 844)						_this31->self->_10 = f;
HXDLIN( 844)						f = _this31->self->_02;
HXDLIN( 844)						_this31->self->_02 = _this31->self->_20;
HXDLIN( 844)						_this31->self->_20 = f;
HXDLIN( 844)						f = _this31->self->_12;
HXDLIN( 844)						_this31->self->_12 = _this31->self->_21;
HXDLIN( 844)						_this31->self->_21 = f;
            					}
HXLINE( 846)					{
HXLINE( 846)						 ::iron::math::Mat3 _this32 = ::iron::object::Uniforms_obj::helpMat3;
HXDLIN( 846)						 ::iron::math::Mat4 m32 = ::iron::object::Uniforms_obj::helpMat;
HXDLIN( 846)						_this32->self->_00 = m32->self->_00;
HXDLIN( 846)						_this32->self->_01 = m32->self->_01;
HXDLIN( 846)						_this32->self->_02 = m32->self->_02;
HXDLIN( 846)						_this32->self->_10 = m32->self->_10;
HXDLIN( 846)						_this32->self->_11 = m32->self->_11;
HXDLIN( 846)						_this32->self->_12 = m32->self->_12;
HXDLIN( 846)						_this32->self->_20 = m32->self->_20;
HXDLIN( 846)						_this32->self->_21 = m32->self->_21;
HXDLIN( 846)						_this32->self->_22 = m32->self->_22;
            					}
HXLINE( 847)					m29 = ::iron::object::Uniforms_obj::helpMat3;
            				}
HXLINE( 850)				if (hx::IsNull( m29 )) {
HXLINE( 850)					return;
            				}
HXLINE( 851)				::kha::graphics4::Graphics_obj::setMatrix3(g,location,m29->self);
            			}
            			else {
HXLINE( 853)				if ((c->type == HX_("vec4",60,27,4c,4e))) {
HXLINE( 854)					 ::iron::math::Vec4 v = null();
HXLINE( 855)					{
HXLINE( 855)						 ::iron::math::Vec4 _this33 = ::iron::object::Uniforms_obj::helpVec;
HXDLIN( 855)						_this33->x = ( (float)(0) );
HXDLIN( 855)						_this33->y = ( (float)(0) );
HXDLIN( 855)						_this33->z = ( (float)(0) );
HXDLIN( 855)						_this33->w = ( (float)(((Float)1.0)) );
            					}
HXLINE( 857)					if (hx::IsNotNull( ::iron::object::Uniforms_obj::externalVec4Links )) {
HXLINE( 858)						int _g2 = 0;
HXDLIN( 858)						::Array< ::Dynamic> _g11 = ::iron::object::Uniforms_obj::externalVec4Links;
HXDLIN( 858)						while((_g2 < _g11->length)){
HXLINE( 858)							 ::Dynamic fn1 = _g11->__get(_g2);
HXDLIN( 858)							_g2 = (_g2 + 1);
HXLINE( 859)							 ::iron::data::MaterialData v1 = ::iron::object::Uniforms_obj::currentMat(object);
HXDLIN( 859)							v = ( ( ::iron::math::Vec4)(fn1(object,v1,c->link)) );
HXLINE( 860)							if (hx::IsNotNull( v )) {
HXLINE( 860)								goto _hx_goto_13;
            							}
            						}
            						_hx_goto_13:;
            					}
HXLINE( 864)					if (hx::IsNull( v )) {
HXLINE( 864)						return;
            					}
HXLINE( 865)					::kha::graphics4::Graphics_obj::setFloat4(g,location,v->x,v->y,v->z,v->w);
            				}
            				else {
HXLINE( 867)					if ((c->type == HX_("vec3",5f,27,4c,4e))) {
HXLINE( 868)						 ::iron::math::Vec4 v2 = null();
HXLINE( 869)						{
HXLINE( 869)							 ::iron::math::Vec4 _this34 = ::iron::object::Uniforms_obj::helpVec;
HXDLIN( 869)							_this34->x = ( (float)(0) );
HXDLIN( 869)							_this34->y = ( (float)(0) );
HXDLIN( 869)							_this34->z = ( (float)(0) );
HXDLIN( 869)							_this34->w = ( (float)(((Float)1.0)) );
            						}
HXLINE( 870)						if ((c->link == HX_("_dim",49,82,17,3f))) {
HXLINE( 871)							 ::iron::math::Vec4 d = object->transform->dim;
HXLINE( 872)							 ::iron::math::Vec4 s = object->transform->scale;
HXLINE( 873)							{
HXLINE( 873)								 ::iron::math::Vec4 _this35 = ::iron::object::Uniforms_obj::helpVec;
HXDLIN( 873)								_this35->x = ( (float)((( (Float)(d->x) ) / ( (Float)(s->x) ))) );
HXDLIN( 873)								_this35->y = ( (float)((( (Float)(d->y) ) / ( (Float)(s->y) ))) );
HXDLIN( 873)								_this35->z = ( (float)((( (Float)(d->z) ) / ( (Float)(s->z) ))) );
HXDLIN( 873)								_this35->w = ( (float)(((Float)1.0)) );
            							}
HXLINE( 874)							v2 = ::iron::object::Uniforms_obj::helpVec;
            						}
            						else {
HXLINE( 876)							if ((c->link == HX_("_halfDim",d6,f6,f4,59))) {
HXLINE( 877)								 ::iron::math::Vec4 d1 = object->transform->dim;
HXLINE( 878)								 ::iron::math::Vec4 s1 = object->transform->scale;
HXLINE( 879)								{
HXLINE( 879)									 ::iron::math::Vec4 _this36 = ::iron::object::Uniforms_obj::helpVec;
HXDLIN( 879)									_this36->x = ( (float)(((( (Float)(d1->x) ) / ( (Float)(s1->x) )) / ( (Float)(2) ))) );
HXDLIN( 879)									_this36->y = ( (float)(((( (Float)(d1->y) ) / ( (Float)(s1->y) )) / ( (Float)(2) ))) );
HXDLIN( 879)									_this36->z = ( (float)(((( (Float)(d1->z) ) / ( (Float)(s1->z) )) / ( (Float)(2) ))) );
HXDLIN( 879)									_this36->w = ( (float)(((Float)1.0)) );
            								}
HXLINE( 880)								v2 = ::iron::object::Uniforms_obj::helpVec;
            							}
            							else {
HXLINE( 882)								if ((c->link == HX_("_probeVolumeCenter",60,77,fa,f0))) {
HXLINE( 883)									v2 = ::iron::Scene_obj::active->world->getProbeVolumeCenter(object->transform);
            								}
            								else {
HXLINE( 885)									if ((c->link == HX_("_probeVolumeSize",8c,e9,76,31))) {
HXLINE( 886)										v2 = ::iron::Scene_obj::active->world->getProbeVolumeSize(object->transform);
            									}
            									else {
HXLINE( 889)										if (hx::IsNotNull( ::iron::object::Uniforms_obj::externalVec3Links )) {
HXLINE( 890)											int _g3 = 0;
HXDLIN( 890)											::Array< ::Dynamic> _g12 = ::iron::object::Uniforms_obj::externalVec3Links;
HXDLIN( 890)											while((_g3 < _g12->length)){
HXLINE( 890)												 ::Dynamic f1 = _g12->__get(_g3);
HXDLIN( 890)												_g3 = (_g3 + 1);
HXLINE( 891)												 ::iron::data::MaterialData v3 = ::iron::object::Uniforms_obj::currentMat(object);
HXDLIN( 891)												v2 = ( ( ::iron::math::Vec4)(f1(object,v3,c->link)) );
HXLINE( 892)												if (hx::IsNotNull( v2 )) {
HXLINE( 892)													goto _hx_goto_14;
            												}
            											}
            											_hx_goto_14:;
            										}
            									}
            								}
            							}
            						}
HXLINE( 896)						if (hx::IsNull( v2 )) {
HXLINE( 896)							return;
            						}
HXLINE( 897)						::kha::graphics4::Graphics_obj::setFloat3(g,location,v2->x,v2->y,v2->z);
            					}
            					else {
HXLINE( 899)						if ((c->type == HX_("vec2",5e,27,4c,4e))) {
HXLINE( 900)							 ::Dynamic vx = null();
HXLINE( 901)							float vy = ( (float)(0) );
HXLINE( 902)							if ((c->link == HX_("_tilesheetOffset",a5,39,94,dc))) {
HXLINE( 903)								 ::iron::object::Tilesheet ts = hx::TCast<  ::iron::object::MeshObject >::cast(object)->tilesheet;
HXLINE( 904)								vx = ts->tileX;
HXLINE( 905)								vy = ( (float)(ts->tileY) );
            							}
            							else {
HXLINE( 908)								if (hx::IsNotNull( ::iron::object::Uniforms_obj::externalVec2Links )) {
HXLINE( 909)									int _g4 = 0;
HXDLIN( 909)									::Array< ::Dynamic> _g13 = ::iron::object::Uniforms_obj::externalVec2Links;
HXDLIN( 909)									while((_g4 < _g13->length)){
HXLINE( 909)										 ::Dynamic fn2 = _g13->__get(_g4);
HXDLIN( 909)										_g4 = (_g4 + 1);
HXLINE( 910)										 ::iron::data::MaterialData v4 = ::iron::object::Uniforms_obj::currentMat(object);
HXDLIN( 910)										 ::iron::math::Vec4 v5 = ( ( ::iron::math::Vec4)(fn2(object,v4,c->link)) );
HXLINE( 911)										if (hx::IsNotNull( v5 )) {
HXLINE( 912)											vx = v5->x;
HXLINE( 913)											vy = v5->y;
HXLINE( 914)											goto _hx_goto_15;
            										}
            									}
            									_hx_goto_15:;
            								}
            							}
HXLINE( 919)							if (hx::IsNull( vx )) {
HXLINE( 919)								return;
            							}
HXLINE( 920)							::kha::graphics4::Graphics_obj::setFloat2(g,location,vx,vy);
            						}
            						else {
HXLINE( 922)							if ((c->type == HX_("float",9c,c5,96,02))) {
HXLINE( 923)								 ::Dynamic f2 = null();
HXLINE( 924)								if ((c->link == HX_("_probeStrength",12,0a,39,28))) {
HXLINE( 925)									f2 = ::iron::Scene_obj::active->world->getProbeStrength(object->transform);
            								}
            								else {
HXLINE( 927)									if ((c->link == HX_("_probeBlending",c2,a4,90,04))) {
HXLINE( 928)										f2 = ::iron::Scene_obj::active->world->getProbeBlending(object->transform);
            									}
            									else {
HXLINE( 930)										if ((c->link == HX_("_objectInfoIndex",86,d7,3f,d3))) {
HXLINE( 931)											f2 = object->uid;
            										}
            										else {
HXLINE( 933)											if ((c->link == HX_("_objectInfoMaterialIndex",5f,41,73,67))) {
HXLINE( 934)												f2 = ::iron::object::Uniforms_obj::currentMat(object)->uid;
            											}
            											else {
HXLINE( 936)												if ((c->link == HX_("_objectInfoRandom",0f,cb,38,28))) {
HXLINE( 937)													f2 = object->urandom;
            												}
            												else {
HXLINE( 940)													if (hx::IsNotNull( ::iron::object::Uniforms_obj::externalFloatLinks )) {
HXLINE( 941)														int _g5 = 0;
HXDLIN( 941)														::Array< ::Dynamic> _g14 = ::iron::object::Uniforms_obj::externalFloatLinks;
HXDLIN( 941)														while((_g5 < _g14->length)){
HXLINE( 941)															 ::Dynamic fn3 = _g14->__get(_g5);
HXDLIN( 941)															_g5 = (_g5 + 1);
HXLINE( 942)															 ::iron::data::MaterialData res = ::iron::object::Uniforms_obj::currentMat(object);
HXDLIN( 942)															 ::Dynamic res1 = fn3(object,res,c->link);
HXLINE( 943)															if (hx::IsNotNull( res1 )) {
HXLINE( 944)																f2 = res1;
HXLINE( 945)																goto _hx_goto_16;
            															}
            														}
            														_hx_goto_16:;
            													}
            												}
            											}
            										}
            									}
            								}
HXLINE( 950)								if (hx::IsNull( f2 )) {
HXLINE( 950)									return;
            								}
HXLINE( 951)								::kha::graphics4::Graphics_obj::setFloat(g,location,f2);
            							}
            							else {
HXLINE( 953)								if ((c->type == HX_("floats",57,23,56,41))) {
HXLINE( 954)									 ::kha::arrays::Float32ArrayPrivate fa = null();
HXLINE( 956)									if ((c->link == HX_("_skinBones",b3,88,de,59))) {
HXLINE( 957)										if (hx::IsNotNull( object->animation )) {
HXLINE( 957)											fa = hx::TCast<  ::iron::object::BoneAnimation >::cast(object->animation)->skinBuffer;
            										}
            									}
HXLINE( 961)									bool _hx_tmp1;
HXDLIN( 961)									if (hx::IsNull( fa )) {
HXLINE( 961)										_hx_tmp1 = hx::IsNotNull( ::iron::object::Uniforms_obj::externalFloatsLinks );
            									}
            									else {
HXLINE( 961)										_hx_tmp1 = false;
            									}
HXDLIN( 961)									if (_hx_tmp1) {
HXLINE( 962)										int _g6 = 0;
HXDLIN( 962)										::Array< ::Dynamic> _g15 = ::iron::object::Uniforms_obj::externalFloatsLinks;
HXDLIN( 962)										while((_g6 < _g15->length)){
HXLINE( 962)											 ::Dynamic fn4 = _g15->__get(_g6);
HXDLIN( 962)											_g6 = (_g6 + 1);
HXLINE( 963)											 ::iron::data::MaterialData fa1 = ::iron::object::Uniforms_obj::currentMat(object);
HXDLIN( 963)											fa = ( ( ::kha::arrays::Float32ArrayPrivate)(fn4(object,fa1,c->link)) );
HXLINE( 964)											if (hx::IsNotNull( fa )) {
HXLINE( 964)												goto _hx_goto_17;
            											}
            										}
            										_hx_goto_17:;
            									}
HXLINE( 968)									if (hx::IsNull( fa )) {
HXLINE( 968)										return;
            									}
HXLINE( 969)									::kha::graphics4::Graphics_obj::setFloats(g,location,fa);
            								}
            								else {
HXLINE( 971)									if ((c->type == HX_("int",ef,0c,50,00))) {
HXLINE( 972)										 ::Dynamic i = null();
HXLINE( 973)										if ((c->link == HX_("_uid",91,68,24,3f))) {
HXLINE( 974)											i = object->uid;
            										}
            										else {
HXLINE( 981)											if (hx::IsNotNull( ::iron::object::Uniforms_obj::externalIntLinks )) {
HXLINE( 982)												int _g7 = 0;
HXDLIN( 982)												::Array< ::Dynamic> _g16 = ::iron::object::Uniforms_obj::externalIntLinks;
HXDLIN( 982)												while((_g7 < _g16->length)){
HXLINE( 982)													 ::Dynamic fn5 = _g16->__get(_g7);
HXDLIN( 982)													_g7 = (_g7 + 1);
HXLINE( 983)													 ::iron::data::MaterialData res2 = ::iron::object::Uniforms_obj::currentMat(object);
HXDLIN( 983)													 ::Dynamic res3 = fn5(object,res2,c->link);
HXLINE( 984)													if (hx::IsNotNull( res3 )) {
HXLINE( 985)														i = res3;
HXLINE( 986)														goto _hx_goto_18;
            													}
            												}
            												_hx_goto_18:;
            											}
            										}
HXLINE( 991)										if (hx::IsNull( i )) {
HXLINE( 991)											return;
            										}
HXLINE( 992)										::kha::graphics4::Graphics_obj::setInt(g,location,i);
            									}
            								}
            							}
            						}
            					}
            				}
            			}
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC6(Uniforms_obj,setObjectConstant,(void))

void Uniforms_obj::setMaterialConstants(::Dynamic g, ::iron::data::ShaderContext context, ::iron::data::MaterialContext materialContext){
            	HX_STACKFRAME(&_hx_pos_ed3d8b453cef9f5d_996_setMaterialConstants)
HXLINE( 997)		if (hx::IsNotNull( materialContext->raw->bind_constants )) {
HXLINE( 998)			int _g1 = 0;
HXDLIN( 998)			int _g = materialContext->raw->bind_constants->length;
HXDLIN( 998)			while((_g1 < _g)){
HXLINE( 998)				_g1 = (_g1 + 1);
HXDLIN( 998)				int i = (_g1 - 1);
HXLINE( 999)				 ::iron::data::TBindConstant matc = materialContext->raw->bind_constants->__get(i).StaticCast<  ::iron::data::TBindConstant >();
HXLINE(1000)				int pos = -1;
HXLINE(1001)				{
HXLINE(1001)					int _g3 = 0;
HXDLIN(1001)					int _g2 = context->raw->constants->length;
HXDLIN(1001)					while((_g3 < _g2)){
HXLINE(1001)						_g3 = (_g3 + 1);
HXDLIN(1001)						int i1 = (_g3 - 1);
HXLINE(1002)						if ((context->raw->constants->__get(i1).StaticCast<  ::iron::data::TShaderConstant >()->name == matc->name)) {
HXLINE(1003)							pos = i1;
HXLINE(1004)							goto _hx_goto_21;
            						}
            					}
            					_hx_goto_21:;
            				}
HXLINE(1007)				if ((pos == -1)) {
HXLINE(1007)					continue;
            				}
HXLINE(1008)				 ::iron::data::TShaderConstant c = context->raw->constants->__get(pos).StaticCast<  ::iron::data::TShaderConstant >();
HXLINE(1010)				::iron::object::Uniforms_obj::setMaterialConstant(g,context->constants->__get(pos),c,matc);
            			}
            		}
HXLINE(1014)		if (hx::IsNotNull( materialContext->textures )) {
HXLINE(1015)			int _g11 = 0;
HXDLIN(1015)			int _g4 = materialContext->textures->length;
HXDLIN(1015)			while((_g11 < _g4)){
HXLINE(1015)				_g11 = (_g11 + 1);
HXDLIN(1015)				int i2 = (_g11 - 1);
HXLINE(1016)				::String mname = materialContext->raw->bind_textures->__get(i2).StaticCast<  ::iron::data::TBindTexture >()->name;
HXLINE(1018)				{
HXLINE(1018)					int _g31 = 0;
HXDLIN(1018)					int _g21 = context->textureUnits->length;
HXDLIN(1018)					while((_g31 < _g21)){
HXLINE(1018)						_g31 = (_g31 + 1);
HXDLIN(1018)						int j = (_g31 - 1);
HXLINE(1019)						::String sname = context->raw->texture_units->__get(j).StaticCast<  ::iron::data::TTextureUnit >()->name;
HXLINE(1020)						if ((mname == sname)) {
HXLINE(1021)							::Dynamic context1 = context->textureUnits->__get(j);
HXDLIN(1021)							::kha::graphics4::Graphics_obj::setTexture(g,context1,_hx_array_unsafe_get(materialContext->textures,i2));
HXLINE(1023)							materialContext->setTextureParameters(g,i2,context,j);
HXLINE(1024)							goto _hx_goto_23;
            						}
            					}
            					_hx_goto_23:;
            				}
            			}
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Uniforms_obj,setMaterialConstants,(void))

 ::iron::data::MaterialData Uniforms_obj::currentMat( ::iron::object::Object object){
            	HX_STACKFRAME(&_hx_pos_ed3d8b453cef9f5d_1031_currentMat)
HXLINE(1032)		bool _hx_tmp;
HXDLIN(1032)		if (hx::IsNotNull( object )) {
HXLINE(1032)			_hx_tmp = ::Std_obj::is(object,hx::ClassOf< ::iron::object::MeshObject >());
            		}
            		else {
HXLINE(1032)			_hx_tmp = false;
            		}
HXDLIN(1032)		if (_hx_tmp) {
HXLINE(1032)			return ( ( ::iron::data::MaterialData)(_hx_array_unsafe_get(hx::TCast<  ::iron::object::MeshObject >::cast(object)->materials,0)) );
            		}
HXLINE(1033)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Uniforms_obj,currentMat,return )

void Uniforms_obj::setMaterialConstant(::Dynamic g,::Dynamic location, ::iron::data::TShaderConstant c, ::iron::data::TBindConstant matc){
            	HX_STACKFRAME(&_hx_pos_ed3d8b453cef9f5d_1037_setMaterialConstant)
HXDLIN(1037)		::String _g = c->type;
HXDLIN(1037)		::String _hx_switch_0 = _g;
            		if (  (_hx_switch_0==HX_("bool",2a,84,1b,41)) ){
HXLINE(1042)			::kha::graphics4::Graphics_obj::setBool(g,location,matc->_hx_bool);
HXDLIN(1042)			goto _hx_goto_26;
            		}
            		if (  (_hx_switch_0==HX_("float",9c,c5,96,02)) ){
HXLINE(1041)			::kha::graphics4::Graphics_obj::setFloat(g,location,matc->_hx_float);
HXDLIN(1041)			goto _hx_goto_26;
            		}
            		if (  (_hx_switch_0==HX_("int",ef,0c,50,00)) ){
HXLINE(1043)			::kha::graphics4::Graphics_obj::setInt(g,location,matc->_hx_int);
HXDLIN(1043)			goto _hx_goto_26;
            		}
            		if (  (_hx_switch_0==HX_("vec2",5e,27,4c,4e)) ){
HXLINE(1040)			float _hx_tmp = matc->vec2->self.get(0);
HXDLIN(1040)			::kha::graphics4::Graphics_obj::setFloat2(g,location,_hx_tmp,matc->vec2->self.get(1));
HXDLIN(1040)			goto _hx_goto_26;
            		}
            		if (  (_hx_switch_0==HX_("vec3",5f,27,4c,4e)) ){
HXLINE(1039)			float _hx_tmp1 = matc->vec3->self.get(0);
HXDLIN(1039)			float _hx_tmp2 = matc->vec3->self.get(1);
HXDLIN(1039)			::kha::graphics4::Graphics_obj::setFloat3(g,location,_hx_tmp1,_hx_tmp2,matc->vec3->self.get(2));
HXDLIN(1039)			goto _hx_goto_26;
            		}
            		if (  (_hx_switch_0==HX_("vec4",60,27,4c,4e)) ){
HXLINE(1038)			float _hx_tmp3 = matc->vec4->self.get(0);
HXDLIN(1038)			float _hx_tmp4 = matc->vec4->self.get(1);
HXDLIN(1038)			float _hx_tmp5 = matc->vec4->self.get(2);
HXDLIN(1038)			::kha::graphics4::Graphics_obj::setFloat4(g,location,_hx_tmp3,_hx_tmp4,_hx_tmp5,matc->vec4->self.get(3));
HXDLIN(1038)			goto _hx_goto_26;
            		}
            		_hx_goto_26:;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(Uniforms_obj,setMaterialConstant,(void))


Uniforms_obj::Uniforms_obj()
{
}

bool Uniforms_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"biasMat") ) { outValue = ( biasMat ); return true; }
		if (HX_FIELD_EQ(inName,"helpMat") ) { outValue = ( helpMat ); return true; }
		if (HX_FIELD_EQ(inName,"helpVec") ) { outValue = ( helpVec ); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"helpMat2") ) { outValue = ( helpMat2 ); return true; }
		if (HX_FIELD_EQ(inName,"helpMat3") ) { outValue = ( helpMat3 ); return true; }
		if (HX_FIELD_EQ(inName,"helpVec2") ) { outValue = ( helpVec2 ); return true; }
		if (HX_FIELD_EQ(inName,"helpQuat") ) { outValue = ( helpQuat ); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"currentMat") ) { outValue = currentMat_dyn(); return true; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"externalIntLinks") ) { outValue = ( externalIntLinks ); return true; }
		if (HX_FIELD_EQ(inName,"bindRenderTarget") ) { outValue = bindRenderTarget_dyn(); return true; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"externalMat4Links") ) { outValue = ( externalMat4Links ); return true; }
		if (HX_FIELD_EQ(inName,"externalVec4Links") ) { outValue = ( externalVec4Links ); return true; }
		if (HX_FIELD_EQ(inName,"externalVec3Links") ) { outValue = ( externalVec3Links ); return true; }
		if (HX_FIELD_EQ(inName,"externalVec2Links") ) { outValue = ( externalVec2Links ); return true; }
		if (HX_FIELD_EQ(inName,"setObjectConstant") ) { outValue = setObjectConstant_dyn(); return true; }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"externalFloatLinks") ) { outValue = ( externalFloatLinks ); return true; }
		if (HX_FIELD_EQ(inName,"setObjectConstants") ) { outValue = setObjectConstants_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"setContextConstant") ) { outValue = setContextConstant_dyn(); return true; }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"externalFloatsLinks") ) { outValue = ( externalFloatsLinks ); return true; }
		if (HX_FIELD_EQ(inName,"setContextConstants") ) { outValue = setContextConstants_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"setMaterialConstant") ) { outValue = setMaterialConstant_dyn(); return true; }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"externalTextureLinks") ) { outValue = ( externalTextureLinks ); return true; }
		if (HX_FIELD_EQ(inName,"setMaterialConstants") ) { outValue = setMaterialConstants_dyn(); return true; }
	}
	return false;
}

bool Uniforms_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"biasMat") ) { biasMat=ioValue.Cast<  ::iron::math::Mat4 >(); return true; }
		if (HX_FIELD_EQ(inName,"helpMat") ) { helpMat=ioValue.Cast<  ::iron::math::Mat4 >(); return true; }
		if (HX_FIELD_EQ(inName,"helpVec") ) { helpVec=ioValue.Cast<  ::iron::math::Vec4 >(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"helpMat2") ) { helpMat2=ioValue.Cast<  ::iron::math::Mat4 >(); return true; }
		if (HX_FIELD_EQ(inName,"helpMat3") ) { helpMat3=ioValue.Cast<  ::iron::math::Mat3 >(); return true; }
		if (HX_FIELD_EQ(inName,"helpVec2") ) { helpVec2=ioValue.Cast<  ::iron::math::Vec4 >(); return true; }
		if (HX_FIELD_EQ(inName,"helpQuat") ) { helpQuat=ioValue.Cast<  ::iron::math::Quat >(); return true; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"externalIntLinks") ) { externalIntLinks=ioValue.Cast< ::Array< ::Dynamic> >(); return true; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"externalMat4Links") ) { externalMat4Links=ioValue.Cast< ::Array< ::Dynamic> >(); return true; }
		if (HX_FIELD_EQ(inName,"externalVec4Links") ) { externalVec4Links=ioValue.Cast< ::Array< ::Dynamic> >(); return true; }
		if (HX_FIELD_EQ(inName,"externalVec3Links") ) { externalVec3Links=ioValue.Cast< ::Array< ::Dynamic> >(); return true; }
		if (HX_FIELD_EQ(inName,"externalVec2Links") ) { externalVec2Links=ioValue.Cast< ::Array< ::Dynamic> >(); return true; }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"externalFloatLinks") ) { externalFloatLinks=ioValue.Cast< ::Array< ::Dynamic> >(); return true; }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"externalFloatsLinks") ) { externalFloatsLinks=ioValue.Cast< ::Array< ::Dynamic> >(); return true; }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"externalTextureLinks") ) { externalTextureLinks=ioValue.Cast< ::Array< ::Dynamic> >(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo *Uniforms_obj_sMemberStorageInfo = 0;
static hx::StaticInfo Uniforms_obj_sStaticStorageInfo[] = {
	{hx::fsObject /*::iron::math::Mat4*/ ,(void *) &Uniforms_obj::biasMat,HX_("biasMat",a7,e9,cc,0c)},
	{hx::fsObject /*::iron::math::Mat4*/ ,(void *) &Uniforms_obj::helpMat,HX_("helpMat",5f,fe,4c,c0)},
	{hx::fsObject /*::iron::math::Mat4*/ ,(void *) &Uniforms_obj::helpMat2,HX_("helpMat2",f3,94,11,83)},
	{hx::fsObject /*::iron::math::Mat3*/ ,(void *) &Uniforms_obj::helpMat3,HX_("helpMat3",f4,94,11,83)},
	{hx::fsObject /*::iron::math::Vec4*/ ,(void *) &Uniforms_obj::helpVec,HX_("helpVec",13,d6,53,c0)},
	{hx::fsObject /*::iron::math::Vec4*/ ,(void *) &Uniforms_obj::helpVec2,HX_("helpVec2",bf,7a,07,89)},
	{hx::fsObject /*::iron::math::Quat*/ ,(void *) &Uniforms_obj::helpQuat,HX_("helpQuat",38,8c,c5,85)},
	{hx::fsObject /*cpp::ArrayBase*/ ,(void *) &Uniforms_obj::externalTextureLinks,HX_("externalTextureLinks",49,e3,76,e1)},
	{hx::fsObject /*cpp::ArrayBase*/ ,(void *) &Uniforms_obj::externalMat4Links,HX_("externalMat4Links",3a,55,07,66)},
	{hx::fsObject /*cpp::ArrayBase*/ ,(void *) &Uniforms_obj::externalVec4Links,HX_("externalVec4Links",ee,eb,60,f2)},
	{hx::fsObject /*cpp::ArrayBase*/ ,(void *) &Uniforms_obj::externalVec3Links,HX_("externalVec3Links",8f,8f,05,8c)},
	{hx::fsObject /*cpp::ArrayBase*/ ,(void *) &Uniforms_obj::externalVec2Links,HX_("externalVec2Links",30,33,aa,25)},
	{hx::fsObject /*cpp::ArrayBase*/ ,(void *) &Uniforms_obj::externalFloatLinks,HX_("externalFloatLinks",28,ea,5e,28)},
	{hx::fsObject /*cpp::ArrayBase*/ ,(void *) &Uniforms_obj::externalFloatsLinks,HX_("externalFloatsLinks",d7,67,ae,0c)},
	{hx::fsObject /*cpp::ArrayBase*/ ,(void *) &Uniforms_obj::externalIntLinks,HX_("externalIntLinks",35,c5,7f,3f)},
	{ hx::fsUnknown, 0, null()}
};
#endif

static void Uniforms_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Uniforms_obj::biasMat,"biasMat");
	HX_MARK_MEMBER_NAME(Uniforms_obj::helpMat,"helpMat");
	HX_MARK_MEMBER_NAME(Uniforms_obj::helpMat2,"helpMat2");
	HX_MARK_MEMBER_NAME(Uniforms_obj::helpMat3,"helpMat3");
	HX_MARK_MEMBER_NAME(Uniforms_obj::helpVec,"helpVec");
	HX_MARK_MEMBER_NAME(Uniforms_obj::helpVec2,"helpVec2");
	HX_MARK_MEMBER_NAME(Uniforms_obj::helpQuat,"helpQuat");
	HX_MARK_MEMBER_NAME(Uniforms_obj::externalTextureLinks,"externalTextureLinks");
	HX_MARK_MEMBER_NAME(Uniforms_obj::externalMat4Links,"externalMat4Links");
	HX_MARK_MEMBER_NAME(Uniforms_obj::externalVec4Links,"externalVec4Links");
	HX_MARK_MEMBER_NAME(Uniforms_obj::externalVec3Links,"externalVec3Links");
	HX_MARK_MEMBER_NAME(Uniforms_obj::externalVec2Links,"externalVec2Links");
	HX_MARK_MEMBER_NAME(Uniforms_obj::externalFloatLinks,"externalFloatLinks");
	HX_MARK_MEMBER_NAME(Uniforms_obj::externalFloatsLinks,"externalFloatsLinks");
	HX_MARK_MEMBER_NAME(Uniforms_obj::externalIntLinks,"externalIntLinks");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Uniforms_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Uniforms_obj::biasMat,"biasMat");
	HX_VISIT_MEMBER_NAME(Uniforms_obj::helpMat,"helpMat");
	HX_VISIT_MEMBER_NAME(Uniforms_obj::helpMat2,"helpMat2");
	HX_VISIT_MEMBER_NAME(Uniforms_obj::helpMat3,"helpMat3");
	HX_VISIT_MEMBER_NAME(Uniforms_obj::helpVec,"helpVec");
	HX_VISIT_MEMBER_NAME(Uniforms_obj::helpVec2,"helpVec2");
	HX_VISIT_MEMBER_NAME(Uniforms_obj::helpQuat,"helpQuat");
	HX_VISIT_MEMBER_NAME(Uniforms_obj::externalTextureLinks,"externalTextureLinks");
	HX_VISIT_MEMBER_NAME(Uniforms_obj::externalMat4Links,"externalMat4Links");
	HX_VISIT_MEMBER_NAME(Uniforms_obj::externalVec4Links,"externalVec4Links");
	HX_VISIT_MEMBER_NAME(Uniforms_obj::externalVec3Links,"externalVec3Links");
	HX_VISIT_MEMBER_NAME(Uniforms_obj::externalVec2Links,"externalVec2Links");
	HX_VISIT_MEMBER_NAME(Uniforms_obj::externalFloatLinks,"externalFloatLinks");
	HX_VISIT_MEMBER_NAME(Uniforms_obj::externalFloatsLinks,"externalFloatsLinks");
	HX_VISIT_MEMBER_NAME(Uniforms_obj::externalIntLinks,"externalIntLinks");
};

#endif

hx::Class Uniforms_obj::__mClass;

static ::String Uniforms_obj_sStaticFields[] = {
	HX_("biasMat",a7,e9,cc,0c),
	HX_("helpMat",5f,fe,4c,c0),
	HX_("helpMat2",f3,94,11,83),
	HX_("helpMat3",f4,94,11,83),
	HX_("helpVec",13,d6,53,c0),
	HX_("helpVec2",bf,7a,07,89),
	HX_("helpQuat",38,8c,c5,85),
	HX_("externalTextureLinks",49,e3,76,e1),
	HX_("externalMat4Links",3a,55,07,66),
	HX_("externalVec4Links",ee,eb,60,f2),
	HX_("externalVec3Links",8f,8f,05,8c),
	HX_("externalVec2Links",30,33,aa,25),
	HX_("externalFloatLinks",28,ea,5e,28),
	HX_("externalFloatsLinks",d7,67,ae,0c),
	HX_("externalIntLinks",35,c5,7f,3f),
	HX_("setContextConstants",62,66,f5,39),
	HX_("setObjectConstants",4e,5a,23,5f),
	HX_("bindRenderTarget",a4,60,a4,ff),
	HX_("setContextConstant",f1,ec,b9,68),
	HX_("setObjectConstant",85,da,3b,35),
	HX_("setMaterialConstants",e6,9a,ce,60),
	HX_("currentMat",e7,cf,2d,c7),
	HX_("setMaterialConstant",ed,b4,ef,70),
	::String(null())
};

void Uniforms_obj::__register()
{
	Uniforms_obj _hx_dummy;
	Uniforms_obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("iron.object.Uniforms",48,55,b2,f4);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Uniforms_obj::__GetStatic;
	__mClass->mSetStaticField = &Uniforms_obj::__SetStatic;
	__mClass->mMarkFunc = Uniforms_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(Uniforms_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< Uniforms_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Uniforms_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Uniforms_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Uniforms_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void Uniforms_obj::__boot()
{
{
            	HX_GC_STACKFRAME(&_hx_pos_ed3d8b453cef9f5d_24_boot)
HXDLIN(  24)		biasMat =  ::iron::math::Mat4_obj::__alloc( HX_CTX ,( (float)(((Float)0.5)) ),( (float)(((Float)0.0)) ),( (float)(((Float)0.0)) ),( (float)(((Float)0.5)) ),( (float)(((Float)0.0)) ),( (float)(((Float)0.5)) ),( (float)(((Float)0.0)) ),( (float)(((Float)0.5)) ),( (float)(((Float)0.0)) ),( (float)(((Float)0.0)) ),( (float)(((Float)0.5)) ),( (float)(((Float)0.5)) ),( (float)(((Float)0.0)) ),( (float)(((Float)0.0)) ),( (float)(((Float)0.0)) ),( (float)(((Float)1.0)) ));
            	}
{
            	HX_GC_STACKFRAME(&_hx_pos_ed3d8b453cef9f5d_36_boot)
HXDLIN(  36)		helpMat =  ::iron::math::Mat4_obj::__alloc( HX_CTX ,( (float)(((Float)1.0)) ),( (float)(((Float)0.0)) ),( (float)(((Float)0.0)) ),( (float)(((Float)0.0)) ),( (float)(((Float)0.0)) ),( (float)(((Float)1.0)) ),( (float)(((Float)0.0)) ),( (float)(((Float)0.0)) ),( (float)(((Float)0.0)) ),( (float)(((Float)0.0)) ),( (float)(((Float)1.0)) ),( (float)(((Float)0.0)) ),( (float)(((Float)0.0)) ),( (float)(((Float)0.0)) ),( (float)(((Float)0.0)) ),( (float)(((Float)1.0)) ));
            	}
{
            	HX_GC_STACKFRAME(&_hx_pos_ed3d8b453cef9f5d_37_boot)
HXDLIN(  37)		helpMat2 =  ::iron::math::Mat4_obj::__alloc( HX_CTX ,( (float)(((Float)1.0)) ),( (float)(((Float)0.0)) ),( (float)(((Float)0.0)) ),( (float)(((Float)0.0)) ),( (float)(((Float)0.0)) ),( (float)(((Float)1.0)) ),( (float)(((Float)0.0)) ),( (float)(((Float)0.0)) ),( (float)(((Float)0.0)) ),( (float)(((Float)0.0)) ),( (float)(((Float)1.0)) ),( (float)(((Float)0.0)) ),( (float)(((Float)0.0)) ),( (float)(((Float)0.0)) ),( (float)(((Float)0.0)) ),( (float)(((Float)1.0)) ));
            	}
{
            	HX_GC_STACKFRAME(&_hx_pos_ed3d8b453cef9f5d_38_boot)
HXDLIN(  38)		helpMat3 =  ::iron::math::Mat3_obj::__alloc( HX_CTX ,( (float)(1) ),( (float)(0) ),( (float)(0) ),( (float)(0) ),( (float)(1) ),( (float)(0) ),( (float)(0) ),( (float)(0) ),( (float)(1) ));
            	}
{
            	HX_GC_STACKFRAME(&_hx_pos_ed3d8b453cef9f5d_39_boot)
HXDLIN(  39)		helpVec =  ::iron::math::Vec4_obj::__alloc( HX_CTX ,null(),null(),null(),null());
            	}
{
            	HX_GC_STACKFRAME(&_hx_pos_ed3d8b453cef9f5d_40_boot)
HXDLIN(  40)		helpVec2 =  ::iron::math::Vec4_obj::__alloc( HX_CTX ,null(),null(),null(),null());
            	}
{
            	HX_GC_STACKFRAME(&_hx_pos_ed3d8b453cef9f5d_41_boot)
HXDLIN(  41)		helpQuat =  ::iron::math::Quat_obj::__alloc( HX_CTX ,null(),null(),null(),null());
            	}
{
            	HX_STACKFRAME(&_hx_pos_ed3d8b453cef9f5d_43_boot)
HXDLIN(  43)		externalTextureLinks = null();
            	}
{
            	HX_STACKFRAME(&_hx_pos_ed3d8b453cef9f5d_44_boot)
HXDLIN(  44)		externalMat4Links = null();
            	}
{
            	HX_STACKFRAME(&_hx_pos_ed3d8b453cef9f5d_45_boot)
HXDLIN(  45)		externalVec4Links = null();
            	}
{
            	HX_STACKFRAME(&_hx_pos_ed3d8b453cef9f5d_46_boot)
HXDLIN(  46)		externalVec3Links = null();
            	}
{
            	HX_STACKFRAME(&_hx_pos_ed3d8b453cef9f5d_47_boot)
HXDLIN(  47)		externalVec2Links = null();
            	}
{
            	HX_STACKFRAME(&_hx_pos_ed3d8b453cef9f5d_48_boot)
HXDLIN(  48)		externalFloatLinks = null();
            	}
{
            	HX_STACKFRAME(&_hx_pos_ed3d8b453cef9f5d_49_boot)
HXDLIN(  49)		externalFloatsLinks = null();
            	}
{
            	HX_STACKFRAME(&_hx_pos_ed3d8b453cef9f5d_50_boot)
HXDLIN(  50)		externalIntLinks = null();
            	}
}

} // end namespace iron
} // end namespace object
