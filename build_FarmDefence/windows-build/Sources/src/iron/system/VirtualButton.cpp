// Generated by Haxe 4.0.0-preview.4+6e012c1
#include <hxcpp.h>

#ifndef INCLUDED_iron_system_VirtualButton
#include <hxinc/iron/system/VirtualButton.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_0070f08c40120be8_86_new,"iron.system.VirtualButton","new",0x5ae42456,"iron.system.VirtualButton.new","iron/system/Input.hx",86,0x32439d6d)
namespace iron{
namespace _hx_system{

void VirtualButton_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_0070f08c40120be8_86_new)
HXLINE(  89)		this->down = false;
HXLINE(  88)		this->released = false;
HXLINE(  87)		this->started = false;
            	}

Dynamic VirtualButton_obj::__CreateEmpty() { return new VirtualButton_obj; }

void *VirtualButton_obj::_hx_vtable = 0;

Dynamic VirtualButton_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< VirtualButton_obj > _hx_result = new VirtualButton_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool VirtualButton_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x42e93666;
}


VirtualButton_obj::VirtualButton_obj()
{
}

hx::Val VirtualButton_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"down") ) { return hx::Val( down ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"started") ) { return hx::Val( started ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"released") ) { return hx::Val( released ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val VirtualButton_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"down") ) { down=inValue.Cast< bool >(); return inValue; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"started") ) { started=inValue.Cast< bool >(); return inValue; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"released") ) { released=inValue.Cast< bool >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void VirtualButton_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("started",41,29,1b,35));
	outFields->push(HX_("released",bd,88,e7,76));
	outFields->push(HX_("down",62,f8,6d,42));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo VirtualButton_obj_sMemberStorageInfo[] = {
	{hx::fsBool,(int)offsetof(VirtualButton_obj,started),HX_("started",41,29,1b,35)},
	{hx::fsBool,(int)offsetof(VirtualButton_obj,released),HX_("released",bd,88,e7,76)},
	{hx::fsBool,(int)offsetof(VirtualButton_obj,down),HX_("down",62,f8,6d,42)},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *VirtualButton_obj_sStaticStorageInfo = 0;
#endif

static ::String VirtualButton_obj_sMemberFields[] = {
	HX_("started",41,29,1b,35),
	HX_("released",bd,88,e7,76),
	HX_("down",62,f8,6d,42),
	::String(null()) };

hx::Class VirtualButton_obj::__mClass;

void VirtualButton_obj::__register()
{
	VirtualButton_obj _hx_dummy;
	VirtualButton_obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("iron.system.VirtualButton",64,01,82,d8);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(VirtualButton_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< VirtualButton_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = VirtualButton_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = VirtualButton_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace iron
} // end namespace system
