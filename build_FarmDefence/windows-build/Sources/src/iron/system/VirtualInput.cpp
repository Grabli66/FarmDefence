// Generated by Haxe 4.0.0-preview.4+6e012c1
#include <hxcpp.h>

#ifndef INCLUDED_haxe_IMap
#include <hxinc/haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_ds_StringMap
#include <hxinc/haxe/ds/StringMap.h>
#endif
#ifndef INCLUDED_iron_system_Input
#include <hxinc/iron/system/Input.h>
#endif
#ifndef INCLUDED_iron_system_VirtualButton
#include <hxinc/iron/system/VirtualButton.h>
#endif
#ifndef INCLUDED_iron_system_VirtualInput
#include <hxinc/iron/system/VirtualInput.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_3ad20b85b0a6c3fd_94_new,"iron.system.VirtualInput","new",0x7b5345ca,"iron.system.VirtualInput.new","iron/system/Input.hx",94,0x32439d6d)
HX_LOCAL_STACK_FRAME(_hx_pos_3ad20b85b0a6c3fd_96_setVirtual,"iron.system.VirtualInput","setVirtual",0x99dd2e5f,"iron.system.VirtualInput.setVirtual","iron/system/Input.hx",96,0x32439d6d)
HX_LOCAL_STACK_FRAME(_hx_pos_3ad20b85b0a6c3fd_110_downVirtual,"iron.system.VirtualInput","downVirtual",0xfc656d33,"iron.system.VirtualInput.downVirtual","iron/system/Input.hx",110,0x32439d6d)
HX_LOCAL_STACK_FRAME(_hx_pos_3ad20b85b0a6c3fd_117_upVirtual,"iron.system.VirtualInput","upVirtual",0x1e3211da,"iron.system.VirtualInput.upVirtual","iron/system/Input.hx",117,0x32439d6d)
namespace iron{
namespace _hx_system{

void VirtualInput_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_3ad20b85b0a6c3fd_94_new)
HXDLIN(  94)		this->virtualButtons = null();
            	}

Dynamic VirtualInput_obj::__CreateEmpty() { return new VirtualInput_obj; }

void *VirtualInput_obj::_hx_vtable = 0;

Dynamic VirtualInput_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< VirtualInput_obj > _hx_result = new VirtualInput_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool VirtualInput_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x15b014de;
}

void VirtualInput_obj::setVirtual(::String _hx_virtual,::String button){
            	HX_GC_STACKFRAME(&_hx_pos_3ad20b85b0a6c3fd_96_setVirtual)
HXLINE(  97)		if (hx::IsNull( ::iron::_hx_system::Input_obj::virtualButtons )) {
HXLINE(  97)			::iron::_hx_system::Input_obj::virtualButtons =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
            		}
HXLINE(  99)		 ::iron::_hx_system::VirtualButton vb = ( ( ::iron::_hx_system::VirtualButton)(::iron::_hx_system::Input_obj::virtualButtons->get(_hx_virtual)) );
HXLINE( 100)		if (hx::IsNull( vb )) {
HXLINE( 101)			vb =  ::iron::_hx_system::VirtualButton_obj::__alloc( HX_CTX );
HXLINE( 102)			::iron::_hx_system::Input_obj::virtualButtons->set(_hx_virtual,vb);
            		}
HXLINE( 105)		if (hx::IsNull( this->virtualButtons )) {
HXLINE( 105)			this->virtualButtons =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
            		}
HXLINE( 106)		this->virtualButtons->set(button,vb);
            	}


HX_DEFINE_DYNAMIC_FUNC2(VirtualInput_obj,setVirtual,(void))

void VirtualInput_obj::downVirtual(::String button){
            	HX_STACKFRAME(&_hx_pos_3ad20b85b0a6c3fd_110_downVirtual)
HXDLIN( 110)		if (hx::IsNotNull( this->virtualButtons )) {
HXLINE( 111)			 ::iron::_hx_system::VirtualButton vb = ( ( ::iron::_hx_system::VirtualButton)(this->virtualButtons->get(button)) );
HXLINE( 112)			if (hx::IsNotNull( vb )) {
HXLINE( 112)				vb->down = true;
HXDLIN( 112)				vb->started = true;
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(VirtualInput_obj,downVirtual,(void))

void VirtualInput_obj::upVirtual(::String button){
            	HX_STACKFRAME(&_hx_pos_3ad20b85b0a6c3fd_117_upVirtual)
HXDLIN( 117)		if (hx::IsNotNull( this->virtualButtons )) {
HXLINE( 118)			 ::iron::_hx_system::VirtualButton vb = ( ( ::iron::_hx_system::VirtualButton)(this->virtualButtons->get(button)) );
HXLINE( 119)			if (hx::IsNotNull( vb )) {
HXLINE( 119)				vb->down = false;
HXDLIN( 119)				vb->released = true;
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(VirtualInput_obj,upVirtual,(void))


hx::ObjectPtr< VirtualInput_obj > VirtualInput_obj::__new() {
	hx::ObjectPtr< VirtualInput_obj > __this = new VirtualInput_obj();
	__this->__construct();
	return __this;
}

hx::ObjectPtr< VirtualInput_obj > VirtualInput_obj::__alloc(hx::Ctx *_hx_ctx) {
	VirtualInput_obj *__this = (VirtualInput_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(VirtualInput_obj), true, "iron.system.VirtualInput"));
	*(void **)__this = VirtualInput_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

VirtualInput_obj::VirtualInput_obj()
{
}

void VirtualInput_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(VirtualInput);
	HX_MARK_MEMBER_NAME(virtualButtons,"virtualButtons");
	HX_MARK_END_CLASS();
}

void VirtualInput_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(virtualButtons,"virtualButtons");
}

hx::Val VirtualInput_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 9:
		if (HX_FIELD_EQ(inName,"upVirtual") ) { return hx::Val( upVirtual_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"setVirtual") ) { return hx::Val( setVirtual_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"downVirtual") ) { return hx::Val( downVirtual_dyn() ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"virtualButtons") ) { return hx::Val( virtualButtons ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val VirtualInput_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 14:
		if (HX_FIELD_EQ(inName,"virtualButtons") ) { virtualButtons=inValue.Cast<  ::haxe::ds::StringMap >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void VirtualInput_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("virtualButtons",76,83,6f,8c));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo VirtualInput_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*::haxe::ds::StringMap*/ ,(int)offsetof(VirtualInput_obj,virtualButtons),HX_("virtualButtons",76,83,6f,8c)},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *VirtualInput_obj_sStaticStorageInfo = 0;
#endif

static ::String VirtualInput_obj_sMemberFields[] = {
	HX_("virtualButtons",76,83,6f,8c),
	HX_("setVirtual",89,c2,f0,69),
	HX_("downVirtual",c9,7d,73,3d),
	HX_("upVirtual",f0,b0,c9,52),
	::String(null()) };

hx::Class VirtualInput_obj::__mClass;

void VirtualInput_obj::__register()
{
	VirtualInput_obj _hx_dummy;
	VirtualInput_obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("iron.system.VirtualInput",d8,58,fe,e3);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(VirtualInput_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< VirtualInput_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = VirtualInput_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = VirtualInput_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace iron
} // end namespace system
