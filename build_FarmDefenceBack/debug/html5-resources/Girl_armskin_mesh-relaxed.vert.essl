#version 100

uniform mediump vec4 skinBones[56];
uniform mediump mat4 W;
uniform mediump mat3 N;
uniform mediump mat4 WVP;
uniform mediump vec3 eye;
uniform mediump int lightShadow;
uniform mediump mat4 LWVP;

attribute mediump vec3 pos;
varying mediump vec2 texCoord;
attribute mediump vec2 tex;
attribute mediump vec4 bone;
attribute mediump vec4 weight;
varying mediump vec3 wposition;
varying mediump vec3 wnormal;
attribute mediump vec3 nor;
varying mediump vec3 eyeDir;
varying mediump vec4 lightPosition;

void getSkinningDualQuat(mediump ivec4 bone_1, inout mediump vec4 weight_1, inout mediump vec4 A, inout mediump vec4 B)
{
    mediump ivec4 bonei = bone_1 * ivec4(2);
    mediump mat4 matA = mat4(vec4(skinBones[bonei.x]), vec4(skinBones[bonei.y]), vec4(skinBones[bonei.z]), vec4(skinBones[bonei.w]));
    mediump mat4 matB = mat4(vec4(skinBones[bonei.x + 1]), vec4(skinBones[bonei.y + 1]), vec4(skinBones[bonei.z + 1]), vec4(skinBones[bonei.w + 1]));
    mediump vec3 _129 = weight_1.xyz * sign(matA[3] * matA).xyz;
    weight_1 = vec4(_129.x, _129.y, _129.z, weight_1.w);
    A = matA * weight_1;
    B = matB * weight_1;
    mediump float invNormA = 1.0 / length(A);
    A *= invNormA;
    B *= invNormA;
}

void main()
{
    mediump vec4 spos = vec4(pos, 1.0);
    texCoord = tex;
    mediump vec4 param = weight;
    mediump vec4 skinB;
    mediump vec4 param_2 = skinB;
    mediump vec4 param_1;
    getSkinningDualQuat(ivec4(bone), param, param_1, param_2);
    mediump vec4 skinA = param_1;
    skinB = param_2;
    mediump vec3 _196 = spos.xyz + (cross(skinA.xyz, cross(skinA.xyz, spos.xyz) + (spos.xyz * skinA.w)) * 2.0);
    spos = vec4(_196.x, _196.y, _196.z, spos.w);
    mediump vec3 _219 = spos.xyz + ((((skinB.xyz * skinA.w) - (skinA.xyz * skinB.w)) + cross(skinA.xyz, skinB.xyz)) * 2.0);
    spos = vec4(_219.x, _219.y, _219.z, spos.w);
    wposition = vec4(W * spos).xyz;
    wnormal = normalize(N * (nor + (cross(skinA.xyz, cross(skinA.xyz, nor) + (nor * skinA.w)) * 2.0)));
    gl_Position = WVP * spos;
    eyeDir = eye - wposition;
    if (lightShadow == 1)
    {
        lightPosition = LWVP * spos;
    }
}

